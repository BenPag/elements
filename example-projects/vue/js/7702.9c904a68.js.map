{"version":3,"file":"js/7702.9c904a68.js","mappings":"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","sources":["webpack://elements-vue-example/../elements/dist/esm/_commonjsHelpers-6ccee0aa.js","webpack://elements-vue-example/../elements/dist/esm/component-d82ae612.js","webpack://elements-vue-example/../elements/dist/esm/index-7e3a00fd.js"],"sourcesContent":["/*!\n * Crafted with ❤ by inovex GmbH\n */\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire();\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nexport { commonjsGlobal as a, createCommonjsModule as c };\n","/*!\n * Crafted with ❤ by inovex GmbH\n */\nimport { _ as __extends, a as __assign, M as MDCFoundation, c as MDCComponent, b as __values } from './component-97c8fef9.js';\nimport { a as applyPassive, M as MDCRipple, b as MDCRippleFoundation } from './component-780a5882.js';\nimport { m as matches } from './ponyfill-495ec32d.js';\nimport { a as MDCLineRipple, M as MDCFloatingLabel, b as MDCNotchedOutline } from './component-c1cba297.js';\n\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses$3 = {\n    ROOT: 'mdc-text-field-character-counter',\n};\nvar strings$3 = {\n    ROOT_SELECTOR: \".\" + cssClasses$3.ROOT,\n};\n\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCTextFieldCharacterCounterFoundation = /** @class */ (function (_super) {\n    __extends(MDCTextFieldCharacterCounterFoundation, _super);\n    function MDCTextFieldCharacterCounterFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCTextFieldCharacterCounterFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCTextFieldCharacterCounterFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses$3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldCharacterCounterFoundation, \"strings\", {\n        get: function () {\n            return strings$3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldCharacterCounterFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCTextFieldCharacterCounterAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            return {\n                setContent: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCTextFieldCharacterCounterFoundation.prototype.setCounterValue = function (currentLength, maxLength) {\n        currentLength = Math.min(currentLength, maxLength);\n        this.adapter.setContent(currentLength + \" / \" + maxLength);\n    };\n    return MDCTextFieldCharacterCounterFoundation;\n}(MDCFoundation));\n\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCTextFieldCharacterCounter = /** @class */ (function (_super) {\n    __extends(MDCTextFieldCharacterCounter, _super);\n    function MDCTextFieldCharacterCounter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTextFieldCharacterCounter.attachTo = function (root) {\n        return new MDCTextFieldCharacterCounter(root);\n    };\n    Object.defineProperty(MDCTextFieldCharacterCounter.prototype, \"foundationForTextField\", {\n        // Provided for access by MDCTextField component\n        get: function () {\n            return this.foundation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCTextFieldCharacterCounter.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            setContent: function (content) {\n                _this.root.textContent = content;\n            },\n        };\n        return new MDCTextFieldCharacterCounterFoundation(adapter);\n    };\n    return MDCTextFieldCharacterCounter;\n}(MDCComponent));\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings$2 = {\n    ARIA_CONTROLS: 'aria-controls',\n    ARIA_DESCRIBEDBY: 'aria-describedby',\n    INPUT_SELECTOR: '.mdc-text-field__input',\n    LABEL_SELECTOR: '.mdc-floating-label',\n    LEADING_ICON_SELECTOR: '.mdc-text-field__icon--leading',\n    LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',\n    OUTLINE_SELECTOR: '.mdc-notched-outline',\n    PREFIX_SELECTOR: '.mdc-text-field__affix--prefix',\n    SUFFIX_SELECTOR: '.mdc-text-field__affix--suffix',\n    TRAILING_ICON_SELECTOR: '.mdc-text-field__icon--trailing'\n};\nvar cssClasses$2 = {\n    DISABLED: 'mdc-text-field--disabled',\n    FOCUSED: 'mdc-text-field--focused',\n    HELPER_LINE: 'mdc-text-field-helper-line',\n    INVALID: 'mdc-text-field--invalid',\n    LABEL_FLOATING: 'mdc-text-field--label-floating',\n    NO_LABEL: 'mdc-text-field--no-label',\n    OUTLINED: 'mdc-text-field--outlined',\n    ROOT: 'mdc-text-field',\n    TEXTAREA: 'mdc-text-field--textarea',\n    WITH_LEADING_ICON: 'mdc-text-field--with-leading-icon',\n    WITH_TRAILING_ICON: 'mdc-text-field--with-trailing-icon',\n    WITH_INTERNAL_COUNTER: 'mdc-text-field--with-internal-counter',\n};\nvar numbers = {\n    LABEL_SCALE: 0.75,\n};\n/**\n * Whitelist based off of\n * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation\n * under the \"Validation-related attributes\" section.\n */\nvar VALIDATION_ATTR_WHITELIST = [\n    'pattern',\n    'min',\n    'max',\n    'required',\n    'step',\n    'minlength',\n    'maxlength',\n];\n/**\n * Label should always float for these types as they show some UI even if value\n * is empty.\n */\nvar ALWAYS_FLOAT_TYPES = [\n    'color',\n    'date',\n    'datetime-local',\n    'month',\n    'range',\n    'time',\n    'week',\n];\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar POINTERDOWN_EVENTS = ['mousedown', 'touchstart'];\nvar INTERACTION_EVENTS$1 = ['click', 'keydown'];\nvar MDCTextFieldFoundation = /** @class */ (function (_super) {\n    __extends(MDCTextFieldFoundation, _super);\n    /**\n     * @param adapter\n     * @param foundationMap Map from subcomponent names to their subfoundations.\n     */\n    function MDCTextFieldFoundation(adapter, foundationMap) {\n        if (foundationMap === void 0) { foundationMap = {}; }\n        var _this = _super.call(this, __assign(__assign({}, MDCTextFieldFoundation.defaultAdapter), adapter)) || this;\n        _this.isFocused = false;\n        _this.receivedUserInput = false;\n        _this.valid = true;\n        _this.useNativeValidation = true;\n        _this.validateOnValueChange = true;\n        _this.helperText = foundationMap.helperText;\n        _this.characterCounter = foundationMap.characterCounter;\n        _this.leadingIcon = foundationMap.leadingIcon;\n        _this.trailingIcon = foundationMap.trailingIcon;\n        _this.inputFocusHandler = function () {\n            _this.activateFocus();\n        };\n        _this.inputBlurHandler = function () {\n            _this.deactivateFocus();\n        };\n        _this.inputInputHandler = function () {\n            _this.handleInput();\n        };\n        _this.setPointerXOffset = function (evt) {\n            _this.setTransformOrigin(evt);\n        };\n        _this.textFieldInteractionHandler = function () {\n            _this.handleTextFieldInteraction();\n        };\n        _this.validationAttributeChangeHandler = function (attributesList) {\n            _this.handleValidationAttributeChange(attributesList);\n        };\n        return _this;\n    }\n    Object.defineProperty(MDCTextFieldFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses$2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation, \"strings\", {\n        get: function () {\n            return strings$2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldAlwaysFloat\", {\n        get: function () {\n            var type = this.getNativeInput().type;\n            return ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldFloat\", {\n        get: function () {\n            return this.shouldAlwaysFloat || this.isFocused || !!this.getValue() ||\n                this.isBadInput();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation.prototype, \"shouldShake\", {\n        get: function () {\n            return !this.isFocused && !this.isValid() && !!this.getValue();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCTextFieldAdapter} for typing information on parameters and\n         * return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return true; },\n                setInputAttr: function () { return undefined; },\n                removeInputAttr: function () { return undefined; },\n                registerTextFieldInteractionHandler: function () { return undefined; },\n                deregisterTextFieldInteractionHandler: function () { return undefined; },\n                registerInputInteractionHandler: function () { return undefined; },\n                deregisterInputInteractionHandler: function () { return undefined; },\n                registerValidationAttributeChangeHandler: function () {\n                    return new MutationObserver(function () { return undefined; });\n                },\n                deregisterValidationAttributeChangeHandler: function () { return undefined; },\n                getNativeInput: function () { return null; },\n                isFocused: function () { return false; },\n                activateLineRipple: function () { return undefined; },\n                deactivateLineRipple: function () { return undefined; },\n                setLineRippleTransformOrigin: function () { return undefined; },\n                shakeLabel: function () { return undefined; },\n                floatLabel: function () { return undefined; },\n                setLabelRequired: function () { return undefined; },\n                hasLabel: function () { return false; },\n                getLabelWidth: function () { return 0; },\n                hasOutline: function () { return false; },\n                notchOutline: function () { return undefined; },\n                closeOutline: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCTextFieldFoundation.prototype.init = function () {\n        var e_1, _a, e_2, _b;\n        if (this.adapter.hasLabel() && this.getNativeInput().required) {\n            this.adapter.setLabelRequired(true);\n        }\n        if (this.adapter.isFocused()) {\n            this.inputFocusHandler();\n        }\n        else if (this.adapter.hasLabel() && this.shouldFloat) {\n            this.notchOutline(true);\n            this.adapter.floatLabel(true);\n            this.styleFloating(true);\n        }\n        this.adapter.registerInputInteractionHandler('focus', this.inputFocusHandler);\n        this.adapter.registerInputInteractionHandler('blur', this.inputBlurHandler);\n        this.adapter.registerInputInteractionHandler('input', this.inputInputHandler);\n        try {\n            for (var POINTERDOWN_EVENTS_1 = __values(POINTERDOWN_EVENTS), POINTERDOWN_EVENTS_1_1 = POINTERDOWN_EVENTS_1.next(); !POINTERDOWN_EVENTS_1_1.done; POINTERDOWN_EVENTS_1_1 = POINTERDOWN_EVENTS_1.next()) {\n                var evtType = POINTERDOWN_EVENTS_1_1.value;\n                this.adapter.registerInputInteractionHandler(evtType, this.setPointerXOffset);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (POINTERDOWN_EVENTS_1_1 && !POINTERDOWN_EVENTS_1_1.done && (_a = POINTERDOWN_EVENTS_1.return)) _a.call(POINTERDOWN_EVENTS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var INTERACTION_EVENTS_1 = __values(INTERACTION_EVENTS$1), INTERACTION_EVENTS_1_1 = INTERACTION_EVENTS_1.next(); !INTERACTION_EVENTS_1_1.done; INTERACTION_EVENTS_1_1 = INTERACTION_EVENTS_1.next()) {\n                var evtType = INTERACTION_EVENTS_1_1.value;\n                this.adapter.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (INTERACTION_EVENTS_1_1 && !INTERACTION_EVENTS_1_1.done && (_b = INTERACTION_EVENTS_1.return)) _b.call(INTERACTION_EVENTS_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        this.validationObserver =\n            this.adapter.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler);\n        this.setcharacterCounter(this.getValue().length);\n    };\n    MDCTextFieldFoundation.prototype.destroy = function () {\n        var e_3, _a, e_4, _b;\n        this.adapter.deregisterInputInteractionHandler('focus', this.inputFocusHandler);\n        this.adapter.deregisterInputInteractionHandler('blur', this.inputBlurHandler);\n        this.adapter.deregisterInputInteractionHandler('input', this.inputInputHandler);\n        try {\n            for (var POINTERDOWN_EVENTS_2 = __values(POINTERDOWN_EVENTS), POINTERDOWN_EVENTS_2_1 = POINTERDOWN_EVENTS_2.next(); !POINTERDOWN_EVENTS_2_1.done; POINTERDOWN_EVENTS_2_1 = POINTERDOWN_EVENTS_2.next()) {\n                var evtType = POINTERDOWN_EVENTS_2_1.value;\n                this.adapter.deregisterInputInteractionHandler(evtType, this.setPointerXOffset);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (POINTERDOWN_EVENTS_2_1 && !POINTERDOWN_EVENTS_2_1.done && (_a = POINTERDOWN_EVENTS_2.return)) _a.call(POINTERDOWN_EVENTS_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        try {\n            for (var INTERACTION_EVENTS_2 = __values(INTERACTION_EVENTS$1), INTERACTION_EVENTS_2_1 = INTERACTION_EVENTS_2.next(); !INTERACTION_EVENTS_2_1.done; INTERACTION_EVENTS_2_1 = INTERACTION_EVENTS_2.next()) {\n                var evtType = INTERACTION_EVENTS_2_1.value;\n                this.adapter.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (INTERACTION_EVENTS_2_1 && !INTERACTION_EVENTS_2_1.done && (_b = INTERACTION_EVENTS_2.return)) _b.call(INTERACTION_EVENTS_2);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        this.adapter.deregisterValidationAttributeChangeHandler(this.validationObserver);\n    };\n    /**\n     * Handles user interactions with the Text Field.\n     */\n    MDCTextFieldFoundation.prototype.handleTextFieldInteraction = function () {\n        var nativeInput = this.adapter.getNativeInput();\n        if (nativeInput && nativeInput.disabled) {\n            return;\n        }\n        this.receivedUserInput = true;\n    };\n    /**\n     * Handles validation attribute changes\n     */\n    MDCTextFieldFoundation.prototype.handleValidationAttributeChange = function (attributesList) {\n        var _this = this;\n        attributesList.some(function (attributeName) {\n            if (VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {\n                _this.styleValidity(true);\n                _this.adapter.setLabelRequired(_this.getNativeInput().required);\n                return true;\n            }\n            return false;\n        });\n        if (attributesList.indexOf('maxlength') > -1) {\n            this.setcharacterCounter(this.getValue().length);\n        }\n    };\n    /**\n     * Opens/closes the notched outline.\n     */\n    MDCTextFieldFoundation.prototype.notchOutline = function (openNotch) {\n        if (!this.adapter.hasOutline() || !this.adapter.hasLabel()) {\n            return;\n        }\n        if (openNotch) {\n            var labelWidth = this.adapter.getLabelWidth() * numbers.LABEL_SCALE;\n            this.adapter.notchOutline(labelWidth);\n        }\n        else {\n            this.adapter.closeOutline();\n        }\n    };\n    /**\n     * Activates the text field focus state.\n     */\n    MDCTextFieldFoundation.prototype.activateFocus = function () {\n        this.isFocused = true;\n        this.styleFocused(this.isFocused);\n        this.adapter.activateLineRipple();\n        if (this.adapter.hasLabel()) {\n            this.notchOutline(this.shouldFloat);\n            this.adapter.floatLabel(this.shouldFloat);\n            this.styleFloating(this.shouldFloat);\n            this.adapter.shakeLabel(this.shouldShake);\n        }\n        if (this.helperText &&\n            (this.helperText.isPersistent() || !this.helperText.isValidation() ||\n                !this.valid)) {\n            this.helperText.showToScreenReader();\n        }\n    };\n    /**\n     * Sets the line ripple's transform origin, so that the line ripple activate\n     * animation will animate out from the user's click location.\n     */\n    MDCTextFieldFoundation.prototype.setTransformOrigin = function (evt) {\n        if (this.isDisabled() || this.adapter.hasOutline()) {\n            return;\n        }\n        var touches = evt.touches;\n        var targetEvent = touches ? touches[0] : evt;\n        var targetClientRect = targetEvent.target.getBoundingClientRect();\n        var normalizedX = targetEvent.clientX - targetClientRect.left;\n        this.adapter.setLineRippleTransformOrigin(normalizedX);\n    };\n    /**\n     * Handles input change of text input and text area.\n     */\n    MDCTextFieldFoundation.prototype.handleInput = function () {\n        this.autoCompleteFocus();\n        this.setcharacterCounter(this.getValue().length);\n    };\n    /**\n     * Activates the Text Field's focus state in cases when the input value\n     * changes without user input (e.g. programmatically).\n     */\n    MDCTextFieldFoundation.prototype.autoCompleteFocus = function () {\n        if (!this.receivedUserInput) {\n            this.activateFocus();\n        }\n    };\n    /**\n     * Deactivates the Text Field's focus state.\n     */\n    MDCTextFieldFoundation.prototype.deactivateFocus = function () {\n        this.isFocused = false;\n        this.adapter.deactivateLineRipple();\n        var isValid = this.isValid();\n        this.styleValidity(isValid);\n        this.styleFocused(this.isFocused);\n        if (this.adapter.hasLabel()) {\n            this.notchOutline(this.shouldFloat);\n            this.adapter.floatLabel(this.shouldFloat);\n            this.styleFloating(this.shouldFloat);\n            this.adapter.shakeLabel(this.shouldShake);\n        }\n        if (!this.shouldFloat) {\n            this.receivedUserInput = false;\n        }\n    };\n    MDCTextFieldFoundation.prototype.getValue = function () {\n        return this.getNativeInput().value;\n    };\n    /**\n     * @param value The value to set on the input Element.\n     */\n    MDCTextFieldFoundation.prototype.setValue = function (value) {\n        // Prevent Safari from moving the caret to the end of the input when the\n        // value has not changed.\n        if (this.getValue() !== value) {\n            this.getNativeInput().value = value;\n        }\n        this.setcharacterCounter(value.length);\n        if (this.validateOnValueChange) {\n            var isValid = this.isValid();\n            this.styleValidity(isValid);\n        }\n        if (this.adapter.hasLabel()) {\n            this.notchOutline(this.shouldFloat);\n            this.adapter.floatLabel(this.shouldFloat);\n            this.styleFloating(this.shouldFloat);\n            if (this.validateOnValueChange) {\n                this.adapter.shakeLabel(this.shouldShake);\n            }\n        }\n    };\n    /**\n     * @return The custom validity state, if set; otherwise, the result of a\n     *     native validity check.\n     */\n    MDCTextFieldFoundation.prototype.isValid = function () {\n        return this.useNativeValidation ? this.isNativeInputValid() : this.valid;\n    };\n    /**\n     * @param isValid Sets the custom validity state of the Text Field.\n     */\n    MDCTextFieldFoundation.prototype.setValid = function (isValid) {\n        this.valid = isValid;\n        this.styleValidity(isValid);\n        var shouldShake = !isValid && !this.isFocused && !!this.getValue();\n        if (this.adapter.hasLabel()) {\n            this.adapter.shakeLabel(shouldShake);\n        }\n    };\n    /**\n     * @param shouldValidate Whether or not validity should be updated on\n     *     value change.\n     */\n    MDCTextFieldFoundation.prototype.setValidateOnValueChange = function (shouldValidate) {\n        this.validateOnValueChange = shouldValidate;\n    };\n    /**\n     * @return Whether or not validity should be updated on value change. `true`\n     *     by default.\n     */\n    MDCTextFieldFoundation.prototype.getValidateOnValueChange = function () {\n        return this.validateOnValueChange;\n    };\n    /**\n     * Enables or disables the use of native validation. Use this for custom\n     * validation.\n     * @param useNativeValidation Set this to false to ignore native input\n     *     validation.\n     */\n    MDCTextFieldFoundation.prototype.setUseNativeValidation = function (useNativeValidation) {\n        this.useNativeValidation = useNativeValidation;\n    };\n    MDCTextFieldFoundation.prototype.isDisabled = function () {\n        return this.getNativeInput().disabled;\n    };\n    /**\n     * @param disabled Sets the text-field disabled or enabled.\n     */\n    MDCTextFieldFoundation.prototype.setDisabled = function (disabled) {\n        this.getNativeInput().disabled = disabled;\n        this.styleDisabled(disabled);\n    };\n    /**\n     * @param content Sets the content of the helper text.\n     */\n    MDCTextFieldFoundation.prototype.setHelperTextContent = function (content) {\n        if (this.helperText) {\n            this.helperText.setContent(content);\n        }\n    };\n    /**\n     * Sets the aria label of the leading icon.\n     */\n    MDCTextFieldFoundation.prototype.setLeadingIconAriaLabel = function (label) {\n        if (this.leadingIcon) {\n            this.leadingIcon.setAriaLabel(label);\n        }\n    };\n    /**\n     * Sets the text content of the leading icon.\n     */\n    MDCTextFieldFoundation.prototype.setLeadingIconContent = function (content) {\n        if (this.leadingIcon) {\n            this.leadingIcon.setContent(content);\n        }\n    };\n    /**\n     * Sets the aria label of the trailing icon.\n     */\n    MDCTextFieldFoundation.prototype.setTrailingIconAriaLabel = function (label) {\n        if (this.trailingIcon) {\n            this.trailingIcon.setAriaLabel(label);\n        }\n    };\n    /**\n     * Sets the text content of the trailing icon.\n     */\n    MDCTextFieldFoundation.prototype.setTrailingIconContent = function (content) {\n        if (this.trailingIcon) {\n            this.trailingIcon.setContent(content);\n        }\n    };\n    /**\n     * Sets character counter values that shows characters used and the total\n     * character limit.\n     */\n    MDCTextFieldFoundation.prototype.setcharacterCounter = function (currentLength) {\n        if (!this.characterCounter) {\n            return;\n        }\n        var maxLength = this.getNativeInput().maxLength;\n        if (maxLength === -1) {\n            throw new Error('MDCTextFieldFoundation: Expected maxlength html property on text input or textarea.');\n        }\n        this.characterCounter.setCounterValue(currentLength, maxLength);\n    };\n    /**\n     * @return True if the Text Field input fails in converting the user-supplied\n     *     value.\n     */\n    MDCTextFieldFoundation.prototype.isBadInput = function () {\n        // The badInput property is not supported in IE 11 💩.\n        return this.getNativeInput().validity.badInput || false;\n    };\n    /**\n     * @return The result of native validity checking (ValidityState.valid).\n     */\n    MDCTextFieldFoundation.prototype.isNativeInputValid = function () {\n        return this.getNativeInput().validity.valid;\n    };\n    /**\n     * Styles the component based on the validity state.\n     */\n    MDCTextFieldFoundation.prototype.styleValidity = function (isValid) {\n        var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;\n        if (isValid) {\n            this.adapter.removeClass(INVALID);\n        }\n        else {\n            this.adapter.addClass(INVALID);\n        }\n        if (this.helperText) {\n            this.helperText.setValidity(isValid);\n            // We dynamically set or unset aria-describedby for validation helper text\n            // only, based on whether the field is valid\n            var helperTextValidation = this.helperText.isValidation();\n            if (!helperTextValidation) {\n                return;\n            }\n            var helperTextVisible = this.helperText.isVisible();\n            var helperTextId = this.helperText.getId();\n            if (helperTextVisible && helperTextId) {\n                this.adapter.setInputAttr(strings$2.ARIA_DESCRIBEDBY, helperTextId);\n            }\n            else {\n                this.adapter.removeInputAttr(strings$2.ARIA_DESCRIBEDBY);\n            }\n        }\n    };\n    /**\n     * Styles the component based on the focused state.\n     */\n    MDCTextFieldFoundation.prototype.styleFocused = function (isFocused) {\n        var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;\n        if (isFocused) {\n            this.adapter.addClass(FOCUSED);\n        }\n        else {\n            this.adapter.removeClass(FOCUSED);\n        }\n    };\n    /**\n     * Styles the component based on the disabled state.\n     */\n    MDCTextFieldFoundation.prototype.styleDisabled = function (isDisabled) {\n        var _a = MDCTextFieldFoundation.cssClasses, DISABLED = _a.DISABLED, INVALID = _a.INVALID;\n        if (isDisabled) {\n            this.adapter.addClass(DISABLED);\n            this.adapter.removeClass(INVALID);\n        }\n        else {\n            this.adapter.removeClass(DISABLED);\n        }\n        if (this.leadingIcon) {\n            this.leadingIcon.setDisabled(isDisabled);\n        }\n        if (this.trailingIcon) {\n            this.trailingIcon.setDisabled(isDisabled);\n        }\n    };\n    /**\n     * Styles the component based on the label floating state.\n     */\n    MDCTextFieldFoundation.prototype.styleFloating = function (isFloating) {\n        var LABEL_FLOATING = MDCTextFieldFoundation.cssClasses.LABEL_FLOATING;\n        if (isFloating) {\n            this.adapter.addClass(LABEL_FLOATING);\n        }\n        else {\n            this.adapter.removeClass(LABEL_FLOATING);\n        }\n    };\n    /**\n     * @return The native text input element from the host environment, or an\n     *     object with the same shape for unit tests.\n     */\n    MDCTextFieldFoundation.prototype.getNativeInput = function () {\n        // this.adapter may be undefined in foundation unit tests. This happens when\n        // testdouble is creating a mock object and invokes the\n        // shouldShake/shouldFloat getters (which in turn call getValue(), which\n        // calls this method) before init() has been called from the MDCTextField\n        // constructor. To work around that issue, we return a dummy object.\n        var nativeInput = this.adapter ? this.adapter.getNativeInput() : null;\n        return nativeInput || {\n            disabled: false,\n            maxLength: -1,\n            required: false,\n            type: 'input',\n            validity: {\n                badInput: false,\n                valid: true,\n            },\n            value: '',\n        };\n    };\n    return MDCTextFieldFoundation;\n}(MDCFoundation));\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses$1 = {\n    HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n    HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n    ROOT: 'mdc-text-field-helper-text',\n};\nvar strings$1 = {\n    ARIA_HIDDEN: 'aria-hidden',\n    ROLE: 'role',\n    ROOT_SELECTOR: \".\" + cssClasses$1.ROOT,\n};\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCTextFieldHelperTextFoundation = /** @class */ (function (_super) {\n    __extends(MDCTextFieldHelperTextFoundation, _super);\n    function MDCTextFieldHelperTextFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCTextFieldHelperTextFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCTextFieldHelperTextFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses$1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldHelperTextFoundation, \"strings\", {\n        get: function () {\n            return strings$1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldHelperTextFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCTextFieldHelperTextAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                getAttr: function () { return null; },\n                setAttr: function () { return undefined; },\n                removeAttr: function () { return undefined; },\n                setContent: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCTextFieldHelperTextFoundation.prototype.getId = function () {\n        return this.adapter.getAttr('id');\n    };\n    MDCTextFieldHelperTextFoundation.prototype.isVisible = function () {\n        return this.adapter.getAttr(strings$1.ARIA_HIDDEN) !== 'true';\n    };\n    /**\n     * Sets the content of the helper text field.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.setContent = function (content) {\n        this.adapter.setContent(content);\n    };\n    MDCTextFieldHelperTextFoundation.prototype.isPersistent = function () {\n        return this.adapter.hasClass(cssClasses$1.HELPER_TEXT_PERSISTENT);\n    };\n    /**\n     * @param isPersistent Sets the persistency of the helper text.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.setPersistent = function (isPersistent) {\n        if (isPersistent) {\n            this.adapter.addClass(cssClasses$1.HELPER_TEXT_PERSISTENT);\n        }\n        else {\n            this.adapter.removeClass(cssClasses$1.HELPER_TEXT_PERSISTENT);\n        }\n    };\n    /**\n     * @return whether the helper text acts as an error validation message.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.isValidation = function () {\n        return this.adapter.hasClass(cssClasses$1.HELPER_TEXT_VALIDATION_MSG);\n    };\n    /**\n     * @param isValidation True to make the helper text act as an error validation message.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.setValidation = function (isValidation) {\n        if (isValidation) {\n            this.adapter.addClass(cssClasses$1.HELPER_TEXT_VALIDATION_MSG);\n        }\n        else {\n            this.adapter.removeClass(cssClasses$1.HELPER_TEXT_VALIDATION_MSG);\n        }\n    };\n    /**\n     * Makes the helper text visible to the screen reader.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.showToScreenReader = function () {\n        this.adapter.removeAttr(strings$1.ARIA_HIDDEN);\n    };\n    /**\n     * Sets the validity of the helper text based on the input validity.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.setValidity = function (inputIsValid) {\n        var helperTextIsPersistent = this.adapter.hasClass(cssClasses$1.HELPER_TEXT_PERSISTENT);\n        var helperTextIsValidationMsg = this.adapter.hasClass(cssClasses$1.HELPER_TEXT_VALIDATION_MSG);\n        var validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n        if (validationMsgNeedsDisplay) {\n            this.showToScreenReader();\n            // If role is already alert, refresh it to trigger another announcement\n            // from screenreader.\n            if (this.adapter.getAttr(strings$1.ROLE) === 'alert') {\n                this.refreshAlertRole();\n            }\n            else {\n                this.adapter.setAttr(strings$1.ROLE, 'alert');\n            }\n        }\n        else {\n            this.adapter.removeAttr(strings$1.ROLE);\n        }\n        if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n            this.hide();\n        }\n    };\n    /**\n     * Hides the help text from screen readers.\n     */\n    MDCTextFieldHelperTextFoundation.prototype.hide = function () {\n        this.adapter.setAttr(strings$1.ARIA_HIDDEN, 'true');\n    };\n    MDCTextFieldHelperTextFoundation.prototype.refreshAlertRole = function () {\n        var _this = this;\n        this.adapter.removeAttr(strings$1.ROLE);\n        requestAnimationFrame(function () {\n            _this.adapter.setAttr(strings$1.ROLE, 'alert');\n        });\n    };\n    return MDCTextFieldHelperTextFoundation;\n}(MDCFoundation));\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCTextFieldHelperText = /** @class */ (function (_super) {\n    __extends(MDCTextFieldHelperText, _super);\n    function MDCTextFieldHelperText() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTextFieldHelperText.attachTo = function (root) {\n        return new MDCTextFieldHelperText(root);\n    };\n    Object.defineProperty(MDCTextFieldHelperText.prototype, \"foundationForTextField\", {\n        // Provided for access by MDCTextField component\n        get: function () {\n            return this.foundation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCTextFieldHelperText.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            getAttr: function (attr) { return _this.root.getAttribute(attr); },\n            setAttr: function (attr, value) { return _this.root.setAttribute(attr, value); },\n            removeAttr: function (attr) { return _this.root.removeAttribute(attr); },\n            setContent: function (content) {\n                _this.root.textContent = content;\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCTextFieldHelperTextFoundation(adapter);\n    };\n    return MDCTextFieldHelperText;\n}(MDCComponent));\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n    ICON_EVENT: 'MDCTextField:icon',\n    ICON_ROLE: 'button',\n};\nvar cssClasses = {\n    ROOT: 'mdc-text-field__icon',\n};\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar INTERACTION_EVENTS = ['click', 'keydown'];\nvar MDCTextFieldIconFoundation = /** @class */ (function (_super) {\n    __extends(MDCTextFieldIconFoundation, _super);\n    function MDCTextFieldIconFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCTextFieldIconFoundation.defaultAdapter), adapter)) || this;\n        _this.savedTabIndex = null;\n        _this.interactionHandler = function (evt) {\n            _this.handleInteraction(evt);\n        };\n        return _this;\n    }\n    Object.defineProperty(MDCTextFieldIconFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldIconFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextFieldIconFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCTextFieldIconAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                getAttr: function () { return null; },\n                setAttr: function () { return undefined; },\n                removeAttr: function () { return undefined; },\n                setContent: function () { return undefined; },\n                registerInteractionHandler: function () { return undefined; },\n                deregisterInteractionHandler: function () { return undefined; },\n                notifyIconAction: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCTextFieldIconFoundation.prototype.init = function () {\n        var e_1, _a;\n        this.savedTabIndex = this.adapter.getAttr('tabindex');\n        try {\n            for (var INTERACTION_EVENTS_1 = __values(INTERACTION_EVENTS), INTERACTION_EVENTS_1_1 = INTERACTION_EVENTS_1.next(); !INTERACTION_EVENTS_1_1.done; INTERACTION_EVENTS_1_1 = INTERACTION_EVENTS_1.next()) {\n                var evtType = INTERACTION_EVENTS_1_1.value;\n                this.adapter.registerInteractionHandler(evtType, this.interactionHandler);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (INTERACTION_EVENTS_1_1 && !INTERACTION_EVENTS_1_1.done && (_a = INTERACTION_EVENTS_1.return)) _a.call(INTERACTION_EVENTS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    MDCTextFieldIconFoundation.prototype.destroy = function () {\n        var e_2, _a;\n        try {\n            for (var INTERACTION_EVENTS_2 = __values(INTERACTION_EVENTS), INTERACTION_EVENTS_2_1 = INTERACTION_EVENTS_2.next(); !INTERACTION_EVENTS_2_1.done; INTERACTION_EVENTS_2_1 = INTERACTION_EVENTS_2.next()) {\n                var evtType = INTERACTION_EVENTS_2_1.value;\n                this.adapter.deregisterInteractionHandler(evtType, this.interactionHandler);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (INTERACTION_EVENTS_2_1 && !INTERACTION_EVENTS_2_1.done && (_a = INTERACTION_EVENTS_2.return)) _a.call(INTERACTION_EVENTS_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    MDCTextFieldIconFoundation.prototype.setDisabled = function (disabled) {\n        if (!this.savedTabIndex) {\n            return;\n        }\n        if (disabled) {\n            this.adapter.setAttr('tabindex', '-1');\n            this.adapter.removeAttr('role');\n        }\n        else {\n            this.adapter.setAttr('tabindex', this.savedTabIndex);\n            this.adapter.setAttr('role', strings.ICON_ROLE);\n        }\n    };\n    MDCTextFieldIconFoundation.prototype.setAriaLabel = function (label) {\n        this.adapter.setAttr('aria-label', label);\n    };\n    MDCTextFieldIconFoundation.prototype.setContent = function (content) {\n        this.adapter.setContent(content);\n    };\n    MDCTextFieldIconFoundation.prototype.handleInteraction = function (evt) {\n        var isEnterKey = evt.key === 'Enter' || evt.keyCode === 13;\n        if (evt.type === 'click' || isEnterKey) {\n            evt.preventDefault(); // stop click from causing host label to focus\n            // input\n            this.adapter.notifyIconAction();\n        }\n    };\n    return MDCTextFieldIconFoundation;\n}(MDCFoundation));\n\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCTextFieldIcon = /** @class */ (function (_super) {\n    __extends(MDCTextFieldIcon, _super);\n    function MDCTextFieldIcon() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTextFieldIcon.attachTo = function (root) {\n        return new MDCTextFieldIcon(root);\n    };\n    Object.defineProperty(MDCTextFieldIcon.prototype, \"foundationForTextField\", {\n        // Provided for access by MDCTextField component\n        get: function () {\n            return this.foundation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCTextFieldIcon.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            getAttr: function (attr) { return _this.root.getAttribute(attr); },\n            setAttr: function (attr, value) { return _this.root.setAttribute(attr, value); },\n            removeAttr: function (attr) { return _this.root.removeAttribute(attr); },\n            setContent: function (content) {\n                _this.root.textContent = content;\n            },\n            registerInteractionHandler: function (evtType, handler) { return _this.listen(evtType, handler); },\n            deregisterInteractionHandler: function (evtType, handler) { return _this.unlisten(evtType, handler); },\n            notifyIconAction: function () { return _this.emit(MDCTextFieldIconFoundation.strings.ICON_EVENT, {} /* evtData */, true /* shouldBubble */); },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCTextFieldIconFoundation(adapter);\n    };\n    return MDCTextFieldIcon;\n}(MDCComponent));\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCTextField = /** @class */ (function (_super) {\n    __extends(MDCTextField, _super);\n    function MDCTextField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTextField.attachTo = function (root) {\n        return new MDCTextField(root);\n    };\n    MDCTextField.prototype.initialize = function (rippleFactory, lineRippleFactory, helperTextFactory, characterCounterFactory, iconFactory, labelFactory, outlineFactory) {\n        if (rippleFactory === void 0) { rippleFactory = function (el, foundation) { return new MDCRipple(el, foundation); }; }\n        if (lineRippleFactory === void 0) { lineRippleFactory = function (el) { return new MDCLineRipple(el); }; }\n        if (helperTextFactory === void 0) { helperTextFactory = function (el) {\n            return new MDCTextFieldHelperText(el);\n        }; }\n        if (characterCounterFactory === void 0) { characterCounterFactory = function (el) {\n            return new MDCTextFieldCharacterCounter(el);\n        }; }\n        if (iconFactory === void 0) { iconFactory = function (el) { return new MDCTextFieldIcon(el); }; }\n        if (labelFactory === void 0) { labelFactory = function (el) { return new MDCFloatingLabel(el); }; }\n        if (outlineFactory === void 0) { outlineFactory = function (el) { return new MDCNotchedOutline(el); }; }\n        this.input =\n            this.root.querySelector(strings$2.INPUT_SELECTOR);\n        var labelElement = this.root.querySelector(strings$2.LABEL_SELECTOR);\n        this.label = labelElement ? labelFactory(labelElement) : null;\n        var lineRippleElement = this.root.querySelector(strings$2.LINE_RIPPLE_SELECTOR);\n        this.lineRipple =\n            lineRippleElement ? lineRippleFactory(lineRippleElement) : null;\n        var outlineElement = this.root.querySelector(strings$2.OUTLINE_SELECTOR);\n        this.outline = outlineElement ? outlineFactory(outlineElement) : null;\n        // Helper text\n        var helperTextStrings = MDCTextFieldHelperTextFoundation.strings;\n        var nextElementSibling = this.root.nextElementSibling;\n        var hasHelperLine = (nextElementSibling && nextElementSibling.classList.contains(cssClasses$2.HELPER_LINE));\n        var helperTextEl = hasHelperLine && nextElementSibling && nextElementSibling.querySelector(helperTextStrings.ROOT_SELECTOR);\n        this.helperText = helperTextEl ? helperTextFactory(helperTextEl) : null;\n        // Character counter\n        var characterCounterStrings = MDCTextFieldCharacterCounterFoundation.strings;\n        var characterCounterEl = this.root.querySelector(characterCounterStrings.ROOT_SELECTOR);\n        // If character counter is not found in root element search in sibling element.\n        if (!characterCounterEl && hasHelperLine && nextElementSibling) {\n            characterCounterEl = nextElementSibling.querySelector(characterCounterStrings.ROOT_SELECTOR);\n        }\n        this.characterCounter =\n            characterCounterEl ? characterCounterFactory(characterCounterEl) : null;\n        // Leading icon\n        var leadingIconEl = this.root.querySelector(strings$2.LEADING_ICON_SELECTOR);\n        this.leadingIcon = leadingIconEl ? iconFactory(leadingIconEl) : null;\n        // Trailing icon\n        var trailingIconEl = this.root.querySelector(strings$2.TRAILING_ICON_SELECTOR);\n        this.trailingIcon = trailingIconEl ? iconFactory(trailingIconEl) : null;\n        // Prefix and Suffix\n        this.prefix = this.root.querySelector(strings$2.PREFIX_SELECTOR);\n        this.suffix = this.root.querySelector(strings$2.SUFFIX_SELECTOR);\n        this.ripple = this.createRipple(rippleFactory);\n    };\n    MDCTextField.prototype.destroy = function () {\n        if (this.ripple) {\n            this.ripple.destroy();\n        }\n        if (this.lineRipple) {\n            this.lineRipple.destroy();\n        }\n        if (this.helperText) {\n            this.helperText.destroy();\n        }\n        if (this.characterCounter) {\n            this.characterCounter.destroy();\n        }\n        if (this.leadingIcon) {\n            this.leadingIcon.destroy();\n        }\n        if (this.trailingIcon) {\n            this.trailingIcon.destroy();\n        }\n        if (this.label) {\n            this.label.destroy();\n        }\n        if (this.outline) {\n            this.outline.destroy();\n        }\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Initializes the Text Field's internal state based on the environment's\n     * state.\n     */\n    MDCTextField.prototype.initialSyncWithDOM = function () {\n        this.disabled = this.input.disabled;\n    };\n    Object.defineProperty(MDCTextField.prototype, \"value\", {\n        get: function () {\n            return this.foundation.getValue();\n        },\n        /**\n         * @param value The value to set on the input.\n         */\n        set: function (value) {\n            this.foundation.setValue(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"disabled\", {\n        get: function () {\n            return this.foundation.isDisabled();\n        },\n        /**\n         * @param disabled Sets the Text Field disabled or enabled.\n         */\n        set: function (disabled) {\n            this.foundation.setDisabled(disabled);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"valid\", {\n        get: function () {\n            return this.foundation.isValid();\n        },\n        /**\n         * @param valid Sets the Text Field valid or invalid.\n         */\n        set: function (valid) {\n            this.foundation.setValid(valid);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"required\", {\n        get: function () {\n            return this.input.required;\n        },\n        /**\n         * @param required Sets the Text Field to required.\n         */\n        set: function (required) {\n            this.input.required = required;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"pattern\", {\n        get: function () {\n            return this.input.pattern;\n        },\n        /**\n         * @param pattern Sets the input element's validation pattern.\n         */\n        set: function (pattern) {\n            this.input.pattern = pattern;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"minLength\", {\n        get: function () {\n            return this.input.minLength;\n        },\n        /**\n         * @param minLength Sets the input element's minLength.\n         */\n        set: function (minLength) {\n            this.input.minLength = minLength;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"maxLength\", {\n        get: function () {\n            return this.input.maxLength;\n        },\n        /**\n         * @param maxLength Sets the input element's maxLength.\n         */\n        set: function (maxLength) {\n            // Chrome throws exception if maxLength is set to a value less than zero\n            if (maxLength < 0) {\n                this.input.removeAttribute('maxLength');\n            }\n            else {\n                this.input.maxLength = maxLength;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"min\", {\n        get: function () {\n            return this.input.min;\n        },\n        /**\n         * @param min Sets the input element's min.\n         */\n        set: function (min) {\n            this.input.min = min;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"max\", {\n        get: function () {\n            return this.input.max;\n        },\n        /**\n         * @param max Sets the input element's max.\n         */\n        set: function (max) {\n            this.input.max = max;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"step\", {\n        get: function () {\n            return this.input.step;\n        },\n        /**\n         * @param step Sets the input element's step.\n         */\n        set: function (step) {\n            this.input.step = step;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"helperTextContent\", {\n        /**\n         * Sets the helper text element content.\n         */\n        set: function (content) {\n            this.foundation.setHelperTextContent(content);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"leadingIconAriaLabel\", {\n        /**\n         * Sets the aria label of the leading icon.\n         */\n        set: function (label) {\n            this.foundation.setLeadingIconAriaLabel(label);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"leadingIconContent\", {\n        /**\n         * Sets the text content of the leading icon.\n         */\n        set: function (content) {\n            this.foundation.setLeadingIconContent(content);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"trailingIconAriaLabel\", {\n        /**\n         * Sets the aria label of the trailing icon.\n         */\n        set: function (label) {\n            this.foundation.setTrailingIconAriaLabel(label);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"trailingIconContent\", {\n        /**\n         * Sets the text content of the trailing icon.\n         */\n        set: function (content) {\n            this.foundation.setTrailingIconContent(content);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"useNativeValidation\", {\n        /**\n         * Enables or disables the use of native validation. Use this for custom validation.\n         * @param useNativeValidation Set this to false to ignore native input validation.\n         */\n        set: function (useNativeValidation) {\n            this.foundation.setUseNativeValidation(useNativeValidation);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"prefixText\", {\n        /**\n         * Gets the text content of the prefix, or null if it does not exist.\n         */\n        get: function () {\n            return this.prefix ? this.prefix.textContent : null;\n        },\n        /**\n         * Sets the text content of the prefix, if it exists.\n         */\n        set: function (prefixText) {\n            if (this.prefix) {\n                this.prefix.textContent = prefixText;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCTextField.prototype, \"suffixText\", {\n        /**\n         * Gets the text content of the suffix, or null if it does not exist.\n         */\n        get: function () {\n            return this.suffix ? this.suffix.textContent : null;\n        },\n        /**\n         * Sets the text content of the suffix, if it exists.\n         */\n        set: function (suffixText) {\n            if (this.suffix) {\n                this.suffix.textContent = suffixText;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Focuses the input element.\n     */\n    MDCTextField.prototype.focus = function () {\n        this.input.focus();\n    };\n    /**\n     * Recomputes the outline SVG path for the outline element.\n     */\n    MDCTextField.prototype.layout = function () {\n        var openNotch = this.foundation.shouldFloat;\n        this.foundation.notchOutline(openNotch);\n    };\n    MDCTextField.prototype.getDefaultFoundation = function () {\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = __assign(__assign(__assign(__assign(__assign({}, this.getRootAdapterMethods()), this.getInputAdapterMethods()), this.getLabelAdapterMethods()), this.getLineRippleAdapterMethods()), this.getOutlineAdapterMethods());\n        // tslint:enable:object-literal-sort-keys\n        return new MDCTextFieldFoundation(adapter, this.getFoundationMap());\n    };\n    MDCTextField.prototype.getRootAdapterMethods = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            registerTextFieldInteractionHandler: function (evtType, handler) {\n                _this.listen(evtType, handler);\n            },\n            deregisterTextFieldInteractionHandler: function (evtType, handler) {\n                _this.unlisten(evtType, handler);\n            },\n            registerValidationAttributeChangeHandler: function (handler) {\n                var getAttributesList = function (mutationsList) {\n                    return mutationsList\n                        .map(function (mutation) { return mutation.attributeName; })\n                        .filter(function (attributeName) { return attributeName; });\n                };\n                var observer = new MutationObserver(function (mutationsList) { return handler(getAttributesList(mutationsList)); });\n                var config = { attributes: true };\n                observer.observe(_this.input, config);\n                return observer;\n            },\n            deregisterValidationAttributeChangeHandler: function (observer) {\n                observer.disconnect();\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCTextField.prototype.getInputAdapterMethods = function () {\n        var _this = this;\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        return {\n            getNativeInput: function () { return _this.input; },\n            setInputAttr: function (attr, value) {\n                _this.input.setAttribute(attr, value);\n            },\n            removeInputAttr: function (attr) {\n                _this.input.removeAttribute(attr);\n            },\n            isFocused: function () { return document.activeElement === _this.input; },\n            registerInputInteractionHandler: function (evtType, handler) {\n                _this.input.addEventListener(evtType, handler, applyPassive());\n            },\n            deregisterInputInteractionHandler: function (evtType, handler) {\n                _this.input.removeEventListener(evtType, handler, applyPassive());\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n    };\n    MDCTextField.prototype.getLabelAdapterMethods = function () {\n        var _this = this;\n        return {\n            floatLabel: function (shouldFloat) {\n                _this.label && _this.label.float(shouldFloat);\n            },\n            getLabelWidth: function () { return _this.label ? _this.label.getWidth() : 0; },\n            hasLabel: function () { return Boolean(_this.label); },\n            shakeLabel: function (shouldShake) {\n                _this.label && _this.label.shake(shouldShake);\n            },\n            setLabelRequired: function (isRequired) {\n                _this.label && _this.label.setRequired(isRequired);\n            },\n        };\n    };\n    MDCTextField.prototype.getLineRippleAdapterMethods = function () {\n        var _this = this;\n        return {\n            activateLineRipple: function () {\n                if (_this.lineRipple) {\n                    _this.lineRipple.activate();\n                }\n            },\n            deactivateLineRipple: function () {\n                if (_this.lineRipple) {\n                    _this.lineRipple.deactivate();\n                }\n            },\n            setLineRippleTransformOrigin: function (normalizedX) {\n                if (_this.lineRipple) {\n                    _this.lineRipple.setRippleCenter(normalizedX);\n                }\n            },\n        };\n    };\n    MDCTextField.prototype.getOutlineAdapterMethods = function () {\n        var _this = this;\n        return {\n            closeOutline: function () {\n                _this.outline && _this.outline.closeNotch();\n            },\n            hasOutline: function () { return Boolean(_this.outline); },\n            notchOutline: function (labelWidth) {\n                _this.outline && _this.outline.notch(labelWidth);\n            },\n        };\n    };\n    /**\n     * @return A map of all subcomponents to subfoundations.\n     */\n    MDCTextField.prototype.getFoundationMap = function () {\n        return {\n            characterCounter: this.characterCounter ?\n                this.characterCounter.foundationForTextField :\n                undefined,\n            helperText: this.helperText ? this.helperText.foundationForTextField :\n                undefined,\n            leadingIcon: this.leadingIcon ? this.leadingIcon.foundationForTextField :\n                undefined,\n            trailingIcon: this.trailingIcon ?\n                this.trailingIcon.foundationForTextField :\n                undefined,\n        };\n    };\n    MDCTextField.prototype.createRipple = function (rippleFactory) {\n        var _this = this;\n        var isTextArea = this.root.classList.contains(cssClasses$2.TEXTAREA);\n        var isOutlined = this.root.classList.contains(cssClasses$2.OUTLINED);\n        if (isTextArea || isOutlined) {\n            return null;\n        }\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = __assign(__assign({}, MDCRipple.createAdapter(this)), { isSurfaceActive: function () { return matches(_this.input, ':active'); }, registerInteractionHandler: function (evtType, handler) {\n                _this.input.addEventListener(evtType, handler, applyPassive());\n            }, deregisterInteractionHandler: function (evtType, handler) {\n                _this.input.removeEventListener(evtType, handler, applyPassive());\n            } });\n        // tslint:enable:object-literal-sort-keys\n        return rippleFactory(this.root, new MDCRippleFoundation(adapter));\n    };\n    return MDCTextField;\n}(MDCComponent));\n\nexport { MDCTextField as M, MDCTextFieldHelperText as a, MDCTextFieldIcon as b };\n","/*!\n * Crafted with ❤ by inovex GmbH\n */\nimport { c as createCommonjsModule } from './_commonjsHelpers-6ccee0aa.js';\n\nvar classnames = createCommonjsModule(function (module) {\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n});\n\nexport { classnames as c };\n"],"names":["commonjsGlobal","globalThis","window","global","self","createCommonjsModule","fn","basedir","module","path","exports","require","base","commonjsRequire","Error","cssClasses$3","ROOT","strings$3","ROOT_SELECTOR","MDCTextFieldCharacterCounterFoundation","_super","adapter","call","this","__assign","defaultAdapter","__extends","Object","defineProperty","get","enumerable","configurable","setContent","prototype","setCounterValue","currentLength","maxLength","Math","min","MDCFoundation","MDCTextFieldCharacterCounter","apply","arguments","attachTo","root","foundation","getDefaultFoundation","_this","content","textContent","MDCComponent","strings$2","ARIA_CONTROLS","ARIA_DESCRIBEDBY","INPUT_SELECTOR","LABEL_SELECTOR","LEADING_ICON_SELECTOR","LINE_RIPPLE_SELECTOR","OUTLINE_SELECTOR","PREFIX_SELECTOR","SUFFIX_SELECTOR","TRAILING_ICON_SELECTOR","cssClasses$2","DISABLED","FOCUSED","HELPER_LINE","INVALID","LABEL_FLOATING","NO_LABEL","OUTLINED","TEXTAREA","WITH_LEADING_ICON","WITH_TRAILING_ICON","WITH_INTERNAL_COUNTER","numbers","LABEL_SCALE","VALIDATION_ATTR_WHITELIST","ALWAYS_FLOAT_TYPES","POINTERDOWN_EVENTS","INTERACTION_EVENTS$1","MDCTextFieldFoundation","foundationMap","isFocused","receivedUserInput","valid","useNativeValidation","validateOnValueChange","helperText","characterCounter","leadingIcon","trailingIcon","inputFocusHandler","activateFocus","inputBlurHandler","deactivateFocus","inputInputHandler","handleInput","setPointerXOffset","evt","setTransformOrigin","textFieldInteractionHandler","handleTextFieldInteraction","validationAttributeChangeHandler","attributesList","handleValidationAttributeChange","type","getNativeInput","indexOf","shouldAlwaysFloat","getValue","isBadInput","isValid","addClass","removeClass","hasClass","setInputAttr","removeInputAttr","registerTextFieldInteractionHandler","deregisterTextFieldInteractionHandler","registerInputInteractionHandler","deregisterInputInteractionHandler","registerValidationAttributeChangeHandler","MutationObserver","deregisterValidationAttributeChangeHandler","activateLineRipple","deactivateLineRipple","setLineRippleTransformOrigin","shakeLabel","floatLabel","setLabelRequired","hasLabel","getLabelWidth","hasOutline","notchOutline","closeOutline","init","e_1","_a","e_2","_b","required","shouldFloat","styleFloating","POINTERDOWN_EVENTS_1","__values","POINTERDOWN_EVENTS_1_1","next","done","evtType","value","e_1_1","error","return","INTERACTION_EVENTS_1","INTERACTION_EVENTS_1_1","e_2_1","validationObserver","setcharacterCounter","length","destroy","e_3","e_4","POINTERDOWN_EVENTS_2","POINTERDOWN_EVENTS_2_1","e_3_1","INTERACTION_EVENTS_2","INTERACTION_EVENTS_2_1","e_4_1","nativeInput","disabled","some","attributeName","styleValidity","openNotch","labelWidth","styleFocused","shouldShake","isPersistent","isValidation","showToScreenReader","isDisabled","touches","targetEvent","targetClientRect","target","getBoundingClientRect","normalizedX","clientX","left","autoCompleteFocus","setValue","isNativeInputValid","setValid","setValidateOnValueChange","shouldValidate","getValidateOnValueChange","setUseNativeValidation","setDisabled","styleDisabled","setHelperTextContent","setLeadingIconAriaLabel","label","setAriaLabel","setLeadingIconContent","setTrailingIconAriaLabel","setTrailingIconContent","validity","badInput","cssClasses","setValidity","helperTextValidation","helperTextVisible","isVisible","helperTextId","getId","isFloating","cssClasses$1","HELPER_TEXT_PERSISTENT","HELPER_TEXT_VALIDATION_MSG","strings$1","ARIA_HIDDEN","ROLE","MDCTextFieldHelperTextFoundation","getAttr","setAttr","removeAttr","setPersistent","setValidation","inputIsValid","helperTextIsPersistent","helperTextIsValidationMsg","validationMsgNeedsDisplay","refreshAlertRole","hide","requestAnimationFrame","MDCTextFieldHelperText","className","classList","add","remove","contains","attr","getAttribute","setAttribute","removeAttribute","strings","ICON_EVENT","ICON_ROLE","INTERACTION_EVENTS","MDCTextFieldIconFoundation","savedTabIndex","interactionHandler","handleInteraction","registerInteractionHandler","deregisterInteractionHandler","notifyIconAction","isEnterKey","key","keyCode","preventDefault","MDCTextFieldIcon","handler","listen","unlisten","emit","MDCTextField","initialize","rippleFactory","lineRippleFactory","helperTextFactory","characterCounterFactory","iconFactory","labelFactory","outlineFactory","el","MDCRipple","MDCLineRipple","MDCFloatingLabel","MDCNotchedOutline","input","querySelector","labelElement","lineRippleElement","lineRipple","outlineElement","outline","helperTextStrings","nextElementSibling","hasHelperLine","helperTextEl","characterCounterStrings","characterCounterEl","leadingIconEl","trailingIconEl","prefix","suffix","ripple","createRipple","initialSyncWithDOM","set","pattern","minLength","max","step","prefixText","suffixText","focus","layout","getRootAdapterMethods","getInputAdapterMethods","getLabelAdapterMethods","getLineRippleAdapterMethods","getOutlineAdapterMethods","getFoundationMap","getAttributesList","mutationsList","map","mutation","filter","observer","config","attributes","observe","disconnect","document","activeElement","addEventListener","applyPassive","removeEventListener","float","getWidth","Boolean","shake","isRequired","setRequired","activate","deactivate","setRippleCenter","closeNotch","notch","foundationForTextField","undefined","isTextArea","isOutlined","isSurfaceActive","matches","MDCRippleFoundation","classnames","hasOwn","hasOwnProperty","classNames","classes","i","arg","argType","push","Array","isArray","inner","join","default"],"sourceRoot":""}
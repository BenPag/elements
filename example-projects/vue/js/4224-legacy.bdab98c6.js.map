{"version":3,"file":"js/4224-legacy.bdab98c6.js","mappings":"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","sources":["webpack://elements-vue-example/../elements/dist/esm/shadow-css-f536bc59.js","webpack://elements-vue-example/../../node_modules/core-js/modules/es.regexp.constructor.js","webpack://elements-vue-example/../../node_modules/core-js/modules/es.regexp.sticky.js","webpack://elements-vue-example/../../node_modules/core-js/modules/es.regexp.to-string.js","webpack://elements-vue-example/../../node_modules/core-js/modules/es.string.match.js","webpack://elements-vue-example/../../node_modules/core-js/modules/es.string.trim-end.js","webpack://elements-vue-example/./node_modules/core-js/internals/regexp-unsupported-dot-all.js","webpack://elements-vue-example/./node_modules/core-js/modules/es.regexp.dot-all.js"],"sourcesContent":["/*!\n * Crafted with ❤ by inovex GmbH\n */\n/*\n Stencil Client Platform v2.14.0 | MIT Licensed | https://stenciljs.com\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nconst safeSelector = (selector) => {\n    const placeholders = [];\n    let index = 0;\n    let content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n        const replaceBy = `__ph-${index}__`;\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n        const replaceBy = `__ph-${index}__`;\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    const ss = {\n        content,\n        placeholders,\n    };\n    return ss;\n};\nconst restoreSafeSelector = (placeholders, content) => {\n    return content.replace(/__ph-(\\d+)__/g, (_, index) => placeholders[+index]);\n};\nconst _polyfillHost = '-shadowcsshost';\nconst _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst _polyfillHostContext = '-shadowcsscontext';\nconst _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\nconst _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nconst _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nconst _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nconst _polyfillHostRe = /-shadowcsshost/gim;\nconst _colonHostRe = /:host/gim;\nconst _colonSlottedRe = /::slotted/gim;\nconst _colonHostContextRe = /:host-context/gim;\nconst _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nconst stripComments = (input) => {\n    return input.replace(_commentRe, '');\n};\nconst _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nconst extractCommentsWithHash = (input) => {\n    return input.match(_commentWithHashRe) || [];\n};\nconst _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst _curlyRe = /([{}])/g;\nconst _selectorPartsRe = /(^.*?[^\\\\])??((:+)(.*)|$)/;\nconst OPEN_CURLY = '{';\nconst CLOSE_CURLY = '}';\nconst BLOCK_PLACEHOLDER = '%BLOCK%';\nconst processRules = (input, ruleCallback) => {\n    const inputWithEscapedBlocks = escapeBlocks(input);\n    let nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, (...m) => {\n        const selector = m[2];\n        let content = '';\n        let suffix = m[4];\n        let contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        const cssRule = {\n            selector,\n            content,\n        };\n        const rule = ruleCallback(cssRule);\n        return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n    });\n};\nconst escapeBlocks = (input) => {\n    const inputParts = input.split(_curlyRe);\n    const resultParts = [];\n    const escapedBlocks = [];\n    let bracketCount = 0;\n    let currentBlockParts = [];\n    for (let partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        const part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    const strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks,\n    };\n    return strEscapedBlocks;\n};\nconst insertPolyfillHostInCssText = (selector) => {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nconst convertColonRule = (cssText, regExp, partReplacer) => {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, (...m) => {\n        if (m[2]) {\n            const parts = m[2].split(',');\n            const r = [];\n            for (let i = 0; i < parts.length; i++) {\n                const p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nconst colonHostPartReplacer = (host, part, suffix) => {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nconst convertColonHost = (cssText) => {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nconst colonHostContextPartReplacer = (host, part, suffix) => {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nconst convertColonSlotted = (cssText, slotScopeId) => {\n    const slotClass = '.' + slotScopeId + ' > ';\n    const selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, (...m) => {\n        if (m[2]) {\n            const compound = m[2].trim();\n            const suffix = m[3];\n            const slottedSelector = slotClass + compound + suffix;\n            let prefixSelector = '';\n            for (let i = m[4] - 1; i >= 0; i--) {\n                const char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            const orgSelector = prefixSelector + slottedSelector;\n            const addedSelector = `${prefixSelector.trimRight()}${slottedSelector.trim()}`;\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                const updatedSelector = `${addedSelector}, ${orgSelector}`;\n                selectors.push({\n                    orgSelector,\n                    updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors,\n        cssText,\n    };\n};\nconst convertColonHostContext = (cssText) => {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nconst convertShadowDOMSelectors = (cssText) => {\n    return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n};\nconst makeScopeMatcher = (scopeSelector) => {\n    const lre = /\\[/g;\n    const rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nconst selectorNeedsScoping = (selector, scopeSelector) => {\n    const re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nconst injectScopingSelector = (selector, scopingSelector) => {\n    return selector.replace(_selectorPartsRe, (_, before = '', _colonGroup, colon = '', after = '') => {\n        return before + scopingSelector + colon + after;\n    });\n};\nconst applySimpleSelectorScope = (selector, scopeSelector, hostSelector) => {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        const replaceBy = `.${hostSelector}`;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, (_, selector) => injectScopingSelector(selector, replaceBy))\n            .replace(_polyfillHostRe, replaceBy + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nconst applyStrictSelectorScope = (selector, scopeSelector, hostSelector) => {\n    const isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, (_, ...parts) => parts[0]);\n    const className = '.' + scopeSelector;\n    const _scopeSelectorPart = (p) => {\n        let scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            const t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                scopedP = injectScopingSelector(t, className);\n            }\n        }\n        return scopedP;\n    };\n    const safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    let scopedSelector = '';\n    let startIndex = 0;\n    let res;\n    const sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    const hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    let shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        const separator = res[1];\n        const part = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        const scopedPart = shouldScope ? _scopeSelectorPart(part) : part;\n        scopedSelector += `${scopedPart} ${separator} `;\n        startIndex = sep.lastIndex;\n    }\n    const part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nconst scopeSelector = (selector, scopeSelectorText, hostSelector, slotSelector) => {\n    return selector\n        .split(',')\n        .map((shallowPart) => {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nconst scopeSelectors = (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) => {\n    return processRules(cssText, (rule) => {\n        let selector = rule.selector;\n        let content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') ||\n            rule.selector.startsWith('@supports') ||\n            rule.selector.startsWith('@page') ||\n            rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        const cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content,\n        };\n        return cssRule;\n    });\n};\nconst scopeCssText = (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) => {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    const slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, `.${hostScopeId}`);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nconst scopeCss = (cssText, scopeId, commentOriginalSelector) => {\n    const hostScopeId = scopeId + '-h';\n    const slotScopeId = scopeId + '-s';\n    const commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    const orgSelectors = [];\n    if (commentOriginalSelector) {\n        const processCommentedSelector = (rule) => {\n            const placeholder = `/*!@___${orgSelectors.length}___*/`;\n            const comment = `/*!@${rule.selector}*/`;\n            orgSelectors.push({ placeholder, comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, (rule) => {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector(rule);\n            }\n            else if (rule.selector.startsWith('@media') ||\n                rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') ||\n                rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    const scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = [scoped.cssText, ...commentsWithHash].join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(({ placeholder, comment }) => {\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach((slottedSelector) => {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\n\nexport { scopeCss };\n","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar enforceInternalState = require('../internals/internal-state').enforce;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.es/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) {\n      var state = enforceInternalState(result);\n      state.sticky = true;\n    }\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.es/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar UNSUPPORTED_Y = require('../internals/regexp-sticky-helpers').UNSUPPORTED_Y;\nvar defineProperty = require('../internals/object-define-property').f;\nvar getInternalState = require('../internals/internal-state').get;\nvar RegExpPrototype = RegExp.prototype;\n\n// `RegExp.prototype.sticky` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky\nif (DESCRIPTORS && UNSUPPORTED_Y) {\n  defineProperty(RegExp.prototype, 'sticky', {\n    configurable: true,\n    get: function () {\n      if (this === RegExpPrototype) return undefined;\n      // We can't use InternalStateModule.getterFor because\n      // we don't add metadata for regexps created by a literal.\n      if (this instanceof RegExp) {\n        return !!getInternalState(this).sticky;\n      }\n      throw TypeError('Incompatible receiver, RegExp required');\n    }\n  });\n}\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.es/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : regexp[MATCH];\n      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative(nativeMatch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $trimEnd = require('../internals/string-trim').end;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\nvar FORCED = forcedStringTrimMethod('trimEnd');\n\nvar trimEnd = FORCED ? function trimEnd() {\n  return $trimEnd(this);\n// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe\n} : ''.trimEnd;\n\n// `String.prototype.{ trimEnd, trimRight }` methods\n// https://tc39.es/ecma262/#sec-string.prototype.trimend\n// https://tc39.es/ecma262/#String.prototype.trimright\n$({ target: 'String', proto: true, forced: FORCED }, {\n  trimEnd: trimEnd,\n  trimRight: trimEnd\n});\n","var fails = require('../internals/fails');\nvar global = require('../internals/global');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError\nvar $RegExp = global.RegExp;\n\nmodule.exports = fails(function () {\n  var re = $RegExp('.', 's');\n  return !(re.dotAll && re.exec('\\n') && re.flags === 's');\n});\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');\nvar classof = require('../internals/classof-raw');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getInternalState = require('../internals/internal-state').get;\n\nvar RegExpPrototype = RegExp.prototype;\nvar TypeError = global.TypeError;\n\n// `RegExp.prototype.dotAll` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.dotall\nif (DESCRIPTORS && UNSUPPORTED_DOT_ALL) {\n  defineProperty(RegExpPrototype, 'dotAll', {\n    configurable: true,\n    get: function () {\n      if (this === RegExpPrototype) return undefined;\n      // We can't use InternalStateModule.getterFor because\n      // we don't add metadata for regexps created by a literal.\n      if (classof(this) === 'RegExp') {\n        return !!getInternalState(this).dotAll;\n      }\n      throw TypeError('Incompatible receiver, RegExp required');\n    }\n  });\n}\n"],"names":["safeSelector","selector","content","placeholders","index","replace","_","keep","replaceBy","push","pseudo","exp","ss","restoreSafeSelector","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_selectorReSuffix","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","stripComments","input","_commentWithHashRe","extractCommentsWithHash","match","_ruleRe","_curlyRe","_selectorPartsRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","suffix","contentPrefix","startsWith","blocks","substring","length","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","strEscapedBlocks","insertPolyfillHostInCssText","convertColonRule","cssText","regExp","partReplacer","m","parts","r","i","p","trim","colonHostPartReplacer","host","convertColonHost","colonHostContextPartReplacer","indexOf","convertColonSlotted","slotScopeId","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimRight","updatedSelector","convertColonHostContext","convertShadowDOMSelectors","reduce","result","pattern","makeScopeMatcher","scopeSelector","lre","rre","selectorNeedsScoping","re","test","injectScopingSelector","scopingSelector","before","colon","after","applySimpleSelectorScope","hostSelector","lastIndex","applyStrictSelectorScope","isRe","className","_scopeSelectorPart","scopedP","t","safeContent","res","scopedSelector","startIndex","sep","hasHost","shouldScope","exec","separator","slice","scopedPart","scopeSelectorText","slotSelector","map","shallowPart","scopeSelectors","commentOriginalSelector","scopeCssText","scopeId","hostScopeId","slotted","slottedSelectors","scopeCss","commentsWithHash","orgSelectors","processCommentedSelector","placeholder","comment","scoped","forEach","DESCRIPTORS","global","isForced","inheritIfRequired","defineProperty","getOwnPropertyNames","isRegExp","getFlags","stickyHelpers","redefine","fails","enforceInternalState","setSpecies","wellKnownSymbol","MATCH","NativeRegExp","RegExpPrototype","prototype","re1","re2","CORRECT_NEW","UNSUPPORTED_Y","FORCED","RegExpWrapper","flags","sticky","thisIsRegExp","this","patternIsRegExp","flagsAreUndefined","undefined","constructor","source","call","state","proxy","key","configurable","get","set","it","keys","getInternalState","TypeError","anObject","TO_STRING","nativeToString","NOT_GENERIC","INCORRECT_NAME","name","R","String","rf","f","unsafe","fixRegExpWellKnownSymbolLogic","toLength","requireObjectCoercible","advanceStringIndex","regExpExec","nativeMatch","maybeCallNative","regexp","O","matcher","done","value","rx","S","fullUnicode","unicode","A","n","matchStr","$","$trimEnd","forcedStringTrimMethod","trimEnd","target","proto","forced","$RegExp","module","exports","dotAll","UNSUPPORTED_DOT_ALL","classof"],"sourceRoot":""}
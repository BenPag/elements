{"version":3,"file":"js/5932-legacy.933a3af2.js","mappings":"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","sources":["webpack://elements-vue-example/../elements/dist/esm/_commonjsHelpers-6ccee0aa.js","webpack://elements-vue-example/../elements/dist/esm/index-7e3a00fd.js","webpack://elements-vue-example/../elements/dist/esm/ino-carousel.entry.js","webpack://elements-vue-example/../../node_modules/core-js/modules/es.global-this.js"],"sourcesContent":["/*!\n * Crafted with ❤ by inovex GmbH\n */\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire();\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nexport { commonjsGlobal as a, createCommonjsModule as c };\n","/*!\n * Crafted with ❤ by inovex GmbH\n */\nimport { c as createCommonjsModule } from './_commonjsHelpers-6ccee0aa.js';\n\nvar classnames = createCommonjsModule(function (module) {\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n});\n\nexport { classnames as c };\n","/*!\n * Crafted with ❤ by inovex GmbH\n */\nimport { r as registerInstance, h, H as Host, g as getElement } from './index-5082bac1.js';\nimport { c as classnames } from './index-7e3a00fd.js';\nimport './_commonjsHelpers-6ccee0aa.js';\n\nconst inoCarouselCss = \"ino-carousel{--carousel-icon-color:var(--ino-carousel-icon-color, #fff);--carousel-width:var(--ino-carousel-width, 700px);--carousel-height:var(--ino-carousel-height, 400px);--carousel-animation-duration:var(--ino-carousel-animation-duration, 700ms)}ino-carousel .ino-carousel{position:relative;height:var(--carousel-height);width:var(--carousel-width);overflow:hidden}ino-carousel .ino-carousel__left-arrow,ino-carousel .ino-carousel__right-arrow{display:flex;align-items:center;justify-content:center;position:absolute;bottom:0;flex-direction:column;height:100%}ino-carousel .ino-carousel__left-arrow ino-icon,ino-carousel .ino-carousel__right-arrow ino-icon{--icon-color:var(--carousel-icon-color)}ino-carousel .ino-carousel--no-buttons .ino-carousel__left-arrow,ino-carousel .ino-carousel--no-buttons .ino-carousel__right-arrow{display:none}ino-carousel .ino-carousel__right-arrow{right:16px}ino-carousel .ino-carousel__left-arrow{left:16px}ino-carousel .ino-carousel__container{height:100%}ino-carousel .ino-carousel--animated.ino-carousel-slide--selected{animation:fadeIn var(--carousel-animation-duration)}@keyframes fadeIn{from{opacity:0}to{opacity:1}}ino-carousel .ino-carousel--animated:not(.ino-carousel-slide--selected){animation:fadeOut var(--carousel-animation-duration)}@keyframes fadeOut{from{opacity:1}to{opacity:0}}\";\n\nlet InoCarousel = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.currentSlide = 0;\n    this.slideCounter = 1;\n    /**\n     * Enables autoplay which causes slides to be changed automatically\n     */\n    this.autoplay = false;\n    /**\n     * Enables the slide animation\n     */\n    this.animated = false;\n    /**\n     * Hides the arrow buttons\n     */\n    this.hideButtons = false;\n    /**\n     * Restarts playback from the first slide upon reaching the last slide\n     */\n    this.infinite = false;\n    /**\n     * Sets the intermission between two slides (Unit: ms)\n     */\n    this.intermission = 5000;\n    /**\n     * Enables reverse playback of the slides\n     */\n    this.reverse = false;\n    /**\n     * adds a slide animation to the given slide\n     * required to prevent the animation from playing when loading the component\n     * @param slide carousel slide\n     */\n    this.addAnimationToSlide = (slide) => {\n      if (!this.animated)\n        return;\n      if (!slide.classList.contains('ino-carousel--animated')) {\n        slide.classList.add('ino-carousel--animated');\n      }\n    };\n    this.configureSlides = () => {\n      if (this.slides.length < 1)\n        return;\n      if (!this.selectSlide(this.value))\n        this.slides[this.currentSlide].classList.add('ino-carousel-slide--selected');\n    };\n    this.configureAutoplay = () => {\n      if (this.slides.length < 1)\n        return;\n      if (this.autoplay) {\n        this.timer = setInterval(this.nextSlide, this.intermission);\n        return;\n      }\n      clearInterval(this.timer);\n    };\n    /**\n     * Switches to the next slide\n     * Required for autoplay to work\n     */\n    this.nextSlide = () => {\n      if (this.slides.length < 1)\n        throw new Error('There are no slides to display');\n      this.slides[this.currentSlide].classList.remove('ino-carousel-slide--selected');\n      this.addAnimationToSlide(this.slides[this.currentSlide]); // adds the slide animation to current slide\n      this.currentSlide = this.getNextSlide();\n      this.addAnimationToSlide(this.slides[this.currentSlide]); // adds the slide animation to the new slide\n      this.slides[this.currentSlide].classList.add('ino-carousel-slide--selected');\n      this.slideCounter++;\n      // disables the timer after all slides have been shown\n      if (!this.infinite && this.slideCounter >= this.slides.length) {\n        this.slideCounter = 1;\n        clearInterval(this.timer);\n      }\n    };\n    this.mod = (a, b) => ((a % b) + b) % b;\n    /**\n     * determines the index of the next slide\n     */\n    this.getNextSlide = () => this.reverse\n      ? this.mod(this.currentSlide - 1, this.slides.length)\n      : this.mod(this.currentSlide + 1, this.slides.length);\n  }\n  valueChanged(newVal) {\n    this.addAnimationToSlide(this.slides[this.currentSlide]); // adds the slide animation to the current slide\n    this.selectSlide(newVal);\n    this.addAnimationToSlide(this.slides[this.currentSlide]); // adds the slide animation to the new slide\n  }\n  autoplayChanged() {\n    this.configureAutoplay();\n  }\n  componentDidLoad() {\n    this.slides = this.getSlides();\n    this.configureSlides();\n    this.configureAutoplay();\n  }\n  selectSlide(value) {\n    let slideSelected = false;\n    this.slides.forEach((slide) => {\n      if (value === slide.value) {\n        slide.classList.add('ino-carousel-slide--selected');\n        this.currentSlide = this.slides.indexOf(slide);\n        slideSelected = true;\n      }\n      else {\n        slide.classList.remove('ino-carousel-slide--selected');\n      }\n    });\n    return slideSelected;\n  }\n  getSlides() {\n    return Array.from(this.el.querySelectorAll('ino-carousel-slide'));\n  }\n  render() {\n    const classes = classnames({\n      'ino-carousel': true,\n      'ino-carousel--no-buttons': this.hideButtons,\n    });\n    return (h(Host, { value: this.value }, h(\"div\", { class: classes }, h(\"div\", { class: \"ino-carousel__container\" }, h(\"slot\", null)), h(\"div\", { class: \"ino-carousel__left-arrow\" }, h(\"ino-icon-button\", { icon: \"arrow_left\" })), h(\"div\", { class: \"ino-carousel__right-arrow\" }, h(\"ino-icon-button\", { icon: \"arrow_right\" })))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"],\n    \"autoplay\": [\"autoplayChanged\"]\n  }; }\n};\nInoCarousel.style = inoCarouselCss;\n\nexport { InoCarousel as ino_carousel };\n","var $ = require('../internals/export');\nvar global = require('../internals/global');\n\n// `globalThis` object\n// https://tc39.es/ecma262/#sec-globalthis\n$({ global: true }, {\n  globalThis: global\n});\n"],"names":["commonjsGlobal","globalThis","window","global","self","createCommonjsModule","fn","basedir","module","path","exports","require","base","commonjsRequire","Error","classnames","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","inoCarouselCss","InoCarousel","hostRef","registerInstance","this","currentSlide","slideCounter","autoplay","animated","hideButtons","infinite","intermission","reverse","addAnimationToSlide","slide","classList","contains","add","configureSlides","slides","selectSlide","value","configureAutoplay","timer","setInterval","nextSlide","clearInterval","remove","getNextSlide","mod","a","b","newVal","getSlides","slideSelected","forEach","indexOf","from","el","querySelectorAll","h","Host","class","icon","getElement","style","$"],"sourceRoot":""}
(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{1132:function(module){module.exports=JSON.parse('{"name":"@inovex.de/elements","version":"1.0.2","description":"This is the home of a web component library based on Stencil.","repository":"https://github.com/inovex/elements.git","author":"Patrick Hillert <phillert@inovex.de>","contributors":["Alexander Gerlach <agerlach@inovex.de","Arne Maier <amaier@inovex.de>","Daniel Eckelt <deckelt@inovex.de>","Daniel Hieber <dhieber@inovex.de>","Filipe Santos Correa <filipe.santoscorrea@inovex.de>","Florian Köpke <fkoepke@inovex.de>","Jacob Cofman <jcofman@inovex.de>","Jan-Niklas Voß <jvoss@inovex.de>","Johann Böhler <jboehler@inovex.de>","Johannes Reuter <johannes.reuter@inovex.de>","Lukas Kirner <lkirner@inovex.de>","Mathias Gruschinske <mgruschinske@inovex.de>","Michael Janssen <mjanssen@inovex.de>","Pascal Fecht <pfecht@inovex.de>","Sebastian Löfflath <sebastian.loefflath@inovex.de>","Simon Rey <srey@inovex.de>","Sven Lindauer <slindauer@inovex.de>","Viet Duc Mai <viet.mai@inovex.de>"],"homepage":"https://elements.inovex.de","bugs":{"url":"https://github.com/inovex/elements/issues"},"license":"MIT","main":"dist/index.js","module":"dist/index.mjs","es2015":"dist/esm/index.mjs","es2017":"dist/esm/index.mjs","jsnext:main":"dist/esm/index.mjs","types":"dist/types/components.d.ts","collection":"dist/collection/collection-manifest.json","files":["dist/","webpack-plugin.js"],"scripts":{"build":"stencil build --docs --legacy && node scripts/generateWrappedIcons.js","clean":"rm -rf dist","dev":"stencil build --docs --watch --legacy","lint":"tslint --project tsconfig.json","lint.fix":"tslint --project tsconfig.json --fix","test":"stencil test --e2e --ci","test.watch":"stencil test --e2e --watch","test:update":"stencil test --e2e -u ./","icon:integrate-icons":"node scripts/integrateIcons.js"},"dependencies":{"@material/button":"^5.1.0","@material/card":"^5.1.0","@material/checkbox":"^5.1.0","@material/chips":"^5.1.0","@material/data-table":"^5.1.0","@material/dialog":"^5.1.0","@material/drawer":"^5.1.0","@material/fab":"^5.1.0","@material/form-field":"^5.1.0","@material/icon-button":"^5.1.0","@material/image-list":"^5.1.0","@material/linear-progress":"^5.1.0","@material/list":"^5.1.0","@material/menu":"^5.1.0","@material/radio":"^5.1.0","@material/ripple":"^5.1.0","@material/select":"^5.1.0","@material/slider":"^5.1.0","@material/snackbar":"^5.1.0","@material/switch":"^5.1.0","@material/tab":"^5.1.0","@material/tab-bar":"^5.1.0","@material/tab-indicator":"^5.1.0","@material/tab-scroller":"^5.1.0","@material/textfield":"^5.1.0","@material/typography":"^5.1.0","@stencil/core":"1.12.6","autosize":"^4.0.2","classnames":"^2.2.6","currency.js":"^1.2.2","flatpickr":"^4.4.6","highlight.js":"^9.18.1","tippy.js":"^6.2.3"},"devDependencies":{"@stencil/sass":"^1.1.1","@types/classnames":"^2.2.6","@types/jest":"24.9.1","@types/puppeteer":"1.19.1","camelcase":"^5.0.0","fs-extra":"^9.0.0","jest":"24.9.0","jest-cli":"24.9.0","puppeteer":"1.19.0","tslint":"^6.1.1","tslint-ionic-rules":"0.0.21","tslint-react":"^4.2.0","typescript":"^3.8.3"}}')},1133:function(module,exports){},1253:function(module,exports,__webpack_require__){var map={"./locale":406,"./locale.js":406};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1253},1259:function(module,exports,__webpack_require__){var content=__webpack_require__(1260);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1260:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".ino-playground{box-sizing:border-box;max-width:980px;margin:32px auto 64px;padding:28px 38px;border:1px solid #eee;border-radius:3px;transition:all .3s cubic-bezier(0.25, 0.8, 0.25, 1)}.ino-playground:hover{box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)}",""])},1261:function(module,exports,__webpack_require__){var content=__webpack_require__(1262);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1262:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-button ino-button{margin:0 12px 12px 0}.story-button ino-button.customizable-button{margin-bottom:32px}.story-button .button-row{display:flex;flex-direction:row;justify-content:space-around;margin-bottom:10px}.story-button .reset-form{display:flex}.story-button .reset-form .reset-input{flex:1;margin:0 12px 12px 0}",""])},1263:function(module,exports,__webpack_require__){var content=__webpack_require__(1264);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1264:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-card .customizable-card{margin-top:12px}.story-card .flex-cards{margin-top:50px;display:flex;justify-content:space-between;align-items:center}.story-card .flex-cards>ino-card{flex:1;margin-right:10px}.story-card .flex-cards>ino-card:last-child{margin-right:0}.story-card h4{margin-top:52px}.card-content--vertical{display:flex;flex-direction:row;justify-content:center}.card-content--vertical h3{margin:0}.card-content--vertical ino-img img{width:100%;height:100%}.card-header{display:flex;flex-direction:row;justify-content:flex-end}.sample-card-footer{display:flex;flex-direction:row;justify-content:flex-start}.card-footer{display:flex;flex-direction:row;justify-content:center}.card-footer p{color:#c1c1c1;margin:0}ino-card{width:300px}",""])},1265:function(module,exports,__webpack_require__){var content=__webpack_require__(1266);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1266:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,"ino-checkbox{width:33%}.story-checkbox-states{display:flex;justify-content:space-around;flex-wrap:wrap;align-items:center;margin:auto;text-align:center}.story-selection-states{display:flex;justify-content:space-around;align-self:center;text-align:center}.story-selection-states ino-checkbox{width:25%}.customizable-checkbox{display:block;margin-left:auto;margin-right:auto;margin-bottom:40px;align-self:center}",""])},1267:function(module,exports,__webpack_require__){var content=__webpack_require__(1268);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1268:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-chip ino-chip{margin:0 4px 12px 0}",""])},1269:function(module,exports,__webpack_require__){var map={"./af":407,"./af.js":407,"./ar":408,"./ar-dz":409,"./ar-dz.js":409,"./ar-kw":410,"./ar-kw.js":410,"./ar-ly":411,"./ar-ly.js":411,"./ar-ma":412,"./ar-ma.js":412,"./ar-sa":413,"./ar-sa.js":413,"./ar-tn":414,"./ar-tn.js":414,"./ar.js":408,"./az":415,"./az.js":415,"./be":416,"./be.js":416,"./bg":417,"./bg.js":417,"./bm":418,"./bm.js":418,"./bn":419,"./bn.js":419,"./bo":420,"./bo.js":420,"./br":421,"./br.js":421,"./bs":422,"./bs.js":422,"./ca":423,"./ca.js":423,"./cs":424,"./cs.js":424,"./cv":425,"./cv.js":425,"./cy":426,"./cy.js":426,"./da":427,"./da.js":427,"./de":428,"./de-at":429,"./de-at.js":429,"./de-ch":430,"./de-ch.js":430,"./de.js":428,"./dv":431,"./dv.js":431,"./el":432,"./el.js":432,"./en-au":433,"./en-au.js":433,"./en-ca":434,"./en-ca.js":434,"./en-gb":435,"./en-gb.js":435,"./en-ie":436,"./en-ie.js":436,"./en-il":437,"./en-il.js":437,"./en-in":438,"./en-in.js":438,"./en-nz":439,"./en-nz.js":439,"./en-sg":440,"./en-sg.js":440,"./eo":441,"./eo.js":441,"./es":442,"./es-do":443,"./es-do.js":443,"./es-us":444,"./es-us.js":444,"./es.js":442,"./et":445,"./et.js":445,"./eu":446,"./eu.js":446,"./fa":447,"./fa.js":447,"./fi":448,"./fi.js":448,"./fil":449,"./fil.js":449,"./fo":450,"./fo.js":450,"./fr":451,"./fr-ca":452,"./fr-ca.js":452,"./fr-ch":453,"./fr-ch.js":453,"./fr.js":451,"./fy":454,"./fy.js":454,"./ga":455,"./ga.js":455,"./gd":456,"./gd.js":456,"./gl":457,"./gl.js":457,"./gom-deva":458,"./gom-deva.js":458,"./gom-latn":459,"./gom-latn.js":459,"./gu":460,"./gu.js":460,"./he":461,"./he.js":461,"./hi":462,"./hi.js":462,"./hr":463,"./hr.js":463,"./hu":464,"./hu.js":464,"./hy-am":465,"./hy-am.js":465,"./id":466,"./id.js":466,"./is":467,"./is.js":467,"./it":468,"./it-ch":469,"./it-ch.js":469,"./it.js":468,"./ja":470,"./ja.js":470,"./jv":471,"./jv.js":471,"./ka":472,"./ka.js":472,"./kk":473,"./kk.js":473,"./km":474,"./km.js":474,"./kn":475,"./kn.js":475,"./ko":476,"./ko.js":476,"./ku":477,"./ku.js":477,"./ky":478,"./ky.js":478,"./lb":479,"./lb.js":479,"./lo":480,"./lo.js":480,"./lt":481,"./lt.js":481,"./lv":482,"./lv.js":482,"./me":483,"./me.js":483,"./mi":484,"./mi.js":484,"./mk":485,"./mk.js":485,"./ml":486,"./ml.js":486,"./mn":487,"./mn.js":487,"./mr":488,"./mr.js":488,"./ms":489,"./ms-my":490,"./ms-my.js":490,"./ms.js":489,"./mt":491,"./mt.js":491,"./my":492,"./my.js":492,"./nb":493,"./nb.js":493,"./ne":494,"./ne.js":494,"./nl":495,"./nl-be":496,"./nl-be.js":496,"./nl.js":495,"./nn":497,"./nn.js":497,"./oc-lnc":498,"./oc-lnc.js":498,"./pa-in":499,"./pa-in.js":499,"./pl":500,"./pl.js":500,"./pt":501,"./pt-br":502,"./pt-br.js":502,"./pt.js":501,"./ro":503,"./ro.js":503,"./ru":504,"./ru.js":504,"./sd":505,"./sd.js":505,"./se":506,"./se.js":506,"./si":507,"./si.js":507,"./sk":508,"./sk.js":508,"./sl":509,"./sl.js":509,"./sq":510,"./sq.js":510,"./sr":511,"./sr-cyrl":512,"./sr-cyrl.js":512,"./sr.js":511,"./ss":513,"./ss.js":513,"./sv":514,"./sv.js":514,"./sw":515,"./sw.js":515,"./ta":516,"./ta.js":516,"./te":517,"./te.js":517,"./tet":518,"./tet.js":518,"./tg":519,"./tg.js":519,"./th":520,"./th.js":520,"./tl-ph":521,"./tl-ph.js":521,"./tlh":522,"./tlh.js":522,"./tr":523,"./tr.js":523,"./tzl":524,"./tzl.js":524,"./tzm":525,"./tzm-latn":526,"./tzm-latn.js":526,"./tzm.js":525,"./ug-cn":527,"./ug-cn.js":527,"./uk":528,"./uk.js":528,"./ur":529,"./ur.js":529,"./uz":530,"./uz-latn":531,"./uz-latn.js":531,"./uz.js":530,"./vi":532,"./vi.js":532,"./x-pseudo":533,"./x-pseudo.js":533,"./yo":534,"./yo.js":534,"./zh-cn":535,"./zh-cn.js":535,"./zh-hk":536,"./zh-hk.js":536,"./zh-mo":537,"./zh-mo.js":537,"./zh-tw":538,"./zh-tw.js":538};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1269},1270:function(module,exports,__webpack_require__){var content=__webpack_require__(1271);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1271:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-datepicker .customizable-picker{margin-bottom:48px}.story-datepicker h4{margin-top:32px}",""])},1272:function(module,exports,__webpack_require__){var content=__webpack_require__(1273);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1273:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,"ino-dialog{--ino-dialog-width: 650px;--ino-dialog-height: 250px}.ino-dialog-header{display:flex;flex-direction:row;align-items:center;justify-content:flex-end;height:100%}.ino-dialog-header .ino-dialog-title{display:flex;flex-direction:row;width:100%}.ino-dialog-header .ino-dialog-title h3{padding:0 10px 0 10px}.ino-dialog-content{display:flex;flex-direction:column;justify-content:center;align-items:center;height:100%}.ino-dialog-footer{display:flex;flex-direction:row;justify-content:flex-end;align-items:center;height:100%}.ino-dialog-footer ino-button{margin-right:10px}",""])},1274:function(module,exports,__webpack_require__){var content=__webpack_require__(1275);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1275:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,"",""])},1276:function(module,exports,__webpack_require__){var content=__webpack_require__(1277);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1277:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".ino-fab-variants{display:flex;justify-content:space-around}",""])},1278:function(module,exports,__webpack_require__){var content=__webpack_require__(1279);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1279:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,"",""])},1280:function(module,exports,__webpack_require__){var content=__webpack_require__(1281);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1281:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,"",""])},1282:function(module,exports,__webpack_require__){var content=__webpack_require__(1283);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1283:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-icon-button .customizable-icon-button{text-align:center;margin-bottom:48px}.story-icon-button .flex-parent-center{display:flex;justify-content:space-between;max-width:620px;margin:0 auto}.story-icon-button .flex-parent-center>div{text-align:center;margin-bottom:32px}.story-icon-button h4,.story-icon-button h5{text-align:center;margin-bottom:6px}",""])},1284:function(module,exports,__webpack_require__){var content=__webpack_require__(1285);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1285:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-icon .customizable-icon,.story-icon .preview-icon{margin:5px}.story-icon ino-icon.customizable-icon{--icon-height: 3em;--icon-width: 3em}.story-icon ino-icon.preview-icon{--icon-height: 2em;--icon-width: 2em}.story-icon .customizable-input{margin-top:0}.story-icon .flex-parent-center{display:flex;flex-direction:column;justify-content:center;align-items:center}.story-icon .flex-parent-center .flex-child{display:flex;flex-direction:column;justify-content:center}.story-icon .flex-parent-center .flex-icons{display:flex;flex-direction:row;justify-content:center}.story-icon .mdc-chip-set{display:flex;justify-content:space-between}.story-icon ino-chip-set.icon-collection ino-icon{--icon-color: #3d40f5}",""])},1286:function(module,exports,__webpack_require__){var content=__webpack_require__(1287);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1287:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,"",""])},1288:function(module,exports,__webpack_require__){var content=__webpack_require__(1289);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1289:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,"",""])},1290:function(module,exports,__webpack_require__){var content=__webpack_require__(1291);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1291:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-input .customizable-input{margin-bottom:32px}.story-input h4.outline{margin:42px 0 12px}",""])},1292:function(module,exports,__webpack_require__){var content=__webpack_require__(1293);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1293:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-input .customizable-input{margin-bottom:32px}.story-input h4.outline{margin:42px 0 12px}ino-input{margin-top:15px;margin-bottom:15px}",""])},1294:function(module,exports,__webpack_require__){var content=__webpack_require__(1295);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1295:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-list h4{margin:36px 0 12px}.story-list ino-list:not(.divider-two-lists){border:1px solid rgba(0,0,0,.15)}.story-list .first-densed-list{margin-bottom:12px}",""])},1296:function(module,exports,__webpack_require__){var content=__webpack_require__(1297);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1297:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-menu h4:not(:first-child){margin-top:48px}",""])},1298:function(module,exports,__webpack_require__){var content=__webpack_require__(1299);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1299:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-nav-drawer__default,.story-nav-drawer__docked_anchor--right,.story-nav-drawer__dismissible{position:relative;height:500px;border:1px solid gray;border-radius:4px;overflow:hidden}.story-nav-drawer__default .main-content,.story-nav-drawer__docked_anchor--right .main-content,.story-nav-drawer__dismissible .main-content{box-sizing:border-box;overflow:auto;height:100%;padding:30px}",""])},1300:function(module,exports,__webpack_require__){var content=__webpack_require__(1301);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1301:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-popover{padding-left:20%}.story-popover ino-button{margin:0 12px 12px 0}.story-popover .styled-popover{padding:24px;display:flex;justify-content:space-between}",""])},1302:function(module,exports,__webpack_require__){var content=__webpack_require__(1303);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1303:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".progress-bar-example{display:flex;flex-direction:row;width:100%;justify-content:space-around;align-items:center}.progress-bar-example ino-progress-bar{width:80%}.progress-bar-example ino-input-file{width:10%}",""])},1304:function(module,exports,__webpack_require__){var content=__webpack_require__(1305);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1305:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-radio{display:flex;justify-content:space-between}",""])},1306:function(module,exports,__webpack_require__){var content=__webpack_require__(1307);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1307:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-radio{display:flex;justify-content:space-between}",""])},1308:function(module,exports,__webpack_require__){var content=__webpack_require__(1309);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1309:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-range .flex-parent{display:flex;flex-wrap:wrap}.story-range .flex-parent>.flex-child{margin:0 20px}.story-range .flex-parent-center{display:flex;justify-content:center}.story-range .stepped-range-container{width:200px}.story-range .stepped-range-container>.flex-child{width:100%}",""])},1310:function(module,exports,__webpack_require__){var content=__webpack_require__(1311);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1311:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-segment-button{display:flex;flex-direction:column}",""])},1312:function(module,exports,__webpack_require__){var content=__webpack_require__(1313);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1313:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-segment-group{display:flex;flex-direction:column}",""])},1314:function(module,exports,__webpack_require__){var content=__webpack_require__(1315);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1315:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-select h4{margin:36px 0 12px}.story-select ino-select{margin-bottom:12px}.story-select .customizable-select{margin-bottom:48px}",""])},1316:function(module,exports,__webpack_require__){var content=__webpack_require__(1317);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1317:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,"body{margin:0}.sidebar-iframe{width:100%;height:400px;border:1px #c1c1c1 solid}.sidebar-demo{display:block;height:100%}.sidebar-demo ino-icon{--icon-color: #fff}.sidebar-demo .header{position:absolute;width:100%;display:flex;height:40px;background-color:#003c7e;justify-content:flex-start;flex-direction:row;padding:0 10px 0 10px}.sidebar-demo .header--section{justify-content:flex-start;display:inline-flex;align-items:center;color:#fff;font-size:22px}.sidebar-demo .header--section p{padding:0 0 0 20px;color:#fff}.sidebar-demo .content{padding-top:40px}.sidebar-header{display:flex;height:60px;flex-direction:row;justify-content:flex-end}.sidebar-header ino-icon{--icon-color: #0d10f3}ino-sidebar[ino-align-right] .sidebar-header{justify-content:flex-start}",""])},1318:function(module,exports,__webpack_require__){var content=__webpack_require__(1319);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1319:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".snackbar-variants{display:flex;justify-content:space-around}",""])},1320:function(module,exports,__webpack_require__){var content=__webpack_require__(1321);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1321:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-spinner .flex-parent{display:flex;flex-wrap:wrap}.story-spinner .flex-parent>.flex-child{margin:0 20px}.story-spinner .flex-parent-center{display:flex;justify-content:center}",""])},1322:function(module,exports,__webpack_require__){var content=__webpack_require__(1323);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1323:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".primary{--ino-switch-toggled-on-color: #3d40f5;--ino-switch-toggled-on-thumb-color: #3d40f5;--ino-switch-toggled-on-track-color: #5d60f7;--ino-switch-hover-color: #5d60f7;--ino-switch-hover-track-color: #5d60f7;--ino-switch-active-color: #0d10f3;--ino-switch-active-track-color: #0d10f3}.secondary{--ino-switch-toggled-on-color: #9ccd00;--ino-switch-toggled-on-thumb-color: #9ccd00;--ino-switch-toggled-on-track-color: #bbd962;--ino-switch-hover-color: #bbd962;--ino-switch-hover-track-color: #bbd962;--ino-switch-active-color: #93bf00;--ino-switch-active-track-color: #93bf00}.success{--ino-switch-toggled-on-color: #9ccd00;--ino-switch-toggled-on-thumb-color: #9ccd00;--ino-switch-toggled-on-track-color: #c8ff1b;--ino-switch-hover-color: #c8ff1b;--ino-switch-hover-track-color: #c8ff1b;--ino-switch-active-color: #628100;--ino-switch-active-track-color: #628100}.warning{--ino-switch-toggled-on-color: #ffde03;--ino-switch-toggled-on-thumb-color: #ffde03;--ino-switch-toggled-on-track-color: #ffe850;--ino-switch-hover-color: #ffe850;--ino-switch-hover-track-color: #ffe850;--ino-switch-active-color: #b69e00;--ino-switch-active-track-color: #b69e00}.error{--ino-switch-toggled-on-color: #eb003b;--ino-switch-toggled-on-thumb-color: #eb003b;--ino-switch-toggled-on-track-color: #ff396a;--ino-switch-hover-color: #ff396a;--ino-switch-hover-track-color: #ff396a;--ino-switch-active-color: #9f0028;--ino-switch-active-track-color: #9f0028}.light{--ino-switch-toggled-on-color: #c1c1c1;--ino-switch-toggled-on-thumb-color: #c1c1c1;--ino-switch-toggled-on-track-color: #e7e7e7;--ino-switch-hover-color: #e7e7e7;--ino-switch-hover-track-color: #e7e7e7;--ino-switch-active-color: #9b9b9b;--ino-switch-active-track-color: #9b9b9b}.dark{--ino-switch-toggled-on-color: #777777;--ino-switch-toggled-on-thumb-color: #777777;--ino-switch-toggled-on-track-color: #9d9d9d;--ino-switch-hover-color: #9d9d9d;--ino-switch-hover-track-color: #9d9d9d;--ino-switch-active-color: #515151;--ino-switch-active-track-color: #515151}.story-switch-states{display:flex;justify-content:space-around;flex-wrap:wrap}.customizable-switch{display:block;margin-left:auto;margin-right:auto;margin-bottom:40px;align-self:center}.ino-switch-colors{display:flex;flex-wrap:wrap;justify-content:space-around}ino-switch{margin:5px}",""])},1324:function(module,exports,__webpack_require__){var content=__webpack_require__(1325);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1325:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".customizable-tab{display:block;margin-left:auto;margin-right:auto;margin-bottom:40px;align-self:center}.story-tab-variants{display:flex;justify-content:space-around;flex-wrap:wrap}",""])},1326:function(module,exports,__webpack_require__){var content=__webpack_require__(1327);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1327:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,"",""])},1328:function(module,exports,__webpack_require__){var content=__webpack_require__(1329);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1329:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-textarea .customizable-textarea{margin-bottom:32px}ino-textarea{margin-top:15px;margin-bottom:15px;width:100%}",""])},1330:function(module,exports,__webpack_require__){var content=__webpack_require__(1331);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1331:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,".story-tooltip{padding-left:20%}.story-tooltip h4{margin-top:48px}.story-tooltip ino-button{margin:0 12px 12px 0}",""])},1332:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"components",(function(){return components}));__webpack_require__(1333);var _assets_images_fjord_jpg__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(169),_assets_images_fjord_jpg__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_assets_images_fjord_jpg__WEBPACK_IMPORTED_MODULE_1__),_assets_images_trondheim_jpg__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(171),_assets_images_trondheim_jpg__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_assets_images_trondheim_jpg__WEBPACK_IMPORTED_MODULE_2__),_assets_images_liberty_jpg__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(170),_assets_images_liberty_jpg__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(_assets_images_liberty_jpg__WEBPACK_IMPORTED_MODULE_3__),_assets_images_InoSnackbar_Demo_Image_png__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(545),_assets_images_InoSnackbar_Demo_Image_png__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_assets_images_InoSnackbar_Demo_Image_png__WEBPACK_IMPORTED_MODULE_4__),_assets_images_InoDialog_Demo_Image_jpeg__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(546),_assets_images_InoDialog_Demo_Image_jpeg__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_assets_images_InoDialog_Demo_Image_jpeg__WEBPACK_IMPORTED_MODULE_5__),_assets_images_InoNavDrawer_Demo_Image_jpeg__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(547),_assets_images_InoNavDrawer_Demo_Image_jpeg__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(_assets_images_InoNavDrawer_Demo_Image_jpeg__WEBPACK_IMPORTED_MODULE_6__),_assets_images_InoSidebar_Demo_Image_png__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(548),_assets_images_InoSidebar_Demo_Image_png__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_assets_images_InoSidebar_Demo_Image_png__WEBPACK_IMPORTED_MODULE_7__);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import \'./showcase.scss\'\\nimport fjordImg from \'_local-assets/images/fjord.jpg\';\\nimport trondheimImg from \'_local-assets/images/trondheim.jpg\';\\nimport libertyImg from \'_local-assets/images/liberty.jpg\';\\nimport snackbarDemoImg from \'_local-assets/images/InoSnackbar_Demo_Image.png\';\\nimport dialogDemoImg from \'_local-assets/images/InoDialog_Demo_Image.jpeg\';\\nimport navDrawerDemoImg from \'_local-assets/images/InoNavDrawer_Demo_Image.jpeg\';\\nimport sidebarDemoImg from \'_local-assets/images/InoSidebar_Demo_Image.png\';\\n\\nexport default {\\n  title: \'Docs/Showcase\',\\n};\\n\\nexport const components = () => /*html*/ `\\n  <div class=\\"catalog\\">\\n      <h2>Buttons</h2>\\n      <div class=\\"catalog-grid\\">\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-button--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-button slot=\\"content\\" style=\\"margin: 6px\\">Solid Button</ino-button>\\n            <ino-button slot=\\"content\\" ino-fill=\\"outline\\" style=\\"margin: 6px\\">Outlined Button</ino-button>\\n            <ino-button slot=\\"content\\" ino-fill=\\"inverse\\" style=\\"margin: 6px\\">Inverted Button</ino-button>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-button</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-chip-set--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-chip-set ino-type=\\"choice\\">\\n              <ino-chip ino-label=\\"iOS\\" ino-selected ino-value=\\"0\\"></ino-chip>\\n              <ino-chip ino-label=\\"Android\\" ino-value=\\"1\\"></ino-chip>\\n            </ino-chip-set>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-chip-set</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-fab--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-fab ino-label=\\"none\\" ino-icon=\\"add\\" ino-edge-position=\\"none\\"></ino-fab>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-fab</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-fab-set--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-fab-set style=\\"position: unset\\" ino-open-dial=\\"true\\" ino-dial-direction=\\"top\\">\\n                <ino-fab ino-label=\\"none\\" ino-icon=\\"chat\\" ino-mini></ino-fab>\\n                <ino-fab ino-label=\\"none\\" ino-icon=\\"search\\" ino-mini></ino-fab>\\n            </ino-fab-set>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-fab-set</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-icon-button--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"primary\\"></ino-icon-button>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-icon-button</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-segment-button--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-segment-group id=\\"segment-grp\\">\\n              <ino-segment-button value=\\"1\\">M</ino-segment-button>\\n              <ino-segment-button value=\\"2\\">F</ino-segment-button>\\n              <ino-segment-button value=\\"3\\">D</ino-segment-button>\\n            </ino-segment-group>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-segment-group</h3>\\n          </div>\\n        </ino-card>\\n      </div>\\n\\n      <h2>Structure</h2>\\n      <div class=\\"catalog-grid\\">\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-card--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-card style=\\"width: 80%\\">\\n              <div slot=\\"header\\">\\n                <ino-icon ino-icon=\\"info\\" ino-clickable></ino-icon>\\n              </div>\\n              <div slot=\\"content\\" class=\\"card-content--vertical\\" style=\\"height: unset\\"><h3>Content</h3></div>\\n            </ino-card>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-card</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-dialog--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\" style=\\"padding-left: 20px; padding-right: 20px\\">\\n            <ino-img src=${dialogDemoImg} ino-ratio-width=\\"2.215\\" style=\\"box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);\\"/>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-dialog</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-header--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-header ino-title=\\"Section\\"></ino-header>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-header</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-list--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-list style=\\"border: 1px solid rgba(0, 0, 0, 0.15);\\" ino-dense>\\n              <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n              <ino-list-item ino-text=\\"With leading icon\\">\\n                  <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n              </ino-list-item>\\n              <ino-control-item ino-role=\\"radio\\" ino-text=\\"Disabled control item\\" ino-disabled> </ino-control-item>\\n            </ino-list>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-list</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-menu--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-button id=\\"menu-2\\" ino-icon=\\"menu\\">Menu</ino-button>\\n            <ino-menu id=\\"custom-menu-2\\" ino-for=\\"menu-2\\" ino-open>\\n              <ino-list-item ino-text=\\"Item\\"></ino-list-item>\\n              <ino-list-item ino-text=\\"Item 2\\"></ino-list-item>\\n            </ino-menu>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-menu</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-naw-drawer--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\" style=\\"padding-left: 20px; padding-right: 20px\\">\\n            <ino-img src=${navDrawerDemoImg} ino-ratio-width=\\"1.818\\" style=\\"box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);\\"/>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-nav-drawer</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-sidebar--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\" style=\\"padding-left: 20px; padding-right: 20px\\">\\n            <ino-img src=${sidebarDemoImg} ino-ratio-width=\\"1.783\\" style=\\"box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);\\" />\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-sidebar</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-tab-bar--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-tab-bar>\\n              <ino-tab\\n                ino-label=\\"Cart\\"\\n                ino-icon=\\"cart\\"\\n                ino-indicator-content-width=\\"true\\"\\n                ino-stacked>\\n              </ino-tab>\\n              <ino-tab\\n                ino-label=\\"Account\\"\\n                ino-icon=\\"user\\"\\n                ino-indicator-content-width=\\"true\\"\\n                ino-stacked>\\n              </ino-tab>\\n            </ino-tab-bar>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-tab-bar</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-table--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-table>\\n              <ino-table-row slot=\\"header\\" ino-header-row>\\n                <ino-table-cell>ID</ino-table-cell>\\n                <ino-table-cell>Header A</ino-table-cell>\\n                <ino-table-cell>Header B</ino-table-cell>\\n              </ino-table-row>\\n              <ino-table-row>\\n                <ino-table-cell ino-numeric>1</ino-table-cell>\\n                <ino-table-cell>Cell A1</ino-table-cell>\\n                <ino-table-cell>Cell B1</ino-table-cell>\\n              </ino-table-row>\\n              <ino-table-row>\\n                <ino-table-cell ino-numeric>2</ino-table-cell>\\n                <ino-table-cell>Cell A2</ino-table-cell>\\n                <ino-table-cell>Cell B2</ino-table-cell>\\n              </ino-table-row>\\n            </ino-table>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-table</h3>\\n          </div>\\n        </ino-card>\\n      </div>\\n\\n      <h2>Input</h2>\\n      <div class=\\"catalog-grid\\">\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-checkbox--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-checkbox checked style=\\"width: 50%\\">Checked</ino-checkbox>\\n            <ino-checkbox style=\\"width: 50%\\">Unchecked</ino-checkbox>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-checkbox</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-datepicker--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-datepicker ino-type=\\"datetime\\" ino-date-format=\\"H:i d.m.Y\\" ino-label=\\"Datetime\\" disabled></ino-datepicker>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-datepicker</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-form-row--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-form-row ino-label=\\"First Name\\">\\n              <ino-input></ino-input>\\n            </ino-form-row>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-form-row</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-input--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-input placeholder=\\"Email\\"></ino-input>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-input</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-radio-group--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-radio-group id=\\"radio-grp\\" value=\\"2\\">\\n              <ino-radio value=\\"1\\">No</ino-radio>\\n              <ino-radio value=\\"2\\">Yes</ino-radio>\\n            </ino-radio-group>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-radio-group</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-range--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-range ino-color-scheme=\\"primary\\" value=\\"40\\" min=\\"0\\" max=\\"100\\" step=\\"20\\" ino-discrete ino-markers style=\\"width: 80%\\"></ino-range>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-range</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-select--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-select ino-label=\\"Select Option\\" disabled>\\n              <ino-option value=\\"Selected Option\\" selected>Selected Option</ino-option>\\n            </ino-select>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-select</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-switch--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-switch checked></ino-switch>\\n            <ino-switch></ino-switch>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-switch</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-textarea--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-textarea ino-label=\\"Feedback\\" rows=\\"3\\" cols=\\"24\\" style=\\"width: unset\\"></ino-textarea>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-textarea</h3>\\n          </div>\\n        </ino-card>\\n      </div>\\n\\n      <h2>Graphic</h2>\\n      <div class=\\"catalog-grid\\">\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/graphic-ino-icon--default-usage\'\\">\\n          <div class=\\"card-content--horizontal\\" slot=\\"content\\">\\n            <ino-icon ino-icon=\\"info\\"></ino-icon>\\n            <ino-icon ino-icon=\\"star\\"></ino-icon>\\n            <ino-icon ino-icon=\\"chat\\"></ino-icon>\\n            <ino-icon ino-icon=\\"onboarding\\"></ino-icon>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-icon</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/graphic-ino-img-list--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-img-list>\\n              <ino-img\\n                  src=${fjordImg}\\n                  alt=\\"fjord\\"\\n                  width=\\"50\\"\\n                  height=\\"50\\"\\n                  ino-img-list-item\\n              ></ino-img>\\n              <ino-img\\n                  src=${trondheimImg}\\n                  alt=\\"trondheim\\"\\n                  width=\\"50\\"\\n                  height=\\"50\\"\\n                  ino-img-list-item\\n              ></ino-img>\\n              <ino-img\\n                  src=${libertyImg}\\n                  alt=\\"liberty\\"\\n                  width=\\"50\\"\\n                  height=\\"50\\"\\n                  ino-img-list-item\\n              ></ino-img>\\n            </ino-img-list>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-img-list</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/graphic-ino-img--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-img\\n              src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\"\\n              ino-rounded\\n              width=\\"90\\"\\n              height=\\"90\\"\\n            />\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-img</h3>\\n          </div>\\n        </ino-card>\\n      </div>\\n\\n      <h2>Notification</h2>\\n      <div class=\\"catalog-grid\\">\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/notification-ino-popover--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-button id=\\"popover-hover-focus\\">Display Popover</ino-button>\\n            <ino-popover ino-for=\\"popover-hover-focus\\">This is a popover!</ino-popover>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-popover</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/notification-ino-progress-bar--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-progress-bar ino-buffer=\\"0.8\\" ino-progress=\\"0.3\\" style=\\"width: 80%\\"></ino-progress-bar>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-progress-bar</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/notification-ino-snackbar--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-img src=${snackbarDemoImg} ino-ratio-width=\\"3.62\\"></ino-img>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-snackbar</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/notification-ino-spinner--default-usage\'\\">\\n          <div class=\\"card-content--horizontal\\" slot=\\"content\\">\\n            <ino-spinner ino-type=\\"tile\\"></ino-spinner>\\n            <ino-spinner ino-type=\\"bounce\\"></ino-spinner>\\n            <ino-spinner ino-type=\\"circle\\"></ino-spinner>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-spinner</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/notification-ino-tooltip--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-button id=\\"primary-tooltip\\" ino-color-scheme=\\"primary\\">Display Tooltip</ino-button>\\n            <ino-tooltip ino-for=\\"primary-tooltip\\" ino-label=\\"This is a tooltip!\\" ino-color-scheme=\\"primary\\" ino-placement=\\"top\\"></ino-tooltip>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-tooltip</h3>\\n          </div>\\n        </ino-card>\\n      </div>\\n    </div>\\n`;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"components":{"startLoc":{"col":26,"line":14},"endLoc":{"col":1,"line":391},"startBody":{"col":26,"line":14},"endBody":{"col":1,"line":391}}};\n    \nimport \'./showcase.scss\'\nimport fjordImg from \'_local-assets/images/fjord.jpg\';\nimport trondheimImg from \'_local-assets/images/trondheim.jpg\';\nimport libertyImg from \'_local-assets/images/liberty.jpg\';\nimport snackbarDemoImg from \'_local-assets/images/InoSnackbar_Demo_Image.png\';\nimport dialogDemoImg from \'_local-assets/images/InoDialog_Demo_Image.jpeg\';\nimport navDrawerDemoImg from \'_local-assets/images/InoNavDrawer_Demo_Image.jpeg\';\nimport sidebarDemoImg from \'_local-assets/images/InoSidebar_Demo_Image.png\';\n\nexport default {parameters: {"storySource":{"source":"import \'./showcase.scss\'\\nimport fjordImg from \'_local-assets/images/fjord.jpg\';\\nimport trondheimImg from \'_local-assets/images/trondheim.jpg\';\\nimport libertyImg from \'_local-assets/images/liberty.jpg\';\\nimport snackbarDemoImg from \'_local-assets/images/InoSnackbar_Demo_Image.png\';\\nimport dialogDemoImg from \'_local-assets/images/InoDialog_Demo_Image.jpeg\';\\nimport navDrawerDemoImg from \'_local-assets/images/InoNavDrawer_Demo_Image.jpeg\';\\nimport sidebarDemoImg from \'_local-assets/images/InoSidebar_Demo_Image.png\';\\n\\nexport default {\\n  title: \'Docs/Showcase\',\\n};\\n\\nexport const components = () => /*html*/ `\\n  <div class=\\"catalog\\">\\n      <h2>Buttons</h2>\\n      <div class=\\"catalog-grid\\">\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-button--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-button slot=\\"content\\" style=\\"margin: 6px\\">Solid Button</ino-button>\\n            <ino-button slot=\\"content\\" ino-fill=\\"outline\\" style=\\"margin: 6px\\">Outlined Button</ino-button>\\n            <ino-button slot=\\"content\\" ino-fill=\\"inverse\\" style=\\"margin: 6px\\">Inverted Button</ino-button>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-button</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-chip-set--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-chip-set ino-type=\\"choice\\">\\n              <ino-chip ino-label=\\"iOS\\" ino-selected ino-value=\\"0\\"></ino-chip>\\n              <ino-chip ino-label=\\"Android\\" ino-value=\\"1\\"></ino-chip>\\n            </ino-chip-set>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-chip-set</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-fab--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-fab ino-label=\\"none\\" ino-icon=\\"add\\" ino-edge-position=\\"none\\"></ino-fab>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-fab</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-fab-set--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-fab-set style=\\"position: unset\\" ino-open-dial=\\"true\\" ino-dial-direction=\\"top\\">\\n                <ino-fab ino-label=\\"none\\" ino-icon=\\"chat\\" ino-mini></ino-fab>\\n                <ino-fab ino-label=\\"none\\" ino-icon=\\"search\\" ino-mini></ino-fab>\\n            </ino-fab-set>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-fab-set</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-icon-button--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"primary\\"></ino-icon-button>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-icon-button</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/buttons-ino-segment-button--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-segment-group id=\\"segment-grp\\">\\n              <ino-segment-button value=\\"1\\">M</ino-segment-button>\\n              <ino-segment-button value=\\"2\\">F</ino-segment-button>\\n              <ino-segment-button value=\\"3\\">D</ino-segment-button>\\n            </ino-segment-group>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-segment-group</h3>\\n          </div>\\n        </ino-card>\\n      </div>\\n\\n      <h2>Structure</h2>\\n      <div class=\\"catalog-grid\\">\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-card--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-card style=\\"width: 80%\\">\\n              <div slot=\\"header\\">\\n                <ino-icon ino-icon=\\"info\\" ino-clickable></ino-icon>\\n              </div>\\n              <div slot=\\"content\\" class=\\"card-content--vertical\\" style=\\"height: unset\\"><h3>Content</h3></div>\\n            </ino-card>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-card</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-dialog--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\" style=\\"padding-left: 20px; padding-right: 20px\\">\\n            <ino-img src=${dialogDemoImg} ino-ratio-width=\\"2.215\\" style=\\"box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);\\"/>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-dialog</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-header--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-header ino-title=\\"Section\\"></ino-header>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-header</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-list--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-list style=\\"border: 1px solid rgba(0, 0, 0, 0.15);\\" ino-dense>\\n              <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n              <ino-list-item ino-text=\\"With leading icon\\">\\n                  <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n              </ino-list-item>\\n              <ino-control-item ino-role=\\"radio\\" ino-text=\\"Disabled control item\\" ino-disabled> </ino-control-item>\\n            </ino-list>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-list</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-menu--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-button id=\\"menu-2\\" ino-icon=\\"menu\\">Menu</ino-button>\\n            <ino-menu id=\\"custom-menu-2\\" ino-for=\\"menu-2\\" ino-open>\\n              <ino-list-item ino-text=\\"Item\\"></ino-list-item>\\n              <ino-list-item ino-text=\\"Item 2\\"></ino-list-item>\\n            </ino-menu>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-menu</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-naw-drawer--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\" style=\\"padding-left: 20px; padding-right: 20px\\">\\n            <ino-img src=${navDrawerDemoImg} ino-ratio-width=\\"1.818\\" style=\\"box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);\\"/>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-nav-drawer</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-sidebar--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\" style=\\"padding-left: 20px; padding-right: 20px\\">\\n            <ino-img src=${sidebarDemoImg} ino-ratio-width=\\"1.783\\" style=\\"box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);\\" />\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-sidebar</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-tab-bar--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-tab-bar>\\n              <ino-tab\\n                ino-label=\\"Cart\\"\\n                ino-icon=\\"cart\\"\\n                ino-indicator-content-width=\\"true\\"\\n                ino-stacked>\\n              </ino-tab>\\n              <ino-tab\\n                ino-label=\\"Account\\"\\n                ino-icon=\\"user\\"\\n                ino-indicator-content-width=\\"true\\"\\n                ino-stacked>\\n              </ino-tab>\\n            </ino-tab-bar>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-tab-bar</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/structure-ino-table--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-table>\\n              <ino-table-row slot=\\"header\\" ino-header-row>\\n                <ino-table-cell>ID</ino-table-cell>\\n                <ino-table-cell>Header A</ino-table-cell>\\n                <ino-table-cell>Header B</ino-table-cell>\\n              </ino-table-row>\\n              <ino-table-row>\\n                <ino-table-cell ino-numeric>1</ino-table-cell>\\n                <ino-table-cell>Cell A1</ino-table-cell>\\n                <ino-table-cell>Cell B1</ino-table-cell>\\n              </ino-table-row>\\n              <ino-table-row>\\n                <ino-table-cell ino-numeric>2</ino-table-cell>\\n                <ino-table-cell>Cell A2</ino-table-cell>\\n                <ino-table-cell>Cell B2</ino-table-cell>\\n              </ino-table-row>\\n            </ino-table>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-table</h3>\\n          </div>\\n        </ino-card>\\n      </div>\\n\\n      <h2>Input</h2>\\n      <div class=\\"catalog-grid\\">\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-checkbox--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-checkbox checked style=\\"width: 50%\\">Checked</ino-checkbox>\\n            <ino-checkbox style=\\"width: 50%\\">Unchecked</ino-checkbox>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-checkbox</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-datepicker--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-datepicker ino-type=\\"datetime\\" ino-date-format=\\"H:i d.m.Y\\" ino-label=\\"Datetime\\" disabled></ino-datepicker>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-datepicker</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-form-row--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-form-row ino-label=\\"First Name\\">\\n              <ino-input></ino-input>\\n            </ino-form-row>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-form-row</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-input--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-input placeholder=\\"Email\\"></ino-input>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-input</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-radio-group--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-radio-group id=\\"radio-grp\\" value=\\"2\\">\\n              <ino-radio value=\\"1\\">No</ino-radio>\\n              <ino-radio value=\\"2\\">Yes</ino-radio>\\n            </ino-radio-group>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-radio-group</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-range--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-range ino-color-scheme=\\"primary\\" value=\\"40\\" min=\\"0\\" max=\\"100\\" step=\\"20\\" ino-discrete ino-markers style=\\"width: 80%\\"></ino-range>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-range</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-select--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-select ino-label=\\"Select Option\\" disabled>\\n              <ino-option value=\\"Selected Option\\" selected>Selected Option</ino-option>\\n            </ino-select>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-select</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-switch--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-switch checked></ino-switch>\\n            <ino-switch></ino-switch>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-switch</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/input-ino-textarea--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-textarea ino-label=\\"Feedback\\" rows=\\"3\\" cols=\\"24\\" style=\\"width: unset\\"></ino-textarea>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-textarea</h3>\\n          </div>\\n        </ino-card>\\n      </div>\\n\\n      <h2>Graphic</h2>\\n      <div class=\\"catalog-grid\\">\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/graphic-ino-icon--default-usage\'\\">\\n          <div class=\\"card-content--horizontal\\" slot=\\"content\\">\\n            <ino-icon ino-icon=\\"info\\"></ino-icon>\\n            <ino-icon ino-icon=\\"star\\"></ino-icon>\\n            <ino-icon ino-icon=\\"chat\\"></ino-icon>\\n            <ino-icon ino-icon=\\"onboarding\\"></ino-icon>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-icon</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/graphic-ino-img-list--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-img-list>\\n              <ino-img\\n                  src=${fjordImg}\\n                  alt=\\"fjord\\"\\n                  width=\\"50\\"\\n                  height=\\"50\\"\\n                  ino-img-list-item\\n              ></ino-img>\\n              <ino-img\\n                  src=${trondheimImg}\\n                  alt=\\"trondheim\\"\\n                  width=\\"50\\"\\n                  height=\\"50\\"\\n                  ino-img-list-item\\n              ></ino-img>\\n              <ino-img\\n                  src=${libertyImg}\\n                  alt=\\"liberty\\"\\n                  width=\\"50\\"\\n                  height=\\"50\\"\\n                  ino-img-list-item\\n              ></ino-img>\\n            </ino-img-list>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-img-list</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/graphic-ino-img--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-img\\n              src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\"\\n              ino-rounded\\n              width=\\"90\\"\\n              height=\\"90\\"\\n            />\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-img</h3>\\n          </div>\\n        </ino-card>\\n      </div>\\n\\n      <h2>Notification</h2>\\n      <div class=\\"catalog-grid\\">\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/notification-ino-popover--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-button id=\\"popover-hover-focus\\">Display Popover</ino-button>\\n            <ino-popover ino-for=\\"popover-hover-focus\\">This is a popover!</ino-popover>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-popover</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/notification-ino-progress-bar--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-progress-bar ino-buffer=\\"0.8\\" ino-progress=\\"0.3\\" style=\\"width: 80%\\"></ino-progress-bar>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-progress-bar</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/notification-ino-snackbar--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-img src=${snackbarDemoImg} ino-ratio-width=\\"3.62\\"></ino-img>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-snackbar</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/notification-ino-spinner--default-usage\'\\">\\n          <div class=\\"card-content--horizontal\\" slot=\\"content\\">\\n            <ino-spinner ino-type=\\"tile\\"></ino-spinner>\\n            <ino-spinner ino-type=\\"bounce\\"></ino-spinner>\\n            <ino-spinner ino-type=\\"circle\\"></ino-spinner>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-spinner</h3>\\n          </div>\\n        </ino-card>\\n        <ino-card onClick=\\"parent.location.href=\'./?path=/story/notification-ino-tooltip--default-usage\'\\">\\n          <div class=\\"card-content--vertical\\" slot=\\"content\\">\\n            <ino-button id=\\"primary-tooltip\\" ino-color-scheme=\\"primary\\">Display Tooltip</ino-button>\\n            <ino-tooltip ino-for=\\"primary-tooltip\\" ino-label=\\"This is a tooltip!\\" ino-color-scheme=\\"primary\\" ino-placement=\\"top\\"></ino-tooltip>\\n          </div>\\n          <div class=\\"card-footer\\" slot=\\"footer\\">\\n            <h3>ino-tooltip</h3>\\n          </div>\\n        </ino-card>\\n      </div>\\n    </div>\\n`;\\n","locationsMap":{"components":{"startLoc":{"col":26,"line":14},"endLoc":{"col":1,"line":391},"startBody":{"col":26,"line":14},"endBody":{"col":1,"line":391}}}},},\n  title: \'Docs/Showcase\',\n};\n\nexport const components = () => /*html*/ `\n  <div class="catalog">\n      <h2>Buttons</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-button--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button slot="content" style="margin: 6px">Solid Button</ino-button>\n            <ino-button slot="content" ino-fill="outline" style="margin: 6px">Outlined Button</ino-button>\n            <ino-button slot="content" ino-fill="inverse" style="margin: 6px">Inverted Button</ino-button>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-button</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-chip-set--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-chip-set ino-type="choice">\n              <ino-chip ino-label="iOS" ino-selected ino-value="0"></ino-chip>\n              <ino-chip ino-label="Android" ino-value="1"></ino-chip>\n            </ino-chip-set>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-chip-set</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-fab--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-fab ino-label="none" ino-icon="add" ino-edge-position="none"></ino-fab>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-fab</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-fab-set--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-fab-set style="position: unset" ino-open-dial="true" ino-dial-direction="top">\n                <ino-fab ino-label="none" ino-icon="chat" ino-mini></ino-fab>\n                <ino-fab ino-label="none" ino-icon="search" ino-mini></ino-fab>\n            </ino-fab-set>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-fab-set</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-icon-button--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-icon-button ino-icon="star" ino-color-scheme="primary"></ino-icon-button>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-icon-button</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-segment-button--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-segment-group id="segment-grp">\n              <ino-segment-button value="1">M</ino-segment-button>\n              <ino-segment-button value="2">F</ino-segment-button>\n              <ino-segment-button value="3">D</ino-segment-button>\n            </ino-segment-group>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-segment-group</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Structure</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-card--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-card style="width: 80%">\n              <div slot="header">\n                <ino-icon ino-icon="info" ino-clickable></ino-icon>\n              </div>\n              <div slot="content" class="card-content--vertical" style="height: unset"><h3>Content</h3></div>\n            </ino-card>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-card</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-dialog--default-usage\'">\n          <div class="card-content--vertical" slot="content" style="padding-left: 20px; padding-right: 20px">\n            <ino-img src=${dialogDemoImg} ino-ratio-width="2.215" style="box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);"/>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-dialog</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-header--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-header ino-title="Section"></ino-header>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-header</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-list--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-list style="border: 1px solid rgba(0, 0, 0, 0.15);" ino-dense>\n              <ino-list-item ino-text="List item"></ino-list-item>\n              <ino-list-item ino-text="With leading icon">\n                  <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n              </ino-list-item>\n              <ino-control-item ino-role="radio" ino-text="Disabled control item" ino-disabled> </ino-control-item>\n            </ino-list>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-list</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-menu--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button id="menu-2" ino-icon="menu">Menu</ino-button>\n            <ino-menu id="custom-menu-2" ino-for="menu-2" ino-open>\n              <ino-list-item ino-text="Item"></ino-list-item>\n              <ino-list-item ino-text="Item 2"></ino-list-item>\n            </ino-menu>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-menu</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-naw-drawer--default-usage\'">\n          <div class="card-content--vertical" slot="content" style="padding-left: 20px; padding-right: 20px">\n            <ino-img src=${navDrawerDemoImg} ino-ratio-width="1.818" style="box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);"/>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-nav-drawer</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-sidebar--default-usage\'">\n          <div class="card-content--vertical" slot="content" style="padding-left: 20px; padding-right: 20px">\n            <ino-img src=${sidebarDemoImg} ino-ratio-width="1.783" style="box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);" />\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-sidebar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-tab-bar--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-tab-bar>\n              <ino-tab\n                ino-label="Cart"\n                ino-icon="cart"\n                ino-indicator-content-width="true"\n                ino-stacked>\n              </ino-tab>\n              <ino-tab\n                ino-label="Account"\n                ino-icon="user"\n                ino-indicator-content-width="true"\n                ino-stacked>\n              </ino-tab>\n            </ino-tab-bar>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-tab-bar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-table--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-table>\n              <ino-table-row slot="header" ino-header-row>\n                <ino-table-cell>ID</ino-table-cell>\n                <ino-table-cell>Header A</ino-table-cell>\n                <ino-table-cell>Header B</ino-table-cell>\n              </ino-table-row>\n              <ino-table-row>\n                <ino-table-cell ino-numeric>1</ino-table-cell>\n                <ino-table-cell>Cell A1</ino-table-cell>\n                <ino-table-cell>Cell B1</ino-table-cell>\n              </ino-table-row>\n              <ino-table-row>\n                <ino-table-cell ino-numeric>2</ino-table-cell>\n                <ino-table-cell>Cell A2</ino-table-cell>\n                <ino-table-cell>Cell B2</ino-table-cell>\n              </ino-table-row>\n            </ino-table>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-table</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Input</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-checkbox--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-checkbox checked style="width: 50%">Checked</ino-checkbox>\n            <ino-checkbox style="width: 50%">Unchecked</ino-checkbox>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-checkbox</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-datepicker--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-datepicker ino-type="datetime" ino-date-format="H:i d.m.Y" ino-label="Datetime" disabled></ino-datepicker>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-datepicker</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-form-row--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-form-row ino-label="First Name">\n              <ino-input></ino-input>\n            </ino-form-row>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-form-row</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-input--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-input placeholder="Email"></ino-input>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-input</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-radio-group--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-radio-group id="radio-grp" value="2">\n              <ino-radio value="1">No</ino-radio>\n              <ino-radio value="2">Yes</ino-radio>\n            </ino-radio-group>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-radio-group</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-range--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-range ino-color-scheme="primary" value="40" min="0" max="100" step="20" ino-discrete ino-markers style="width: 80%"></ino-range>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-range</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-select--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-select ino-label="Select Option" disabled>\n              <ino-option value="Selected Option" selected>Selected Option</ino-option>\n            </ino-select>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-select</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-switch--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-switch checked></ino-switch>\n            <ino-switch></ino-switch>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-switch</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-textarea--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-textarea ino-label="Feedback" rows="3" cols="24" style="width: unset"></ino-textarea>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-textarea</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Graphic</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/graphic-ino-icon--default-usage\'">\n          <div class="card-content--horizontal" slot="content">\n            <ino-icon ino-icon="info"></ino-icon>\n            <ino-icon ino-icon="star"></ino-icon>\n            <ino-icon ino-icon="chat"></ino-icon>\n            <ino-icon ino-icon="onboarding"></ino-icon>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-icon</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/graphic-ino-img-list--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-img-list>\n              <ino-img\n                  src=${fjordImg}\n                  alt="fjord"\n                  width="50"\n                  height="50"\n                  ino-img-list-item\n              ></ino-img>\n              <ino-img\n                  src=${trondheimImg}\n                  alt="trondheim"\n                  width="50"\n                  height="50"\n                  ino-img-list-item\n              ></ino-img>\n              <ino-img\n                  src=${libertyImg}\n                  alt="liberty"\n                  width="50"\n                  height="50"\n                  ino-img-list-item\n              ></ino-img>\n            </ino-img-list>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-img-list</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/graphic-ino-img--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-img\n              src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"\n              ino-rounded\n              width="90"\n              height="90"\n            />\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-img</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Notification</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-popover--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button id="popover-hover-focus">Display Popover</ino-button>\n            <ino-popover ino-for="popover-hover-focus">This is a popover!</ino-popover>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-popover</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-progress-bar--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-progress-bar ino-buffer="0.8" ino-progress="0.3" style="width: 80%"></ino-progress-bar>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-progress-bar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-snackbar--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-img src=${snackbarDemoImg} ino-ratio-width="3.62"></ino-img>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-snackbar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-spinner--default-usage\'">\n          <div class="card-content--horizontal" slot="content">\n            <ino-spinner ino-type="tile"></ino-spinner>\n            <ino-spinner ino-type="bounce"></ino-spinner>\n            <ino-spinner ino-type="circle"></ino-spinner>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-spinner</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-tooltip--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button id="primary-tooltip" ino-color-scheme="primary">Display Tooltip</ino-button>\n            <ino-tooltip ino-for="primary-tooltip" ino-label="This is a tooltip!" ino-color-scheme="primary" ino-placement="top"></ino-tooltip>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-tooltip</h3>\n          </div>\n        </ino-card>\n      </div>\n    </div>\n`;\n',locationsMap:{components:{startLoc:{col:26,line:22},endLoc:{col:1,line:399},startBody:{col:26,line:22},endBody:{col:1,line:399}}}}},"storySource",{source:'import \'./showcase.scss\'\nimport fjordImg from \'_local-assets/images/fjord.jpg\';\nimport trondheimImg from \'_local-assets/images/trondheim.jpg\';\nimport libertyImg from \'_local-assets/images/liberty.jpg\';\nimport snackbarDemoImg from \'_local-assets/images/InoSnackbar_Demo_Image.png\';\nimport dialogDemoImg from \'_local-assets/images/InoDialog_Demo_Image.jpeg\';\nimport navDrawerDemoImg from \'_local-assets/images/InoNavDrawer_Demo_Image.jpeg\';\nimport sidebarDemoImg from \'_local-assets/images/InoSidebar_Demo_Image.png\';\n\nexport default {\n  title: \'Docs/Showcase\',\n};\n\nexport const components = () => /*html*/ `\n  <div class="catalog">\n      <h2>Buttons</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-button--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button slot="content" style="margin: 6px">Solid Button</ino-button>\n            <ino-button slot="content" ino-fill="outline" style="margin: 6px">Outlined Button</ino-button>\n            <ino-button slot="content" ino-fill="inverse" style="margin: 6px">Inverted Button</ino-button>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-button</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-chip-set--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-chip-set ino-type="choice">\n              <ino-chip ino-label="iOS" ino-selected ino-value="0"></ino-chip>\n              <ino-chip ino-label="Android" ino-value="1"></ino-chip>\n            </ino-chip-set>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-chip-set</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-fab--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-fab ino-label="none" ino-icon="add" ino-edge-position="none"></ino-fab>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-fab</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-fab-set--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-fab-set style="position: unset" ino-open-dial="true" ino-dial-direction="top">\n                <ino-fab ino-label="none" ino-icon="chat" ino-mini></ino-fab>\n                <ino-fab ino-label="none" ino-icon="search" ino-mini></ino-fab>\n            </ino-fab-set>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-fab-set</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-icon-button--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-icon-button ino-icon="star" ino-color-scheme="primary"></ino-icon-button>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-icon-button</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-segment-button--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-segment-group id="segment-grp">\n              <ino-segment-button value="1">M</ino-segment-button>\n              <ino-segment-button value="2">F</ino-segment-button>\n              <ino-segment-button value="3">D</ino-segment-button>\n            </ino-segment-group>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-segment-group</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Structure</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-card--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-card style="width: 80%">\n              <div slot="header">\n                <ino-icon ino-icon="info" ino-clickable></ino-icon>\n              </div>\n              <div slot="content" class="card-content--vertical" style="height: unset"><h3>Content</h3></div>\n            </ino-card>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-card</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-dialog--default-usage\'">\n          <div class="card-content--vertical" slot="content" style="padding-left: 20px; padding-right: 20px">\n            <ino-img src=${dialogDemoImg} ino-ratio-width="2.215" style="box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);"/>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-dialog</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-header--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-header ino-title="Section"></ino-header>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-header</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-list--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-list style="border: 1px solid rgba(0, 0, 0, 0.15);" ino-dense>\n              <ino-list-item ino-text="List item"></ino-list-item>\n              <ino-list-item ino-text="With leading icon">\n                  <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n              </ino-list-item>\n              <ino-control-item ino-role="radio" ino-text="Disabled control item" ino-disabled> </ino-control-item>\n            </ino-list>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-list</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-menu--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button id="menu-2" ino-icon="menu">Menu</ino-button>\n            <ino-menu id="custom-menu-2" ino-for="menu-2" ino-open>\n              <ino-list-item ino-text="Item"></ino-list-item>\n              <ino-list-item ino-text="Item 2"></ino-list-item>\n            </ino-menu>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-menu</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-naw-drawer--default-usage\'">\n          <div class="card-content--vertical" slot="content" style="padding-left: 20px; padding-right: 20px">\n            <ino-img src=${navDrawerDemoImg} ino-ratio-width="1.818" style="box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);"/>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-nav-drawer</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-sidebar--default-usage\'">\n          <div class="card-content--vertical" slot="content" style="padding-left: 20px; padding-right: 20px">\n            <ino-img src=${sidebarDemoImg} ino-ratio-width="1.783" style="box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);" />\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-sidebar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-tab-bar--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-tab-bar>\n              <ino-tab\n                ino-label="Cart"\n                ino-icon="cart"\n                ino-indicator-content-width="true"\n                ino-stacked>\n              </ino-tab>\n              <ino-tab\n                ino-label="Account"\n                ino-icon="user"\n                ino-indicator-content-width="true"\n                ino-stacked>\n              </ino-tab>\n            </ino-tab-bar>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-tab-bar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-table--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-table>\n              <ino-table-row slot="header" ino-header-row>\n                <ino-table-cell>ID</ino-table-cell>\n                <ino-table-cell>Header A</ino-table-cell>\n                <ino-table-cell>Header B</ino-table-cell>\n              </ino-table-row>\n              <ino-table-row>\n                <ino-table-cell ino-numeric>1</ino-table-cell>\n                <ino-table-cell>Cell A1</ino-table-cell>\n                <ino-table-cell>Cell B1</ino-table-cell>\n              </ino-table-row>\n              <ino-table-row>\n                <ino-table-cell ino-numeric>2</ino-table-cell>\n                <ino-table-cell>Cell A2</ino-table-cell>\n                <ino-table-cell>Cell B2</ino-table-cell>\n              </ino-table-row>\n            </ino-table>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-table</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Input</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-checkbox--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-checkbox checked style="width: 50%">Checked</ino-checkbox>\n            <ino-checkbox style="width: 50%">Unchecked</ino-checkbox>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-checkbox</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-datepicker--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-datepicker ino-type="datetime" ino-date-format="H:i d.m.Y" ino-label="Datetime" disabled></ino-datepicker>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-datepicker</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-form-row--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-form-row ino-label="First Name">\n              <ino-input></ino-input>\n            </ino-form-row>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-form-row</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-input--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-input placeholder="Email"></ino-input>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-input</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-radio-group--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-radio-group id="radio-grp" value="2">\n              <ino-radio value="1">No</ino-radio>\n              <ino-radio value="2">Yes</ino-radio>\n            </ino-radio-group>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-radio-group</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-range--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-range ino-color-scheme="primary" value="40" min="0" max="100" step="20" ino-discrete ino-markers style="width: 80%"></ino-range>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-range</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-select--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-select ino-label="Select Option" disabled>\n              <ino-option value="Selected Option" selected>Selected Option</ino-option>\n            </ino-select>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-select</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-switch--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-switch checked></ino-switch>\n            <ino-switch></ino-switch>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-switch</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-textarea--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-textarea ino-label="Feedback" rows="3" cols="24" style="width: unset"></ino-textarea>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-textarea</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Graphic</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/graphic-ino-icon--default-usage\'">\n          <div class="card-content--horizontal" slot="content">\n            <ino-icon ino-icon="info"></ino-icon>\n            <ino-icon ino-icon="star"></ino-icon>\n            <ino-icon ino-icon="chat"></ino-icon>\n            <ino-icon ino-icon="onboarding"></ino-icon>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-icon</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/graphic-ino-img-list--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-img-list>\n              <ino-img\n                  src=${fjordImg}\n                  alt="fjord"\n                  width="50"\n                  height="50"\n                  ino-img-list-item\n              ></ino-img>\n              <ino-img\n                  src=${trondheimImg}\n                  alt="trondheim"\n                  width="50"\n                  height="50"\n                  ino-img-list-item\n              ></ino-img>\n              <ino-img\n                  src=${libertyImg}\n                  alt="liberty"\n                  width="50"\n                  height="50"\n                  ino-img-list-item\n              ></ino-img>\n            </ino-img-list>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-img-list</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/graphic-ino-img--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-img\n              src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"\n              ino-rounded\n              width="90"\n              height="90"\n            />\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-img</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Notification</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-popover--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button id="popover-hover-focus">Display Popover</ino-button>\n            <ino-popover ino-for="popover-hover-focus">This is a popover!</ino-popover>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-popover</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-progress-bar--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-progress-bar ino-buffer="0.8" ino-progress="0.3" style="width: 80%"></ino-progress-bar>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-progress-bar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-snackbar--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-img src=${snackbarDemoImg} ino-ratio-width="3.62"></ino-img>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-snackbar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-spinner--default-usage\'">\n          <div class="card-content--horizontal" slot="content">\n            <ino-spinner ino-type="tile"></ino-spinner>\n            <ino-spinner ino-type="bounce"></ino-spinner>\n            <ino-spinner ino-type="circle"></ino-spinner>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-spinner</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-tooltip--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button id="primary-tooltip" ino-color-scheme="primary">Display Tooltip</ino-button>\n            <ino-tooltip ino-for="primary-tooltip" ino-label="This is a tooltip!" ino-color-scheme="primary" ino-placement="top"></ino-tooltip>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-tooltip</h3>\n          </div>\n        </ino-card>\n      </div>\n    </div>\n`;\n',locationsMap:{components:{startLoc:{col:26,line:14},endLoc:{col:1,line:391},startBody:{col:26,line:14},endBody:{col:1,line:391}}}}),title:"Docs/Showcase"};var components=function components(){return'\n  <div class="catalog">\n      <h2>Buttons</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-button--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button slot="content" style="margin: 6px">Solid Button</ino-button>\n            <ino-button slot="content" ino-fill="outline" style="margin: 6px">Outlined Button</ino-button>\n            <ino-button slot="content" ino-fill="inverse" style="margin: 6px">Inverted Button</ino-button>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-button</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-chip-set--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-chip-set ino-type="choice">\n              <ino-chip ino-label="iOS" ino-selected ino-value="0"></ino-chip>\n              <ino-chip ino-label="Android" ino-value="1"></ino-chip>\n            </ino-chip-set>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-chip-set</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-fab--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-fab ino-label="none" ino-icon="add" ino-edge-position="none"></ino-fab>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-fab</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-fab-set--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-fab-set style="position: unset" ino-open-dial="true" ino-dial-direction="top">\n                <ino-fab ino-label="none" ino-icon="chat" ino-mini></ino-fab>\n                <ino-fab ino-label="none" ino-icon="search" ino-mini></ino-fab>\n            </ino-fab-set>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-fab-set</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-icon-button--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-icon-button ino-icon="star" ino-color-scheme="primary"></ino-icon-button>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-icon-button</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/buttons-ino-segment-button--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-segment-group id="segment-grp">\n              <ino-segment-button value="1">M</ino-segment-button>\n              <ino-segment-button value="2">F</ino-segment-button>\n              <ino-segment-button value="3">D</ino-segment-button>\n            </ino-segment-group>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-segment-group</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Structure</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-card--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-card style="width: 80%">\n              <div slot="header">\n                <ino-icon ino-icon="info" ino-clickable></ino-icon>\n              </div>\n              <div slot="content" class="card-content--vertical" style="height: unset"><h3>Content</h3></div>\n            </ino-card>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-card</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-dialog--default-usage\'">\n          <div class="card-content--vertical" slot="content" style="padding-left: 20px; padding-right: 20px">\n            <ino-img src='.concat(_assets_images_InoDialog_Demo_Image_jpeg__WEBPACK_IMPORTED_MODULE_5___default.a,' ino-ratio-width="2.215" style="box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);"/>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-dialog</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-header--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-header ino-title="Section"></ino-header>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-header</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-list--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-list style="border: 1px solid rgba(0, 0, 0, 0.15);" ino-dense>\n              <ino-list-item ino-text="List item"></ino-list-item>\n              <ino-list-item ino-text="With leading icon">\n                  <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n              </ino-list-item>\n              <ino-control-item ino-role="radio" ino-text="Disabled control item" ino-disabled> </ino-control-item>\n            </ino-list>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-list</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-menu--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button id="menu-2" ino-icon="menu">Menu</ino-button>\n            <ino-menu id="custom-menu-2" ino-for="menu-2" ino-open>\n              <ino-list-item ino-text="Item"></ino-list-item>\n              <ino-list-item ino-text="Item 2"></ino-list-item>\n            </ino-menu>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-menu</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-naw-drawer--default-usage\'">\n          <div class="card-content--vertical" slot="content" style="padding-left: 20px; padding-right: 20px">\n            <ino-img src=').concat(_assets_images_InoNavDrawer_Demo_Image_jpeg__WEBPACK_IMPORTED_MODULE_6___default.a,' ino-ratio-width="1.818" style="box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);"/>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-nav-drawer</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-sidebar--default-usage\'">\n          <div class="card-content--vertical" slot="content" style="padding-left: 20px; padding-right: 20px">\n            <ino-img src=').concat(_assets_images_InoSidebar_Demo_Image_png__WEBPACK_IMPORTED_MODULE_7___default.a,' ino-ratio-width="1.783" style="box-shadow: 0 0 15px -5px rgba(0,0,0,0.7);" />\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-sidebar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-tab-bar--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-tab-bar>\n              <ino-tab\n                ino-label="Cart"\n                ino-icon="cart"\n                ino-indicator-content-width="true"\n                ino-stacked>\n              </ino-tab>\n              <ino-tab\n                ino-label="Account"\n                ino-icon="user"\n                ino-indicator-content-width="true"\n                ino-stacked>\n              </ino-tab>\n            </ino-tab-bar>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-tab-bar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/structure-ino-table--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-table>\n              <ino-table-row slot="header" ino-header-row>\n                <ino-table-cell>ID</ino-table-cell>\n                <ino-table-cell>Header A</ino-table-cell>\n                <ino-table-cell>Header B</ino-table-cell>\n              </ino-table-row>\n              <ino-table-row>\n                <ino-table-cell ino-numeric>1</ino-table-cell>\n                <ino-table-cell>Cell A1</ino-table-cell>\n                <ino-table-cell>Cell B1</ino-table-cell>\n              </ino-table-row>\n              <ino-table-row>\n                <ino-table-cell ino-numeric>2</ino-table-cell>\n                <ino-table-cell>Cell A2</ino-table-cell>\n                <ino-table-cell>Cell B2</ino-table-cell>\n              </ino-table-row>\n            </ino-table>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-table</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Input</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-checkbox--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-checkbox checked style="width: 50%">Checked</ino-checkbox>\n            <ino-checkbox style="width: 50%">Unchecked</ino-checkbox>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-checkbox</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-datepicker--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-datepicker ino-type="datetime" ino-date-format="H:i d.m.Y" ino-label="Datetime" disabled></ino-datepicker>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-datepicker</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-form-row--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-form-row ino-label="First Name">\n              <ino-input></ino-input>\n            </ino-form-row>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-form-row</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-input--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-input placeholder="Email"></ino-input>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-input</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-radio-group--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-radio-group id="radio-grp" value="2">\n              <ino-radio value="1">No</ino-radio>\n              <ino-radio value="2">Yes</ino-radio>\n            </ino-radio-group>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-radio-group</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-range--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-range ino-color-scheme="primary" value="40" min="0" max="100" step="20" ino-discrete ino-markers style="width: 80%"></ino-range>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-range</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-select--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-select ino-label="Select Option" disabled>\n              <ino-option value="Selected Option" selected>Selected Option</ino-option>\n            </ino-select>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-select</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-switch--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-switch checked></ino-switch>\n            <ino-switch></ino-switch>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-switch</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/input-ino-textarea--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-textarea ino-label="Feedback" rows="3" cols="24" style="width: unset"></ino-textarea>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-textarea</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Graphic</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/graphic-ino-icon--default-usage\'">\n          <div class="card-content--horizontal" slot="content">\n            <ino-icon ino-icon="info"></ino-icon>\n            <ino-icon ino-icon="star"></ino-icon>\n            <ino-icon ino-icon="chat"></ino-icon>\n            <ino-icon ino-icon="onboarding"></ino-icon>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-icon</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/graphic-ino-img-list--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-img-list>\n              <ino-img\n                  src=').concat(_assets_images_fjord_jpg__WEBPACK_IMPORTED_MODULE_1___default.a,'\n                  alt="fjord"\n                  width="50"\n                  height="50"\n                  ino-img-list-item\n              ></ino-img>\n              <ino-img\n                  src=').concat(_assets_images_trondheim_jpg__WEBPACK_IMPORTED_MODULE_2___default.a,'\n                  alt="trondheim"\n                  width="50"\n                  height="50"\n                  ino-img-list-item\n              ></ino-img>\n              <ino-img\n                  src=').concat(_assets_images_liberty_jpg__WEBPACK_IMPORTED_MODULE_3___default.a,'\n                  alt="liberty"\n                  width="50"\n                  height="50"\n                  ino-img-list-item\n              ></ino-img>\n            </ino-img-list>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-img-list</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/graphic-ino-img--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-img\n              src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"\n              ino-rounded\n              width="90"\n              height="90"\n            />\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-img</h3>\n          </div>\n        </ino-card>\n      </div>\n\n      <h2>Notification</h2>\n      <div class="catalog-grid">\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-popover--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button id="popover-hover-focus">Display Popover</ino-button>\n            <ino-popover ino-for="popover-hover-focus">This is a popover!</ino-popover>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-popover</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-progress-bar--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-progress-bar ino-buffer="0.8" ino-progress="0.3" style="width: 80%"></ino-progress-bar>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-progress-bar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-snackbar--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-img src=').concat(_assets_images_InoSnackbar_Demo_Image_png__WEBPACK_IMPORTED_MODULE_4___default.a,' ino-ratio-width="3.62"></ino-img>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-snackbar</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-spinner--default-usage\'">\n          <div class="card-content--horizontal" slot="content">\n            <ino-spinner ino-type="tile"></ino-spinner>\n            <ino-spinner ino-type="bounce"></ino-spinner>\n            <ino-spinner ino-type="circle"></ino-spinner>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-spinner</h3>\n          </div>\n        </ino-card>\n        <ino-card onClick="parent.location.href=\'./?path=/story/notification-ino-tooltip--default-usage\'">\n          <div class="card-content--vertical" slot="content">\n            <ino-button id="primary-tooltip" ino-color-scheme="primary">Display Tooltip</ino-button>\n            <ino-tooltip ino-for="primary-tooltip" ino-label="This is a tooltip!" ino-color-scheme="primary" ino-placement="top"></ino-tooltip>\n          </div>\n          <div class="card-footer" slot="footer">\n            <h3>ino-tooltip</h3>\n          </div>\n        </ino-card>\n      </div>\n    </div>\n')}},1333:function(module,exports,__webpack_require__){var content=__webpack_require__(1334);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},1334:function(module,exports,__webpack_require__){(module.exports=__webpack_require__(5)(!1)).push([module.i,"h2,h3{color:#777}.catalog{width:100%}.catalog-grid{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap}.catalog-grid ino-card{margin:10px;width:calc((100% - 60px) / 3)}@media only screen and (max-width: 850px){.catalog-grid ino-card{width:calc((100% - 40px) / 2)}}@media only screen and (max-width: 600px){.catalog-grid ino-card{width:100%}}.catalog-grid ino-card:hover{cursor:pointer}.catalog-grid a{text-decoration:none;color:unset}.catalog-grid .card-content--vertical,.catalog-grid .card-content--horizontal,.catalog-grid .card-footer{display:flex;align-items:center}.catalog-grid .card-content--vertical{height:170px;flex-direction:column;justify-content:center}.catalog-grid .card-content--horizontal{flex-direction:row;justify-content:space-evenly;height:170px;flex-wrap:wrap}.catalog-grid .card-content--horizontal ino-icon{--icon-height: 50px;--icon-width: 50px}.catalog-grid .card-footer{height:20px}",""])},1336:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ArchitecturalOverview",(function(){return contributing_stories_ArchitecturalOverview})),__webpack_require__.d(__webpack_exports__,"QuickStart",(function(){return contributing_stories_QuickStart})),__webpack_require__.d(__webpack_exports__,"TeamOrganization",(function(){return contributing_stories_TeamOrganization})),__webpack_require__.d(__webpack_exports__,"DevelopingComponents",(function(){return contributing_stories_DevelopingComponents})),__webpack_require__.d(__webpack_exports__,"Storybook",(function(){return contributing_stories_Storybook})),__webpack_require__.d(__webpack_exports__,"IssueTracking",(function(){return contributing_stories_IssueTracking})),__webpack_require__.d(__webpack_exports__,"CommitMessageFormat",(function(){return contributing_stories_CommitMessageFormat})),__webpack_require__.d(__webpack_exports__,"PullRequests",(function(){return contributing_stories_PullRequests})),__webpack_require__.d(__webpack_exports__,"VersioningAndReleasing",(function(){return contributing_stories_VersioningAndReleasing})),__webpack_require__.d(__webpack_exports__,"UpdatingDependencies",(function(){return contributing_stories_UpdatingDependencies}));var markup=__webpack_require__(9);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import markup from \'_local-storybookcore/markup\';\\n\\nimport contributing01 from \'_local-docs/contributing/01-high-level-overview.md\';\\nimport contributing02 from \'_local-docs/contributing/02-quick-start.md\';\\nimport contributing03 from \'_local-docs/contributing/03-team-organization.md\';\\nimport contributing04 from \'_local-docs/contributing/04-developing-components.md\';\\nimport contributing05 from \'_local-docs/contributing/05-storybook.md\';\\nimport contributing06 from \'_local-docs/contributing/06-issue-tracking.md\';\\nimport contributing07 from \'_local-docs/contributing/07-commit-message-format.md\';\\nimport contributing08 from \'_local-docs/contributing/08-pull-requests.md\';\\nimport contributing09 from \'_local-docs/contributing/09-versioning-and-releasing.md\';\\nimport contributing10 from \'_local-docs/contributing/10-updating-dependencies.md\';\\n\\nexport default {\\n  title: \'Docs/Contributing\',\\n};\\n\\nexport const ArchitecturalOverview = () => markup(contributing01);\\nexport const QuickStart = () => markup(contributing02);\\nexport const TeamOrganization = () => markup(contributing03);\\nexport const DevelopingComponents = () => markup(contributing04);\\nexport const Storybook = () => markup(contributing05);\\nexport const IssueTracking = () => markup(contributing06);\\nexport const CommitMessageFormat = () => markup(contributing07);\\nexport const PullRequests = () => markup(contributing08);\\nexport const VersioningAndReleasing = () => markup(contributing09);\\nexport const UpdatingDependencies = () => markup(contributing10);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"ArchitecturalOverview":{"startLoc":{"col":37,"line":18},"endLoc":{"col":65,"line":18},"startBody":{"col":37,"line":18},"endBody":{"col":65,"line":18}},"QuickStart":{"startLoc":{"col":26,"line":19},"endLoc":{"col":54,"line":19},"startBody":{"col":26,"line":19},"endBody":{"col":54,"line":19}},"TeamOrganization":{"startLoc":{"col":32,"line":20},"endLoc":{"col":60,"line":20},"startBody":{"col":32,"line":20},"endBody":{"col":60,"line":20}},"DevelopingComponents":{"startLoc":{"col":36,"line":21},"endLoc":{"col":64,"line":21},"startBody":{"col":36,"line":21},"endBody":{"col":64,"line":21}},"Storybook":{"startLoc":{"col":25,"line":22},"endLoc":{"col":53,"line":22},"startBody":{"col":25,"line":22},"endBody":{"col":53,"line":22}},"IssueTracking":{"startLoc":{"col":29,"line":23},"endLoc":{"col":57,"line":23},"startBody":{"col":29,"line":23},"endBody":{"col":57,"line":23}},"CommitMessageFormat":{"startLoc":{"col":35,"line":24},"endLoc":{"col":63,"line":24},"startBody":{"col":35,"line":24},"endBody":{"col":63,"line":24}},"PullRequests":{"startLoc":{"col":28,"line":25},"endLoc":{"col":56,"line":25},"startBody":{"col":28,"line":25},"endBody":{"col":56,"line":25}},"VersioningAndReleasing":{"startLoc":{"col":38,"line":26},"endLoc":{"col":66,"line":26},"startBody":{"col":38,"line":26},"endBody":{"col":66,"line":26}},"UpdatingDependencies":{"startLoc":{"col":36,"line":27},"endLoc":{"col":64,"line":27},"startBody":{"col":36,"line":27},"endBody":{"col":64,"line":27}}};\n    \nimport markup from \'_local-storybookcore/markup\';\n\nimport contributing01 from \'_local-docs/contributing/01-high-level-overview.md\';\nimport contributing02 from \'_local-docs/contributing/02-quick-start.md\';\nimport contributing03 from \'_local-docs/contributing/03-team-organization.md\';\nimport contributing04 from \'_local-docs/contributing/04-developing-components.md\';\nimport contributing05 from \'_local-docs/contributing/05-storybook.md\';\nimport contributing06 from \'_local-docs/contributing/06-issue-tracking.md\';\nimport contributing07 from \'_local-docs/contributing/07-commit-message-format.md\';\nimport contributing08 from \'_local-docs/contributing/08-pull-requests.md\';\nimport contributing09 from \'_local-docs/contributing/09-versioning-and-releasing.md\';\nimport contributing10 from \'_local-docs/contributing/10-updating-dependencies.md\';\n\nexport default {parameters: {"storySource":{"source":"import markup from \'_local-storybookcore/markup\';\\n\\nimport contributing01 from \'_local-docs/contributing/01-high-level-overview.md\';\\nimport contributing02 from \'_local-docs/contributing/02-quick-start.md\';\\nimport contributing03 from \'_local-docs/contributing/03-team-organization.md\';\\nimport contributing04 from \'_local-docs/contributing/04-developing-components.md\';\\nimport contributing05 from \'_local-docs/contributing/05-storybook.md\';\\nimport contributing06 from \'_local-docs/contributing/06-issue-tracking.md\';\\nimport contributing07 from \'_local-docs/contributing/07-commit-message-format.md\';\\nimport contributing08 from \'_local-docs/contributing/08-pull-requests.md\';\\nimport contributing09 from \'_local-docs/contributing/09-versioning-and-releasing.md\';\\nimport contributing10 from \'_local-docs/contributing/10-updating-dependencies.md\';\\n\\nexport default {\\n  title: \'Docs/Contributing\',\\n};\\n\\nexport const ArchitecturalOverview = () => markup(contributing01);\\nexport const QuickStart = () => markup(contributing02);\\nexport const TeamOrganization = () => markup(contributing03);\\nexport const DevelopingComponents = () => markup(contributing04);\\nexport const Storybook = () => markup(contributing05);\\nexport const IssueTracking = () => markup(contributing06);\\nexport const CommitMessageFormat = () => markup(contributing07);\\nexport const PullRequests = () => markup(contributing08);\\nexport const VersioningAndReleasing = () => markup(contributing09);\\nexport const UpdatingDependencies = () => markup(contributing10);\\n","locationsMap":{"architectural-overview":{"startLoc":{"col":37,"line":18},"endLoc":{"col":65,"line":18},"startBody":{"col":37,"line":18},"endBody":{"col":65,"line":18}},"quick-start":{"startLoc":{"col":26,"line":19},"endLoc":{"col":54,"line":19},"startBody":{"col":26,"line":19},"endBody":{"col":54,"line":19}},"team-organization":{"startLoc":{"col":32,"line":20},"endLoc":{"col":60,"line":20},"startBody":{"col":32,"line":20},"endBody":{"col":60,"line":20}},"developing-components":{"startLoc":{"col":36,"line":21},"endLoc":{"col":64,"line":21},"startBody":{"col":36,"line":21},"endBody":{"col":64,"line":21}},"storybook":{"startLoc":{"col":25,"line":22},"endLoc":{"col":53,"line":22},"startBody":{"col":25,"line":22},"endBody":{"col":53,"line":22}},"issue-tracking":{"startLoc":{"col":29,"line":23},"endLoc":{"col":57,"line":23},"startBody":{"col":29,"line":23},"endBody":{"col":57,"line":23}},"commit-message-format":{"startLoc":{"col":35,"line":24},"endLoc":{"col":63,"line":24},"startBody":{"col":35,"line":24},"endBody":{"col":63,"line":24}},"pull-requests":{"startLoc":{"col":28,"line":25},"endLoc":{"col":56,"line":25},"startBody":{"col":28,"line":25},"endBody":{"col":56,"line":25}},"versioning-and-releasing":{"startLoc":{"col":38,"line":26},"endLoc":{"col":66,"line":26},"startBody":{"col":38,"line":26},"endBody":{"col":66,"line":26}},"updating-dependencies":{"startLoc":{"col":36,"line":27},"endLoc":{"col":64,"line":27},"startBody":{"col":36,"line":27},"endBody":{"col":64,"line":27}}}},},\n  title: \'Docs/Contributing\',\n};\n\nexport const ArchitecturalOverview = () => markup(contributing01);;\nexport const QuickStart = () => markup(contributing02);;\nexport const TeamOrganization = () => markup(contributing03);;\nexport const DevelopingComponents = () => markup(contributing04);;\nexport const Storybook = () => markup(contributing05);;\nexport const IssueTracking = () => markup(contributing06);;\nexport const CommitMessageFormat = () => markup(contributing07);;\nexport const PullRequests = () => markup(contributing08);;\nexport const VersioningAndReleasing = () => markup(contributing09);;\nexport const UpdatingDependencies = () => markup(contributing10);\n',locationsMap:{"architectural-overview":{startLoc:{col:37,line:26},endLoc:{col:65,line:26},startBody:{col:37,line:26},endBody:{col:65,line:26}},"quick-start":{startLoc:{col:26,line:27},endLoc:{col:54,line:27},startBody:{col:26,line:27},endBody:{col:54,line:27}},"team-organization":{startLoc:{col:32,line:28},endLoc:{col:60,line:28},startBody:{col:32,line:28},endBody:{col:60,line:28}},"developing-components":{startLoc:{col:36,line:29},endLoc:{col:64,line:29},startBody:{col:36,line:29},endBody:{col:64,line:29}},storybook:{startLoc:{col:25,line:30},endLoc:{col:53,line:30},startBody:{col:25,line:30},endBody:{col:53,line:30}},"issue-tracking":{startLoc:{col:29,line:31},endLoc:{col:57,line:31},startBody:{col:29,line:31},endBody:{col:57,line:31}},"commit-message-format":{startLoc:{col:35,line:32},endLoc:{col:63,line:32},startBody:{col:35,line:32},endBody:{col:63,line:32}},"pull-requests":{startLoc:{col:28,line:33},endLoc:{col:56,line:33},startBody:{col:28,line:33},endBody:{col:56,line:33}},"versioning-and-releasing":{startLoc:{col:38,line:34},endLoc:{col:66,line:34},startBody:{col:38,line:34},endBody:{col:66,line:34}},"updating-dependencies":{startLoc:{col:36,line:35},endLoc:{col:64,line:35},startBody:{col:36,line:35},endBody:{col:64,line:35}}}}},"storySource",{source:"import markup from '_local-storybookcore/markup';\n\nimport contributing01 from '_local-docs/contributing/01-high-level-overview.md';\nimport contributing02 from '_local-docs/contributing/02-quick-start.md';\nimport contributing03 from '_local-docs/contributing/03-team-organization.md';\nimport contributing04 from '_local-docs/contributing/04-developing-components.md';\nimport contributing05 from '_local-docs/contributing/05-storybook.md';\nimport contributing06 from '_local-docs/contributing/06-issue-tracking.md';\nimport contributing07 from '_local-docs/contributing/07-commit-message-format.md';\nimport contributing08 from '_local-docs/contributing/08-pull-requests.md';\nimport contributing09 from '_local-docs/contributing/09-versioning-and-releasing.md';\nimport contributing10 from '_local-docs/contributing/10-updating-dependencies.md';\n\nexport default {\n  title: 'Docs/Contributing',\n};\n\nexport const ArchitecturalOverview = () => markup(contributing01);\nexport const QuickStart = () => markup(contributing02);\nexport const TeamOrganization = () => markup(contributing03);\nexport const DevelopingComponents = () => markup(contributing04);\nexport const Storybook = () => markup(contributing05);\nexport const IssueTracking = () => markup(contributing06);\nexport const CommitMessageFormat = () => markup(contributing07);\nexport const PullRequests = () => markup(contributing08);\nexport const VersioningAndReleasing = () => markup(contributing09);\nexport const UpdatingDependencies = () => markup(contributing10);\n",locationsMap:{"architectural-overview":{startLoc:{col:37,line:18},endLoc:{col:65,line:18},startBody:{col:37,line:18},endBody:{col:65,line:18}},"quick-start":{startLoc:{col:26,line:19},endLoc:{col:54,line:19},startBody:{col:26,line:19},endBody:{col:54,line:19}},"team-organization":{startLoc:{col:32,line:20},endLoc:{col:60,line:20},startBody:{col:32,line:20},endBody:{col:60,line:20}},"developing-components":{startLoc:{col:36,line:21},endLoc:{col:64,line:21},startBody:{col:36,line:21},endBody:{col:64,line:21}},storybook:{startLoc:{col:25,line:22},endLoc:{col:53,line:22},startBody:{col:25,line:22},endBody:{col:53,line:22}},"issue-tracking":{startLoc:{col:29,line:23},endLoc:{col:57,line:23},startBody:{col:29,line:23},endBody:{col:57,line:23}},"commit-message-format":{startLoc:{col:35,line:24},endLoc:{col:63,line:24},startBody:{col:35,line:24},endBody:{col:63,line:24}},"pull-requests":{startLoc:{col:28,line:25},endLoc:{col:56,line:25},startBody:{col:28,line:25},endBody:{col:56,line:25}},"versioning-and-releasing":{startLoc:{col:38,line:26},endLoc:{col:66,line:26},startBody:{col:38,line:26},endBody:{col:66,line:26}},"updating-dependencies":{startLoc:{col:36,line:27},endLoc:{col:64,line:27},startBody:{col:36,line:27},endBody:{col:64,line:27}}}}),title:"Docs/Contributing"};var contributing_stories_ArchitecturalOverview=function ArchitecturalOverview(){return Object(markup.a)('# High Level Overview\n\nThe goal of this high level overview is to provide you with a better understanding of what this mono repository \ncontains and how things relate to each other.\n\n## The Repository Structure\n\nThis is a mono repository based on Lerna. Lerna is a tool for managing JavaScript projects with multiple packages. Visit the [Lerna GitHub repository website](https://github.com/lerna/lerna) to learn more about Lerna.\n\nEach package provides a separate README and is distributed as a self contained package through npm. These packages are a thin layer on top of our Web Components to achieve a better framework integration. Please refer to the sub-folder of the corresponding package to get more information about the package itself:\n\n> You can follow the link on the package name to directly go to the repository location.\n\n| <div style="width:220px">**Package**</div> | <div style="width:200px">**Description**</div> | **Primary Usage Intention** |\n| --- | --- | --- |\n| [@inovex.de/elements](https://github.com/inovex/elements/tree/master/packages/elements)|Native Web Components|Websites, WebApps and Microfrontends without a framework.|\n| [@inovex.de/elements-angular](https://github.com/inovex/elements/tree/master/packages/elements-angular)|Angular integration layer|WebApps based on [Angular](https://github.com/angular).|\n| [@inovex.de/elements-react](https://github.com/inovex/elements/tree/master/packages/elements-react)|React integration layer|WebApps based on [React](https://github.com/facebook/react).|\n| [@inovex.de/elements-storybook](https://github.com/inovex/elements/tree/master/packages/storybook)|Storybook documentation|API reference and guide for developers.|\n\n### Elements Core\n\nThis package contains our components written with [Stencil](https://stenciljs.com/) and wires up the code of [Googles Material Design Components for the Web](https://github.com/material-components/material-components-web/) (MDC) as our foundation layer as well as additional third party dependencies like [flatpickr](https://flatpickr.js.org/).\n\nThe output of this package is what Stencil produces. Read more on Stencil below.\n\n#### Stencil\n\nStencil is a compiler for building fast web apps using Web Components.\n\nStencil combines the best concepts of the most popular frontend frameworks into a compile-time rather than run-time tool. Stencil takes TypeScript, JSX, a tiny virtual DOM layer, efficient one-way data binding, an asynchronous rendering pipeline (similar to React Fiber), and lazy-loading out of the box, and generates 100% standards-based Web Components that run in any browser supporting the Custom Elements\nv1 spec.\n\nStencil components are just Web Components, so they work in any major framework or with no framework at all.\n\n#### Google Material Design Components for the Web\n\nWe use [Googles Material Design Components for the Web](https://github.com/material-components/material-components-web/) to speed up the development. This is also a good foundation as the major functionality is already implemented. We often only need to tweak and change some bits to achieve the desired behaviour.\n\nEach component is published on npm as a separate package. Thus, in theory, we can upgrade the components independently and use different versions of the underlying packages. The repository is structured in a nice way with each component having its own README. You can find the [list of all MDC components in the GitHub repo](https://github.com/material-components/material-components-web/blob/master/packages). It feels a bit like back in the days when the [Twitter Bootstrap](https://getbootstrap.com/) framework was released. You open the documentation, copy a piece of HTML markup into your template and import the required SASS mixins into your sass Stylesheet and only modify the parts you want to make dynamic.\n\nWhen creating a new element, always check for a respective material design implementation. We loosely follow these rules:\n\n- Abstract the features of the material design components to the need of our inovex element.\n- Provide a link to the material component in the documentation.\n- If the element comes with js, instantiate the `MDCFactory` in the `componentDidLoad` method and call the `destroy` method in `componentWillUnLoad`.\n\n### Angular Integration Layer\n\n> Package `@inovex.de/elements-angular`\n\nThis project is just a normal Angular Library which consumes the core package and outputs Directives for other Angular projects to consume.\n\nEvery time you run `yarn start` or `yarn build` from within the root of this repo, Lerna first builds the core package before building the Directives in this package. The core package is just a dependency of this Angular Library. This project only provides a wrapper Directive to map the Custom Elements attributes and events to the @Input and @Output values in the Angular world.\n\nYou only need to change this package if you add a new or remove an existing component from the core or if you want to support `ngModel`. To learn more about this topic, refer to the [README](https://github.com/inovex/elements/blob/master/packages/elements-angular/elements/README.md) of `@inovex.de/elements-angular`.\n\n### React Integration Layer\n\n> Package `@inovex.de/elements-react`\n\nThis project is just a normal React project which consumes the core package and outputs React components for other React projects to consume.\n\nEvery time you run `yarn start` or `yarn build` from within the root of this repo, Lerna first builds the core package before building the React components in this package. The core package is just a dependency of this React project. This project only provides a wrapper component to map the Custom Elements attributes and events to the props in the React world.\n\nYou should never have to make changes to this package. To learn more about this topic, refer to the [README](https://github.com/inovex/elements/blob/master/packages/elements-react/README.md) of `@inovex.de/elements-react`.\n\n### Storybook\n\n> Package `@inovex.de/elements-storybook`\n\n[Storybook](https://github.com/storybooks/storybook) is a development environment for UI components. It allows us to browse the inovex elements, view the different states of each component, and interactively develop and test inovex components.\n\nThe Storybook is part of the development process and used to test the components as well as to show the most common use cases. We work with it and provide it as our documentation to developers using our components.\n')},contributing_stories_QuickStart=function QuickStart(){return Object(markup.a)("# Quick Start - Clone and try the Project\n\nIf you know what's going on or just want to see see how the project runs on your local machine, checkout the repo and start your local copy of it.\n\nMake sure you've made all the preparations to be ready to start. You can find a [List of Prerequisites](https://github.com/inovex/elements#prerequisites) in our repo.\n\n1. Open a terminal of your choice and switch into a folder where you want to copy the project code in.\n2. Clone the project with `git clone https://github.com/inovex/elements.git`.\n3. Switch into the project root folder with `cd core`.\n4. Get all the dependencies with `yarn install`.\n5. Storybook will open in your browser with `yarn start`.\n6. You've successfully started the project 🎉\n\n\nNow open the button component in the IDE of your choice. This is the file `packages/elements/src/components/ino-button/ino-button.tsx`. Edit something within the `render` method on the lower part of the file. Save your changes and switch back to your browser. Select the `ino-button` entry from within the side panel. You'll see your changes.\n\nHappy coding!\n")},contributing_stories_TeamOrganization=function TeamOrganization(){return Object(markup.a)("# Team Organization\n\nWe coordinate stories, tasks and bugs in the [elements Github project](https://github.com/inovex/elements/projects/1).\n\n## Plannings\n\nTo organize the workload from time to time, we do not have a regular schedule. All team members will be notified when we have a new appointment. Invitations will be sent via Slack or email.\n\n## Weeklies\n\nWe meet remotely once a week, every Monday, 3 PM in a Google Meets call. Every team member will be invited via Slack or email.\n")},contributing_stories_DevelopingComponents=function DevelopingComponents(){return Object(markup.a)("# Developing Components\n\nWe follow the [Stencil Style Guide](https://stenciljs.com/docs/style-guide) for naming and code style conventions. Please read through it.\n\nSome of the important guidelines are:\n\n- Create a separate directory for each component. The directories name should be the same as the elements Custom Element name (**ino-component-name**).\n- Each component consists at least of the files `.tsx` and `.scss`. The name of the files are the same as the Custom Element name. See above.\n- The `readme.md` is auto-generated by Stencil.\n- The `commit-scope-enum.js` is auto-generated on each commit. This file is needed by the commit message linter. Only the strings contained in this file are allowed to be used as scope of the commit message format.\n\n## Stateless / Controlled / Dumb Components\n\nWe decided to use stateless components so the data flows from top to bottom. This makes sense as most of the frameworks do a DOM diffing and don't see what a component itself is doing. Hence, instead of changing the state directly, we always emit events to denote that something should change. Thus, if the consumer ignores such an event, nothing will happen.\n\n* Only the attributes and children with their attributes describe the current state of the component.\n* The state never changes as long as the input properties are the same.\n* The component never modifies its host attributes.\n* User actions (clicks, key events, ...) only trigger events. The state remains untouched.\n\nFor examples and details please refer to the **Events** section below.\n\n## Properties\n\nWe have native and custom properties in components. For example, the `ino-button` element has native properties like `disabled` and **prefixed** custom attributes like `ino-color-scheme`. This differentation helps the user to understand the underyling functionality and prohibits incompatibilities with native elements.\n\nFor each property, we provide a short jsdoc when defining a property. This comment should contain a short and precise description of the property's functionality. Take time since this description is compiled by stencil and used in the storybook.\n\n## Events\n\nSimilar to properties, we differentiate between native and Custom Events. Native events are triggered by native html elements like `<input>` and bubble out of the scope automatically. For example the button element uses a `HTMLButtonElement` internally that emits `click`, ... events).\n\n**Important:** Native events are not defined in the component. For this reason, we provide an explanation of their behaviour in the `readme.md` and add them to the **Usage** section.\n\nEvery time we provide a Custom Event for a component we always set their action in **present tense**.\n\nHere are some examples to make it easier for you to decide how the name of the event should be:\n\n### Example 1: The ino-input Component\n\n* Input: `value` (Attribute, @Prop())\n* Output: `valueChange` (Custom Event, @Event())\n\n#### Description\n\nThe name of the input param `value` is contained in the name of the event param `valueChange` to denote the relation between them. In this example, this means that if the `value` should change, the consumer (this is the framework that uses and therefor controls the component) decides if the value should change or not. Speaking for the `ino-input`: If the user types any key into the input field, the component **will not** change the value, but will instead emit an event that says:\n\n*Hey consumer, the value should change. Here's the value. But you decide if you want to change the value. You can set the @Input `value` with the value I gave you, then I will update my value. If you don't update the value, I'll not update the value und the old value remains the same*.\n\n### Example 2: The ino-chip Component\n\n* Input: `ino-removable` (Attribute, @Prop())\n* Output: `removeChip` (Custom Event, @Event())\n\n#### Description\n\nIn this case, the chip component has a little x-icon if `ino-removable` is set. If the user clicks the icon, an event is emitted that says:\n\n*Hey consumer, the x-icon has been clicked and the chip component should be removed. But you decide if you want to remove it.*\n\nHere's a list of some example events we use:\n\n```\ncheckedChange\nupdateChipSet\nremoveChip\nvalueChange\nclickEl\nchangeFile\nhideEl\nactiveTabChange\nloadEl\nunloadEl\n...\n```\n\n## Documentation\n\nStencil generates a `readme.md` for each component which consists of two parts:\n\n- An editable header.\n- An auto-generated documentation of attributes and properties as a table.\n\nWe extend the generated docs by adding more information of how to use the component in the header section.\n\nNormally, we...\n\n- ... provide a **Usage** section to describe the API as HTML element. This is in the form of a generic element containing **all** attributes and the data type (`<ino-button name=\"<string>\" ...></ino-button>`).\n- ... explain extraordinary attributes.\n- ... explain the behaviour of native and custom events if it's more complex.\n")},contributing_stories_Storybook=function Storybook(){return Object(markup.a)("# Storybook\n\nWe maintain a Storybook to demonstrate the usage of our components.\n\nEvery time we create a new component, we add at least one story which...\n\n* ...has the name **Default usage**.\n* ...contains a **customizable instance** before any other usage examples (see below).\n* ...contains some specific usage examples integrated into a Stackblitz playground to demonstrate most of the functionality (the more the better).\n\n## Customizable Instances\n\nA customizable instance is just a component where all attributes of a component are set through the Storybook [Knobs Addon](https://github.com/storybooks/storybook/tree/master/addons/knobs).\n\nThis allows the consumer (the person who uses the components) to give users the ability to explore all possible variants of an element. Customizable, in this case, means that users can pass any possible value to an element.\n\nWhen providing Knobs for a component:\n\n* Make sure that you use the most fitting type (text, boolean, number, select, ...).\n* Provide a knob for each available attribute.\n* Name the knob after the attribute, for example `ino-color-scheme`\n")},contributing_stories_IssueTracking=function IssueTracking(){return Object(markup.a)("# Issue Tracking\n\nWe maintain our backlog in our Project's [GitHub issues](https://github.com/inovex/elements/issues). There we manage all features and bugs.\n\nNew features, refactorings etc. should have the `feature` label. To track bug fixes, use the `bug` label.\n\nDuring development, the following process should be loosely followed:\n\n- Finding Ideas or Bugs\n  - If you have an idea how to improve the elements or discover a bug: Create an issue (assigned to no one) and describe what needs to be done.\n    - For a bug it's useful to describe how someone else can reproduce the problem If possible, provide a Stackblitz.\n    - For an improvement it's always good to describe your thoughts in a user story style. For example: *As a user I want to change the background color of the button so that I am able to match the colors with my design.*\n  - In the weekly coordination meeting, bring up the issue and discuss the priority of the task.\n- Starting Development\n  - Assign the issue to yourself and change the status to **In Progress** in the project board. Create a new feature branch and follow the instructions in the [Pull Request Section](/?path=/story/docs-contributing--pull-requests) section (see side panel).\n- Reviewing Code\n  - When the pull request is accepted and merged into master, set the corresponding issue to `Done`.\n")},contributing_stories_CommitMessageFormat=function CommitMessageFormat(){return Object(markup.a)('# Commit Message Format\n\n> We use this format to make it easy to automatically generate the changelog for all packages.\n\nWe follow the [Conventional Commits Specification](https://www.conventionalcommits.org/en/v1.0.0/) message pattern that leads to human and machine readable commit messages. They are easy to follow when looking through the project history. Thus, please ensure that you follow the rules for commits as well as merge requests:\n\n`<type>([<package>]<scope>): <subject>`\n\n> Don\'t worry, to make it easy for all of us, we added a pre-commit script hook that ensures we only use allowed syntax. So you can only commit a message that follows the above format.\n\n## Type\n\nMust be one of the following:\n\n|Type|Description|Affects&nbsp;Version|\n|---|---|---|\n|**feat**|Introduces a new feature to the codebase.|MINOR|\n|**fix**|Patches a bug in your codebase.|PATCH|\n|**docs**|Documentation only changes.|(no change)|\n|**style**|Do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc), not CSS styles.|(no change)|\n|**refactor**|Neither fixes a bug nor adds a feature.|(no change)|\n|**perf**|A code change that improves performance.|(no change)|\n|**test**|Adding missing tests.|(no change)|\n|**chore**|Changes to the build process or auxiliary tools and libraries such as documentation generation.|(no change)|\n\n## Package (optional)\n\n> This is optional but it\'s recommended to set the affected package when the change is assignable to exactly one package.\n\nIn our mono repo we need to distinct which package is affected by the change. Hence, in addition to the scope we added the name of the package in front of the scope.\n\nYou\'re able to use **one** or **none** of the following packages:\n\n|Package Name|Affected Package|\n|---|---|\n|elements|[@inovex.de/elements](packages/elements)|\n|elements-angular|[@inovex.de/elements-angular](packages/elements-angular)|\n|elements-react|[@inovex.de/elements-react](packages/elements-react)|\n|storybook|[@inovex.de/elements-storybook](packages/storybook)|\n\n## Scope\n\nThe scope can be anything specifying the scope of the change inside a package. Use an asterisk (`*`) to designate a global scope.\n\nHere are some of the allowed scopes:\n\n- `elements|ino-button`\n- `elements|ino-card`\n- `elements|...`\n\n- `elements-angular|ino-button`\n- `elements-angular|ino-card`\n- `elements-angular|...`\n\n- `elements-react|ino-button`\n- `elements-react|ino-card`\n- `elements-react|...`\n\n- `storybook|ino-button`\n- `storybook|ino-card`\n- `*`\n\n> You can always check which package/scope combinations are allowed by checking the [commit-scope-enum.js](https://github.com/inovex/elements/blob/master/commit-scope-enum.js) file.\n\n## Subject\n\nThe subject contains a succinct description of the change:\n\n- Use the imperative, present tense: "change" not "changed" nor "changes".\n- Do not capitalize first letter.\n- Do not place a period `.` at the end.\n- Describe what the commit does, not what issue it relates to or fixes.\n- **Be brief, yet descriptive** - we should have a good understanding of what the commit does by reading the subject.\n\n## Breaking Changes\n\n> A breaking change always affects the **MAJOR** version number in the next release. This should rarely be used. You should always talk to the team members about such a change. If you only deprecate things, it\'s no breaking change.\n\nTo document breaking changes, use a multiline commit message, which will be taken as the main commit message for the whole MR when squashed.\n\nHere is an example:\n\n```\ntype([package]scope): brief description\n\nBREAKING CHANGES: <description of breaking changes without a new line at the beginning>\n```\n')},contributing_stories_PullRequests=function PullRequests(){return Object(markup.a)('# Pull Requests\n\nWe have very precise rules to ensure an understandable and compact history:\n- Before creating a feature branch, make sure that a respective Github issue exists. \n- Provide a reference to it in the description of the Pull Request to make the life of reviewers easier. \n- Please give the branch a speaking name that fits the template `elements-<issue-id>-<what-is-the-feature>` like `elements-12-create-button-element`.\n\nWhen submitting a Pull Request, please:\n\n- Make sure the source branch is deleted afterwards (should be default)\n- The Pull Request is squashed (should be default)\n- Provide the title of the pull request in a commit message manner (see below). This is very important because the "squash commit" that occurs in the history usually has the pull requests title. The exceptions are multi line commits. If any of your commits have a multi line description, the first multi line commit message will be chosen as the title for the "squash commit". Further information on squashing can be found in the [GitHub documentation](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-merges#squash-and-merge-your-pull-request-commits).\n')},contributing_stories_VersioningAndReleasing=function VersioningAndReleasing(){return Object(markup.a)("# Versioning and Releasing\n\nWe are following the [Semantic Versioning](https://semver.org/).\n\nTo build a new release, the following steps have to be performed:\n\n- Develop new features or fix bugs which justify a new release. This should include at least one thing which benefits the user and not only contain refactorings.\n- Check out the most recent **master** branch.\n- To build the packages `@inovex.de/elements`, `@inovex.de/elements-react`, `@inovex.de/elements-angular` and `storybook` run from within the root folder of this git repo the following command: `yarn lerna:version`. This command does the following things:\n    1. Build and test the current setup\n    2. Determine the new version based on the [conventional-commit guidelines](https://www.conventionalcommits.org/en/v1.0.0/)\n    3. Bump the version\n    4. Generate changelogs \n    5. Commit the changed files\n    6. Tag the new commit with the new version number\n- Always check the contents of `Changelog.md` and version number.\n- If all seems right, push the changes using `git push --follow-tags` to the remote origin.\n- The gitlab repository should check for changes every few minutes and then trigger the release pipeline. If the release is urgent, the mirroring process can also be initiated via the gitlab Web UI.\n\nThe gitlab pipeline will build and release a new version in the NPM registry. Additionally, the built sources and documentation will be published to `https://elements.inovex.de/` in a folder named by the new version.\n")},contributing_stories_UpdatingDependencies=function UpdatingDependencies(){return Object(markup.a)("# Updating Dependencies\n\nIn order to get the most mature and stable version, we have to update the dependencies regularly.\n\n## How to Update Stencil in the Core Package\n\n1. Goto https://github.com/ionic-team/stencil and open the `CHANGELOG`.\n2. Get the current installed `@stencil/core` version from `packages/elements/package.json`.\n3. Search this version in the CHANGELOG, for example `1.5.0`.\n4. Goto the next minor version, in our example `1.6.0`.\n5. Replace `1.5.0` with `1.6.0` in the `package.json` file.\n6. Check if between this version and the last version are any notes about a TypeScript or Jest\n   upgrade and update these packages to the given version.\n7. Run `yarn install` from within the root of the repo.\n8. Run `yarn start` to check if the build succeeds, Storybook opens in the browser and\n   all components are working as expected. Make sure that all tests pass before you continue.\n9.  If the build fails with some compiler errors of TypeScript or any type mismatchs you may\n   need to update the packages `typescript`, `@types/jest`, `jest` and `jest-cli` as well.\n   This IS the case when there are some hints in the Stencil `CHANGELOG` like:\n\n   - `typescript: update to typescript 3.7.2`\n   - `jest: bump jest versions to fix types`\n11. Repeat step 2) - 7) until you reached the latest version of `@stencil/core`.\n\n## How to update the material web components\n\n1. Visit the [material-components-web github page](https://github.com/material-components/material-components-web) \n   and open the [CHANGELOG](https://github.com/material-components/material-components-web/releases)\n2. Search for the currently used material-components-web version in the `CHANGELOG`, e.g. `5.0.0`\n3. If a new version is available, open the `package.json` located in the elements package directory and replace \n   the current version of **every** material component with the next minor version, e.g. `5.1.0`.\n4. Run `yarn install` in the root directory\n5. Run `yarn start` to check if the build succeeds and the Storybook opens in the browser.\n6. Go through every component and check the `CHANGELOG` for any changes. Adjust the component accordingly and\n   make sure that the component works as intended, the styles have not been altered by the upgrade, and that\n   all component tests pass.\n7. Repeat steps 2) - 6) until you have reached the latest version.")}},1337:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_list_stories_DefaultUsage})),__webpack_require__.d(__webpack_exports__,"ListItem",(function(){return ino_list_stories_ListItem})),__webpack_require__.d(__webpack_exports__,"ListItemVariants",(function(){return ListItemVariants})),__webpack_require__.d(__webpack_exports__,"ListDivider",(function(){return ListDivider})),__webpack_require__.d(__webpack_exports__,"ControlItem",(function(){return ControlItem})),__webpack_require__.d(__webpack_exports__,"NavItem",(function(){return ino_list_stories_NavItem}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2),ino_list_item_readme='# ino-list-item\n\nA list item component that displays a single instance of choice in a list or menu. It functions as a wrapper around the material [list item](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) capabilities.\n\nThis component is used as child of `ino-list` and `ino-menu` components.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector(\'ino-list-item\')\n  .addEventListener(\'clickEl\', e =>\n    console.log(\n      \'The new list-item was clicked, the element itself is:\',\n      e.detail\n    )\n  );\n```\n\n```html\n<ino-list-item\n  ino-activated\n  ino-text="<string>"\n  ino-secondary-text="<string>"\n  ino-selected\n  onclickel="handleClickEl()"\n>\n  <ino-icon slot="ino-leading" ...></ino-icon>\n  <a slot="ino-primary" href="www.inovex.de">...</a>\n  <ino-icon slot="ino-trailing" ...></ino-icon>\n</ino-list-item>\n```\n**Ino Primary/Secondary (slot):** If you want to use different elements instead of text, you can use the `ino-primary` or `ino-secondary` slot. To do so, just set the `slot`-attribute of your custom element to `ino-primary` or `ino-secondary`.\n\n**Two lines:** For items having two lines, provide an `ino-secondary-text` and make sure you set the `ino-two-lines` attribute in the respective parent component (only available for `ino-list`).\n\n**Leading items:** Add an item with the slot-attribute `ino-leading` to add a leading column to the list item in LTR languages. Typically an icon or image.\n\n**Trailing items:** Add an item with the slot-attribute `ino-trailing` to add a trailing column to the list item in LTR languages. Typically small text, icon or image.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute            | Description                                                                                                                                         | Type      | Default     |\n| ------------------ | -------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `inoActivated`     | `ino-activated`      | Styles the row in an activated style.  In contrast to `inoSelected`, use this for only one item and to mark it as permantently activated.           | `boolean` | `undefined` |\n| `inoDisabled`      | `ino-disabled`       | Styles the row in a disabled style.                                                                                                                 | `boolean` | `undefined` |\n| `inoSecondaryText` | `ino-secondary-text` | Sets the secondary text of this list item.  Requires `ino-two-lines` on the parent `ino-list` element.                                              | `string`  | `undefined` |\n| `inoSelected`      | `ino-selected`       | Styles the row in a selected style.  In contrast to `inoActivated`, use this option to select one or multiple items that are likely to change soon. | `boolean` | `undefined` |\n| `inoText`          | `ino-text`           | The primary text of this list item.                                                                                                                 | `string`  | `undefined` |\n\n\n## Events\n\n| Event     | Description                                                                        | Type               |\n| --------- | ---------------------------------------------------------------------------------- | ------------------ |\n| `clickEl` | Emits when the list item is clicked. Contains the element itself in `event.detail` | `CustomEvent<any>` |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-control-item](../ino-control-item)\n - [ino-nav-item](../ino-nav-item)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-control-item --\x3e ino-list-item\n  ino-nav-item --\x3e ino-list-item\n  style ino-list-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n';__webpack_require__(1294);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport listReadme from \'_local-elements/src/components/ino-list/readme.md\';\\nimport listItemReadme from \'_local-elements/src/components/ino-list-item/readme.md\';\\nimport listDividerReadme from \'_local-elements/src/components/ino-list-divider/readme.md\';\\nimport listItemControlReadme from \'_local-elements/src/components/ino-control-item/readme.md\';\\nimport navItemReadme from \'_local-elements/src/components/ino-nav-item/readme.md\';\\n\\nimport \'./ino-list.scss\';\\n\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function(e) {\\n    const el = e.target;\\n    const tagName = el.tagName.toLowerCase();\\n    if (tagName !== \'ino-checkbox\' && tagName !== \'ino-radio\' && tagName !== \'ino-control-item\') {\\n      return;\\n    }\\n\\n    el.setAttribute(\'checked\', e.detail);\\n\\n    if (el.getAttribute(\'indeterminate\') === \'true\') {\\n      el.setAttribute(\'indeterminate\', \'false\');\\n    }\\n  };\\n\\n  document.addEventListener(\'checkedChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'checkedChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-list>\',\\n  decorators: [story => {\\n    subscribeToComponentEvents();\\n    return story();\\n  }]\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-list\\">\\n  <h4>Customizable List</h4>\\n  <ino-list\\n    ino-dense=\\"${boolean(\'ino-dense\', false)}\\"\\n    ino-two-lines=\\"${boolean(\'ino-two-lines\', false)}\\"\\n    ino-avatar=\\"${boolean(\'ino-avatar\', false)}\\"\\n   >\\n    <ino-list-item ino-text=\\"First text item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Third text item\\"></ino-list-item>\\n  </ino-list>\\n\\n  <h4>Two lines</h4>\\n  <ino-list ino-two-lines>\\n    <ino-list-item ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Third text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n  </ino-list>\\n\\n  <h4>Densed</h4>\\n  <ino-list ino-dense class=\\"first-densed-list\\">\\n    <ino-list-item ino-text=\\"First text item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Third text item\\"></ino-list-item>\\n  </ino-list>\\n  <ino-list ino-dense ino-two-lines class=\\"first-densed-list\\">\\n    <ino-list-item ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Third text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n  </ino-list>\\n\\n  <h4>Avatar</h4>\\n  <ino-list ino-avatar class=\\"first-densed-list\\">\\n    <ino-list-item ino-text=\\"First text item\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n  <ino-list ino-avatar ino-dense class=\\"first-densed-list\\">\\n    <ino-list-item ino-text=\\"First text item\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n  <ino-list ino-avatar ino-two-lines class=\\"first-densed-list\\">\\n    <ino-list-item ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n  <h4>Checkbox</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\" ino-dense>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list ino-two-lines class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" checked ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary Text\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary Text\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Radio Button</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-1\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-1\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\" ino-dense>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-2\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-2\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list ino-two-lines class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-3\\" checked ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary Text\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-3\\" ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary Text\\"></ino-control-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nDefaultUsage.decorators = [withStencilReadme(listReadme)];\\n\\nexport const ListItem = () => /*html*/ `\\n<div class=\\"story-list\\">\\n  <h4>Customizable list item</h4>\\n  <ino-list ino-two-lines=\\"${boolean(\'ino-two-lines (on ino-list)\', true)}\\">\\n    <ino-list-item\\n      ino-secondary-text=\\"${text(\'ino-secondary-text\', \'Second line text\')}\\"\\n      ino-selected=\\"${boolean(\'ino-selected\', false)}\\"\\n      ino-activated=\\"${boolean(\'ino-activated\', false)}\\"\\n      ino-disabled=\\"${boolean(\'ino-disabled\', false)}\\"\\n      ino-text=\\"${text(\'ino-text\', \'List item\')}\\">\\n    </ino-list-item>\\n  </ino-list>\\n\\n  <h4>States</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Simple item\\"></ino-list-item>\\n    <ino-list-item ino-selected ino-text=\\"Selected item\\"></ino-list-item>\\n    <ino-list-item ino-selected ino-text=\\"Selected item 2\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Simple item 2\\"></ino-list-item>\\n    <ino-list-item ino-activated ino-text=\\"Activated item\\"></ino-list-item>\\n    <ino-list-item ino-disabled ino-text=\\"Disabled item\\"></ino-list-item>\\n  </ino-list>\\n\\n\\n\\n  <h4>Graphic and Meta</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n  <h4>Primary and Leading Slot</h4>\\n  <ino-list>\\n    <ino-list-item>\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <a slot=\\"ino-primary\\" href=\\"\\">Link Element</a>\\n    </ino-list-item>\\n  </ino-list>\\n\\n  <h4>Two Lines with Primary and Secondary Slot</h4>\\n  <ino-list ino-two-lines>\\n    <ino-list-item>\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <a slot=\\"ino-primary\\" href=\\"\\">Primary Link Element</a>\\n        <a slot=\\"ino-secondary\\" href=\\"\\">Secondary Link Element</a>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nListItem.decorators = [withStencilReadme(listItemReadme)];\\n\\nexport const ListItemVariants = () => /*html*/ `\\n<div class=\\"story-list\\">\\n  <h1>List item variants</h1>\\n  <h4>Graphic</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Graphic (Dense)</h4>\\n  <ino-list ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Icon with Text</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <ino-icon slot=\\"ino-leading\\" class=\\"ino-list-item__icon\\" ino-icon=\\"star\\"></ino-icon>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <ino-icon slot=\\"ino-leading\\" class=\\"ino-list-item__icon\\" ino-icon=\\"star\\"></ino-icon>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Leading Checkbox</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\"></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Leading Radio-Button</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-4\\" ino-text=\\"Lorem ipsum dolor sit\\"></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-4\\" ino-text=\\"Lorem ipsum dolor sit\\"></ino-control-item>\\n  </ino-list>\\n\\n\\n  <h4>Avatar List</h4>\\n  <ino-list ino-avatar>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Avatar List (Dense)</h4>\\n  <ino-list ino-avatar ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Metadata</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Metadata (Dense)</h4>\\n  <ino-list ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Trailing Checkbox</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\" ino-trailing></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\" ino-trailing></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Checkbox + Metadata</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\"><p>Some Text</p></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\"><p>Some Text</p></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Checkbox + Metadata + Leading Icon</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"Lorem ipsum dolor sit\\"><ino-icon ino-icon=\\"add\\" /></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"Lorem ipsum dolor sit\\"><ino-icon ino-icon=\\"add\\" /></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Trailing Radio-Button</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-5\\" ino-text=\\"Lorem ipsum dolor sit\\" ino-trailing></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-5\\" ino-text=\\"Lorem ipsum dolor sit\\" ino-trailing></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Radio-Button + Metadata</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-6\\" ino-text=\\"Lorem ipsum dolor sit\\"><p>Some Text</p></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-6\\" ino-text=\\"Lorem ipsum dolor sit\\"><p>Some Text</p></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Radio-Button + Metadata + Leading Icon</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-7\\" ino-trailing ino-text=\\"Lorem ipsum dolor sit\\"><ino-icon ino-icon=\\"add\\" /></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-7\\" ino-trailing ino-text=\\"Lorem ipsum dolor sit\\"><ino-icon ino-icon=\\"add\\" /></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Avatar + Metadata</h4>\\n  <ino-list ino-avatar>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Avatar + Metadata (Dense)</h4>\\n  <ino-list ino-avatar ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h2>Two-Line List</h2>\\n\\n\\n  <h4>Graphic</h4>\\n  <ino-list ino-two-lines>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Graphic (Dense)</h4>\\n  <ino-list ino-two-lines ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Avatar List</h4>\\n  <ino-list ino-two-lines ino-avatar>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Avatar List (Dense)</h4>\\n  <ino-list ino-two-lines ino-avatar ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Metadata</h4>\\n  <ino-list ino-two-lines ino-avatar>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Metadata (Dense)</h4>\\n  <ino-list ino-two-lines ino-avatar ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Example - Two-line Avatar + Text + Icon</h4>\\n  <ino-list ino-two-lines ino-avatar>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n      <ino-icon slot=\\"ino-trailing\\" class=\\"ino-list-item__icon\\" ino-icon=\\"info\\"></ino-icon>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n      <ino-icon slot=\\"ino-trailing\\" class=\\"ino-list-item__icon\\" ino-icon=\\"info\\"></ino-icon>\\n    </ino-list-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nListItemVariants.decorators = [withStencilReadme(listItemReadme)];\\n\\nexport const ListDivider = () => /*html*/ `\\n<div class=\\"story-list\\">\\n  <h4>Divider to seperate list items</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Item 1\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Item 2\\"></ino-list-item>\\n    <ino-list-divider></ino-list-divider>\\n    <ino-list-item ino-text=\\"Item 3\\"></ino-list-item>\\n  </ino-list>\\n\\n  <h4>Divider to separate two lists</h4>\\n  <ino-list class=\\"divider-two-lists\\">\\n    <ino-list-item ino-text=\\"List 1 - item 1\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List 1 - item 2\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List 1 - item 3\\"></ino-list-item>\\n  </ino-list>\\n  <ino-list-divider ino-between-lists></ino-list-divider>\\n  <ino-list class=\\"divider-two-lists\\">\\n    <ino-list-item ino-text=\\"List 2 - item 1\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List 2 - item 2\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List 2 - item 3\\"></ino-list-item>\\n  </ino-list>\\n\\n  <h4>Inset divider</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Add to favorites\\">\\n      <ino-icon slot=\\"ino-leading\\" ino-icon=\\"favorite\\"></ino-icon>\\n    </ino-list-item>\\n    <ino-list-divider ino-inset></ino-list-divider>\\n    <ino-list-item ino-text=\\"Star it!\\">\\n      <ino-icon slot=\\"ino-leading\\" ino-icon=\\"star\\"></ino-icon>\\n    </ino-list-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nListDivider.decorators = [withStencilReadme(listDividerReadme)];\\n\\nexport const ControlItem = () => /*html*/ `\\n<div class=\\"story-list\\">\\n  <h4>Default checkbox/radio item</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" checked ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item name=\\"group\\" ino-role=\\"radio\\" name=\\"group-8\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item name=\\"group\\" ino-role=\\"radio\\" name=\\"group-8\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Different checkbox/radio items</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"First text item\\"><ino-icon ino-icon=\\"add\\"></ino-icon></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"First text item\\"><p>Some Text</p></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-9\\" ino-trailing ino-text=\\"First text item\\"><ino-icon ino-icon=\\"add\\"></ino-icon></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-9\\" ino-text=\\"First text item\\"><p>Some Text</p></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-9\\" ino-trailing ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Trailing checkbox/radio items</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"First text item\\"></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-10\\" ino-trailing ino-text=\\"First text item\\"></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-10\\" ino-trailing ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Densed checkbox/radio item</h4>\\n  <ino-list class=\\"first-densed-list\\" ino-dense>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\" ino-dense>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-11\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-11\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Two lined checkbox/radio item</h4>\\n  <ino-list ino-two-lines class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary Text\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary Text\\"></ino-control-item>\\n  </ino-list>\\n   <ino-list ino-two-lines class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-12\\" ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary Text\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-12\\" ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary Text\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Disabled checkbox/radio item</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-disabled ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-disabled ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-13\\" ino-disabled ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-13\\" ino-disabled ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Activated & selected checkbox/radio item</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-activated ino-text=\\"Activated item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-selected ino-text=\\"Selected item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-14\\" ino-activated ino-text=\\"Activated item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-14\\" ino-selected ino-text=\\"Selected item\\"></ino-control-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nControlItem.decorators = [withStencilReadme(listItemControlReadme)];\\n\\nexport const NavItem = () => /*html*/ `\\n<style>\\n  .customizable-nav-item {\\n    --ino-nav-item-color: ${text(\\n  \'--ino-nav-item-color\',\\n  \'black\',\\n  \'Custom Properties\'\\n)};\\n    --ino-nav-item-color-active: ${text(\\n  \'--ino-nav-item-color-active\',\\n  \'blue\',\\n  \'Custom Properties\'\\n)};\\n    --ino-nav-item-background-color: ${text(\\n  \'--ino-nav-item-background-color\',\\n  \'#ffffff\',\\n  \'Custom Properties\'\\n)};\\n    --ino-nav-item-background-color-active: ${text(\\n  \'--ino-nav-item-background-color-active\',\\n  \'#red\',\\n  \'Custom Properties\'\\n)};\\n  }\\n</style>\\n<div class=\\"story-list\\">\\n  <h4>Customizable nav item</h4>\\n  <ino-list>\\n    <ino-nav-item\\n      class=\\"customizable-nav-item\\"\\n      ino-text=\\"${text(\'ino-text\', \'Nav item\')}\\"\\n      ino-activated=\\"${boolean(\'ino-activated\', false)}\\"\\n      ino-disabled=\\"${boolean(\'ino-disabled\', false)}\\"\\n    >\\n      <ino-icon ino-icon=\\"onboarding\\" class=\\"ino-list-item__icon\\"></ino-icon>\\n    </ino-nav-item>\\n  </ino-list>\\n\\n  <h4>States</h4>\\n  <ino-list>\\n    <ino-nav-item ino-text=\\"Simple item\\"></ino-nav-item>\\n    <ino-nav-item ino-text=\\"Simple item 2\\"></ino-nav-item>\\n    <ino-nav-item ino-activated ino-text=\\"Activated item\\"></ino-nav-item>\\n    <ino-nav-item ino-disabled ino-text=\\"Disabled item\\"></ino-nav-item>\\n  </ino-list>\\n\\n  <h4>Graphic</h4>\\n  <ino-list>\\n    <ino-nav-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <ino-icon ino-icon=\\"onboarding\\" class=\\"ino-list-item__icon\\"></ino-icon>\\n    </ino-nav-item>\\n    <ino-nav-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <ino-img src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-nav-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nNavItem.decorators = [withStencilReadme(navItemReadme)];\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":47},"endLoc":{"col":1,"line":133},"startBody":{"col":28,"line":47},"endBody":{"col":1,"line":133}},"ListItem":{"startLoc":{"col":24,"line":137},"endLoc":{"col":1,"line":192},"startBody":{"col":24,"line":137},"endBody":{"col":1,"line":192}},"ListItemVariants":{"startLoc":{"col":32,"line":196},"endLoc":{"col":1,"line":432},"startBody":{"col":32,"line":196},"endBody":{"col":1,"line":432}},"ListDivider":{"startLoc":{"col":27,"line":436},"endLoc":{"col":1,"line":470},"startBody":{"col":27,"line":436},"endBody":{"col":1,"line":470}},"ControlItem":{"startLoc":{"col":27,"line":474},"endLoc":{"col":1,"line":549},"startBody":{"col":27,"line":474},"endBody":{"col":1,"line":549}},"NavItem":{"startLoc":{"col":23,"line":553},"endLoc":{"col":1,"line":609},"startBody":{"col":23,"line":553},"endBody":{"col":1,"line":609}}};\n    \nimport { boolean, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport listReadme from \'_local-elements/src/components/ino-list/readme.md\';\nimport listItemReadme from \'_local-elements/src/components/ino-list-item/readme.md\';\nimport listDividerReadme from \'_local-elements/src/components/ino-list-divider/readme.md\';\nimport listItemControlReadme from \'_local-elements/src/components/ino-control-item/readme.md\';\nimport navItemReadme from \'_local-elements/src/components/ino-nav-item/readme.md\';\n\nimport \'./ino-list.scss\';\n\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function(e) {\n    const el = e.target;\n    const tagName = el.tagName.toLowerCase();\n    if (tagName !== \'ino-checkbox\' && tagName !== \'ino-radio\' && tagName !== \'ino-control-item\') {\n      return;\n    }\n\n    el.setAttribute(\'checked\', e.detail);\n\n    if (el.getAttribute(\'indeterminate\') === \'true\') {\n      el.setAttribute(\'indeterminate\', \'false\');\n    }\n  };\n\n  document.addEventListener(\'checkedChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'checkedChange\', eventHandler);\n  };\n}\n\nexport default {parameters: {"storySource":{"source":"import { boolean, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport listReadme from \'_local-elements/src/components/ino-list/readme.md\';\\nimport listItemReadme from \'_local-elements/src/components/ino-list-item/readme.md\';\\nimport listDividerReadme from \'_local-elements/src/components/ino-list-divider/readme.md\';\\nimport listItemControlReadme from \'_local-elements/src/components/ino-control-item/readme.md\';\\nimport navItemReadme from \'_local-elements/src/components/ino-nav-item/readme.md\';\\n\\nimport \'./ino-list.scss\';\\n\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function(e) {\\n    const el = e.target;\\n    const tagName = el.tagName.toLowerCase();\\n    if (tagName !== \'ino-checkbox\' && tagName !== \'ino-radio\' && tagName !== \'ino-control-item\') {\\n      return;\\n    }\\n\\n    el.setAttribute(\'checked\', e.detail);\\n\\n    if (el.getAttribute(\'indeterminate\') === \'true\') {\\n      el.setAttribute(\'indeterminate\', \'false\');\\n    }\\n  };\\n\\n  document.addEventListener(\'checkedChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'checkedChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-list>\',\\n  decorators: [story => {\\n    subscribeToComponentEvents();\\n    return story();\\n  }]\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-list\\">\\n  <h4>Customizable List</h4>\\n  <ino-list\\n    ino-dense=\\"${boolean(\'ino-dense\', false)}\\"\\n    ino-two-lines=\\"${boolean(\'ino-two-lines\', false)}\\"\\n    ino-avatar=\\"${boolean(\'ino-avatar\', false)}\\"\\n   >\\n    <ino-list-item ino-text=\\"First text item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Third text item\\"></ino-list-item>\\n  </ino-list>\\n\\n  <h4>Two lines</h4>\\n  <ino-list ino-two-lines>\\n    <ino-list-item ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Third text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n  </ino-list>\\n\\n  <h4>Densed</h4>\\n  <ino-list ino-dense class=\\"first-densed-list\\">\\n    <ino-list-item ino-text=\\"First text item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Third text item\\"></ino-list-item>\\n  </ino-list>\\n  <ino-list ino-dense ino-two-lines class=\\"first-densed-list\\">\\n    <ino-list-item ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Third text item\\" ino-secondary-text=\\"Secondary\\"></ino-list-item>\\n  </ino-list>\\n\\n  <h4>Avatar</h4>\\n  <ino-list ino-avatar class=\\"first-densed-list\\">\\n    <ino-list-item ino-text=\\"First text item\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n  <ino-list ino-avatar ino-dense class=\\"first-densed-list\\">\\n    <ino-list-item ino-text=\\"First text item\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n  <ino-list ino-avatar ino-two-lines class=\\"first-densed-list\\">\\n    <ino-list-item ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n  <h4>Checkbox</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\" ino-dense>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list ino-two-lines class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" checked ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary Text\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary Text\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Radio Button</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-1\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-1\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\" ino-dense>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-2\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-2\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list ino-two-lines class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-3\\" checked ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary Text\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-3\\" ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary Text\\"></ino-control-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nDefaultUsage.decorators = [withStencilReadme(listReadme)];\\n\\nexport const ListItem = () => /*html*/ `\\n<div class=\\"story-list\\">\\n  <h4>Customizable list item</h4>\\n  <ino-list ino-two-lines=\\"${boolean(\'ino-two-lines (on ino-list)\', true)}\\">\\n    <ino-list-item\\n      ino-secondary-text=\\"${text(\'ino-secondary-text\', \'Second line text\')}\\"\\n      ino-selected=\\"${boolean(\'ino-selected\', false)}\\"\\n      ino-activated=\\"${boolean(\'ino-activated\', false)}\\"\\n      ino-disabled=\\"${boolean(\'ino-disabled\', false)}\\"\\n      ino-text=\\"${text(\'ino-text\', \'List item\')}\\">\\n    </ino-list-item>\\n  </ino-list>\\n\\n  <h4>States</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Simple item\\"></ino-list-item>\\n    <ino-list-item ino-selected ino-text=\\"Selected item\\"></ino-list-item>\\n    <ino-list-item ino-selected ino-text=\\"Selected item 2\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Simple item 2\\"></ino-list-item>\\n    <ino-list-item ino-activated ino-text=\\"Activated item\\"></ino-list-item>\\n    <ino-list-item ino-disabled ino-text=\\"Disabled item\\"></ino-list-item>\\n  </ino-list>\\n\\n\\n\\n  <h4>Graphic and Meta</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n  <h4>Primary and Leading Slot</h4>\\n  <ino-list>\\n    <ino-list-item>\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <a slot=\\"ino-primary\\" href=\\"\\">Link Element</a>\\n    </ino-list-item>\\n  </ino-list>\\n\\n  <h4>Two Lines with Primary and Secondary Slot</h4>\\n  <ino-list ino-two-lines>\\n    <ino-list-item>\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <a slot=\\"ino-primary\\" href=\\"\\">Primary Link Element</a>\\n        <a slot=\\"ino-secondary\\" href=\\"\\">Secondary Link Element</a>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nListItem.decorators = [withStencilReadme(listItemReadme)];\\n\\nexport const ListItemVariants = () => /*html*/ `\\n<div class=\\"story-list\\">\\n  <h1>List item variants</h1>\\n  <h4>Graphic</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Graphic (Dense)</h4>\\n  <ino-list ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Icon with Text</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <ino-icon slot=\\"ino-leading\\" class=\\"ino-list-item__icon\\" ino-icon=\\"star\\"></ino-icon>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <ino-icon slot=\\"ino-leading\\" class=\\"ino-list-item__icon\\" ino-icon=\\"star\\"></ino-icon>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Leading Checkbox</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\"></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Leading Radio-Button</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-4\\" ino-text=\\"Lorem ipsum dolor sit\\"></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-4\\" ino-text=\\"Lorem ipsum dolor sit\\"></ino-control-item>\\n  </ino-list>\\n\\n\\n  <h4>Avatar List</h4>\\n  <ino-list ino-avatar>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Avatar List (Dense)</h4>\\n  <ino-list ino-avatar ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Metadata</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Metadata (Dense)</h4>\\n  <ino-list ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Trailing Checkbox</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\" ino-trailing></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\" ino-trailing></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Checkbox + Metadata</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\"><p>Some Text</p></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Lorem ipsum dolor sit\\"><p>Some Text</p></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Checkbox + Metadata + Leading Icon</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"Lorem ipsum dolor sit\\"><ino-icon ino-icon=\\"add\\" /></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"Lorem ipsum dolor sit\\"><ino-icon ino-icon=\\"add\\" /></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Trailing Radio-Button</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-5\\" ino-text=\\"Lorem ipsum dolor sit\\" ino-trailing></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-5\\" ino-text=\\"Lorem ipsum dolor sit\\" ino-trailing></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Radio-Button + Metadata</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-6\\" ino-text=\\"Lorem ipsum dolor sit\\"><p>Some Text</p></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-6\\" ino-text=\\"Lorem ipsum dolor sit\\"><p>Some Text</p></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Radio-Button + Metadata + Leading Icon</h4>\\n  <ino-list>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-7\\" ino-trailing ino-text=\\"Lorem ipsum dolor sit\\"><ino-icon ino-icon=\\"add\\" /></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-7\\" ino-trailing ino-text=\\"Lorem ipsum dolor sit\\"><ino-icon ino-icon=\\"add\\" /></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Avatar + Metadata</h4>\\n  <ino-list ino-avatar>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Avatar + Metadata (Dense)</h4>\\n  <ino-list ino-avatar ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\">\\n        <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h2>Two-Line List</h2>\\n\\n\\n  <h4>Graphic</h4>\\n  <ino-list ino-two-lines>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Graphic (Dense)</h4>\\n  <ino-list ino-two-lines ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Avatar List</h4>\\n  <ino-list ino-two-lines ino-avatar>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Avatar List (Dense)</h4>\\n  <ino-list ino-two-lines ino-avatar ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Metadata</h4>\\n  <ino-list ino-two-lines ino-avatar>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Metadata (Dense)</h4>\\n  <ino-list ino-two-lines ino-avatar ino-dense>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n        <p slot=\\"ino-trailing\\">$10.00</p>\\n    </ino-list-item>\\n  </ino-list>\\n\\n\\n  <h4>Example - Two-line Avatar + Text + Icon</h4>\\n  <ino-list ino-two-lines ino-avatar>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n      <ino-icon slot=\\"ino-trailing\\" class=\\"ino-list-item__icon\\" ino-icon=\\"info\\"></ino-icon>\\n    </ino-list-item>\\n    <ino-list-item ino-text=\\"Lorem ipsum dolor sit\\" ino-secondary-text=\\"Secondary Lorem ipsum dolor sit\\">\\n      <ino-img slot=\\"ino-leading\\" src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n      <ino-icon slot=\\"ino-trailing\\" class=\\"ino-list-item__icon\\" ino-icon=\\"info\\"></ino-icon>\\n    </ino-list-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nListItemVariants.decorators = [withStencilReadme(listItemReadme)];\\n\\nexport const ListDivider = () => /*html*/ `\\n<div class=\\"story-list\\">\\n  <h4>Divider to seperate list items</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Item 1\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"Item 2\\"></ino-list-item>\\n    <ino-list-divider></ino-list-divider>\\n    <ino-list-item ino-text=\\"Item 3\\"></ino-list-item>\\n  </ino-list>\\n\\n  <h4>Divider to separate two lists</h4>\\n  <ino-list class=\\"divider-two-lists\\">\\n    <ino-list-item ino-text=\\"List 1 - item 1\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List 1 - item 2\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List 1 - item 3\\"></ino-list-item>\\n  </ino-list>\\n  <ino-list-divider ino-between-lists></ino-list-divider>\\n  <ino-list class=\\"divider-two-lists\\">\\n    <ino-list-item ino-text=\\"List 2 - item 1\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List 2 - item 2\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List 2 - item 3\\"></ino-list-item>\\n  </ino-list>\\n\\n  <h4>Inset divider</h4>\\n  <ino-list>\\n    <ino-list-item ino-text=\\"Add to favorites\\">\\n      <ino-icon slot=\\"ino-leading\\" ino-icon=\\"favorite\\"></ino-icon>\\n    </ino-list-item>\\n    <ino-list-divider ino-inset></ino-list-divider>\\n    <ino-list-item ino-text=\\"Star it!\\">\\n      <ino-icon slot=\\"ino-leading\\" ino-icon=\\"star\\"></ino-icon>\\n    </ino-list-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nListDivider.decorators = [withStencilReadme(listDividerReadme)];\\n\\nexport const ControlItem = () => /*html*/ `\\n<div class=\\"story-list\\">\\n  <h4>Default checkbox/radio item</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" checked ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item name=\\"group\\" ino-role=\\"radio\\" name=\\"group-8\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item name=\\"group\\" ino-role=\\"radio\\" name=\\"group-8\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Different checkbox/radio items</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"First text item\\"><ino-icon ino-icon=\\"add\\"></ino-icon></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"First text item\\"><p>Some Text</p></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-9\\" ino-trailing ino-text=\\"First text item\\"><ino-icon ino-icon=\\"add\\"></ino-icon></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-9\\" ino-text=\\"First text item\\"><p>Some Text</p></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-9\\" ino-trailing ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Trailing checkbox/radio items</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"First text item\\"></ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-trailing ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-10\\" ino-trailing ino-text=\\"First text item\\"></ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-10\\" ino-trailing ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Densed checkbox/radio item</h4>\\n  <ino-list class=\\"first-densed-list\\" ino-dense>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\" ino-dense>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-11\\" ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-11\\" ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Two lined checkbox/radio item</h4>\\n  <ino-list ino-two-lines class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary Text\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary Text\\"></ino-control-item>\\n  </ino-list>\\n   <ino-list ino-two-lines class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-12\\" ino-text=\\"First text item\\" ino-secondary-text=\\"Secondary Text\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-12\\" ino-text=\\"Second text item\\" ino-secondary-text=\\"Secondary Text\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Disabled checkbox/radio item</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-disabled ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-disabled ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-13\\" ino-disabled ino-text=\\"First text item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-13\\" ino-disabled ino-text=\\"Second text item\\"></ino-control-item>\\n  </ino-list>\\n\\n  <h4>Activated & selected checkbox/radio item</h4>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"checkbox\\" ino-activated ino-text=\\"Activated item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"checkbox\\" ino-selected ino-text=\\"Selected item\\"></ino-control-item>\\n  </ino-list>\\n  <ino-list class=\\"first-densed-list\\">\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-14\\" ino-activated ino-text=\\"Activated item\\"> </ino-control-item>\\n    <ino-control-item ino-role=\\"radio\\" name=\\"group-14\\" ino-selected ino-text=\\"Selected item\\"></ino-control-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nControlItem.decorators = [withStencilReadme(listItemControlReadme)];\\n\\nexport const NavItem = () => /*html*/ `\\n<style>\\n  .customizable-nav-item {\\n    --ino-nav-item-color: ${text(\\n  \'--ino-nav-item-color\',\\n  \'black\',\\n  \'Custom Properties\'\\n)};\\n    --ino-nav-item-color-active: ${text(\\n  \'--ino-nav-item-color-active\',\\n  \'blue\',\\n  \'Custom Properties\'\\n)};\\n    --ino-nav-item-background-color: ${text(\\n  \'--ino-nav-item-background-color\',\\n  \'#ffffff\',\\n  \'Custom Properties\'\\n)};\\n    --ino-nav-item-background-color-active: ${text(\\n  \'--ino-nav-item-background-color-active\',\\n  \'#red\',\\n  \'Custom Properties\'\\n)};\\n  }\\n</style>\\n<div class=\\"story-list\\">\\n  <h4>Customizable nav item</h4>\\n  <ino-list>\\n    <ino-nav-item\\n      class=\\"customizable-nav-item\\"\\n      ino-text=\\"${text(\'ino-text\', \'Nav item\')}\\"\\n      ino-activated=\\"${boolean(\'ino-activated\', false)}\\"\\n      ino-disabled=\\"${boolean(\'ino-disabled\', false)}\\"\\n    >\\n      <ino-icon ino-icon=\\"onboarding\\" class=\\"ino-list-item__icon\\"></ino-icon>\\n    </ino-nav-item>\\n  </ino-list>\\n\\n  <h4>States</h4>\\n  <ino-list>\\n    <ino-nav-item ino-text=\\"Simple item\\"></ino-nav-item>\\n    <ino-nav-item ino-text=\\"Simple item 2\\"></ino-nav-item>\\n    <ino-nav-item ino-activated ino-text=\\"Activated item\\"></ino-nav-item>\\n    <ino-nav-item ino-disabled ino-text=\\"Disabled item\\"></ino-nav-item>\\n  </ino-list>\\n\\n  <h4>Graphic</h4>\\n  <ino-list>\\n    <ino-nav-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <ino-icon ino-icon=\\"onboarding\\" class=\\"ino-list-item__icon\\"></ino-icon>\\n    </ino-nav-item>\\n    <ino-nav-item ino-text=\\"Lorem ipsum dolor sit\\">\\n      <ino-img src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n    </ino-nav-item>\\n  </ino-list>\\n</div>\\n`;\\n\\nNavItem.decorators = [withStencilReadme(navItemReadme)];\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":47},"endLoc":{"col":1,"line":133},"startBody":{"col":28,"line":47},"endBody":{"col":1,"line":133}},"list-item":{"startLoc":{"col":24,"line":137},"endLoc":{"col":1,"line":192},"startBody":{"col":24,"line":137},"endBody":{"col":1,"line":192}},"list-item-variants":{"startLoc":{"col":32,"line":196},"endLoc":{"col":1,"line":432},"startBody":{"col":32,"line":196},"endBody":{"col":1,"line":432}},"list-divider":{"startLoc":{"col":27,"line":436},"endLoc":{"col":1,"line":470},"startBody":{"col":27,"line":436},"endBody":{"col":1,"line":470}},"control-item":{"startLoc":{"col":27,"line":474},"endLoc":{"col":1,"line":549},"startBody":{"col":27,"line":474},"endBody":{"col":1,"line":549}},"nav-item":{"startLoc":{"col":23,"line":553},"endLoc":{"col":1,"line":609},"startBody":{"col":23,"line":553},"endBody":{"col":1,"line":609}}}},},\n  title: \'Structure/<ino-list>\',\n  decorators: [story => {\n    subscribeToComponentEvents();\n    return story();\n  }]\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-list">\n  <h4>Customizable List</h4>\n  <ino-list\n    ino-dense="${boolean(\'ino-dense\', false)}"\n    ino-two-lines="${boolean(\'ino-two-lines\', false)}"\n    ino-avatar="${boolean(\'ino-avatar\', false)}"\n   >\n    <ino-list-item ino-text="First text item"></ino-list-item>\n    <ino-list-item ino-text="Second text item"></ino-list-item>\n    <ino-list-item ino-text="Third text item"></ino-list-item>\n  </ino-list>\n\n  <h4>Two lines</h4>\n  <ino-list ino-two-lines>\n    <ino-list-item ino-text="First text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Second text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Third text item" ino-secondary-text="Secondary"></ino-list-item>\n  </ino-list>\n\n  <h4>Densed</h4>\n  <ino-list ino-dense class="first-densed-list">\n    <ino-list-item ino-text="First text item"></ino-list-item>\n    <ino-list-item ino-text="Second text item"></ino-list-item>\n    <ino-list-item ino-text="Third text item"></ino-list-item>\n  </ino-list>\n  <ino-list ino-dense ino-two-lines class="first-densed-list">\n    <ino-list-item ino-text="First text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Second text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Third text item" ino-secondary-text="Secondary"></ino-list-item>\n  </ino-list>\n\n  <h4>Avatar</h4>\n  <ino-list ino-avatar class="first-densed-list">\n    <ino-list-item ino-text="First text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Second text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n  <ino-list ino-avatar ino-dense class="first-densed-list">\n    <ino-list-item ino-text="First text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Second text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n  <ino-list ino-avatar ino-two-lines class="first-densed-list">\n    <ino-list-item ino-text="First text item" ino-secondary-text="Secondary">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Second text item" ino-secondary-text="Secondary">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n  <h4>Checkbox</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="checkbox" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="checkbox" checked ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n\n  <h4>Radio Button</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-1" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-1" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="radio" name="group-2" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-2" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-3" checked ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-3" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n</div>\n`;;\n\nDefaultUsage.decorators = [withStencilReadme(listReadme)];\n\nexport const ListItem = () => /*html*/ `\n<div class="story-list">\n  <h4>Customizable list item</h4>\n  <ino-list ino-two-lines="${boolean(\'ino-two-lines (on ino-list)\', true)}">\n    <ino-list-item\n      ino-secondary-text="${text(\'ino-secondary-text\', \'Second line text\')}"\n      ino-selected="${boolean(\'ino-selected\', false)}"\n      ino-activated="${boolean(\'ino-activated\', false)}"\n      ino-disabled="${boolean(\'ino-disabled\', false)}"\n      ino-text="${text(\'ino-text\', \'List item\')}">\n    </ino-list-item>\n  </ino-list>\n\n  <h4>States</h4>\n  <ino-list>\n    <ino-list-item ino-text="Simple item"></ino-list-item>\n    <ino-list-item ino-selected ino-text="Selected item"></ino-list-item>\n    <ino-list-item ino-selected ino-text="Selected item 2"></ino-list-item>\n    <ino-list-item ino-text="Simple item 2"></ino-list-item>\n    <ino-list-item ino-activated ino-text="Activated item"></ino-list-item>\n    <ino-list-item ino-disabled ino-text="Disabled item"></ino-list-item>\n  </ino-list>\n\n\n\n  <h4>Graphic and Meta</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n  <h4>Primary and Leading Slot</h4>\n  <ino-list>\n    <ino-list-item>\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <a slot="ino-primary" href="">Link Element</a>\n    </ino-list-item>\n  </ino-list>\n\n  <h4>Two Lines with Primary and Secondary Slot</h4>\n  <ino-list ino-two-lines>\n    <ino-list-item>\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <a slot="ino-primary" href="">Primary Link Element</a>\n        <a slot="ino-secondary" href="">Secondary Link Element</a>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n</div>\n`;;\n\nListItem.decorators = [withStencilReadme(listItemReadme)];\n\nexport const ListItemVariants = () => /*html*/ `\n<div class="story-list">\n  <h1>List item variants</h1>\n  <h4>Graphic</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Graphic (Dense)</h4>\n  <ino-list ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Icon with Text</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <ino-icon slot="ino-leading" class="ino-list-item__icon" ino-icon="star"></ino-icon>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <ino-icon slot="ino-leading" class="ino-list-item__icon" ino-icon="star"></ino-icon>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Leading Checkbox</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n  </ino-list>\n\n  <h4>Leading Radio-Button</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-4" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-4" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n  </ino-list>\n\n\n  <h4>Avatar List</h4>\n  <ino-list ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar List (Dense)</h4>\n  <ino-list ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata (Dense)</h4>\n  <ino-list ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Trailing Checkbox</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n  </ino-list>\n\n  <h4>Checkbox + Metadata</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n  </ino-list>\n\n  <h4>Checkbox + Metadata + Leading Icon</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n  </ino-list>\n\n  <h4>Trailing Radio-Button</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-5" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-5" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n  </ino-list>\n\n  <h4>Radio-Button + Metadata</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-6" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-6" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n  </ino-list>\n\n  <h4>Radio-Button + Metadata + Leading Icon</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-7" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-7" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n  </ino-list>\n\n  <h4>Avatar + Metadata</h4>\n  <ino-list ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar + Metadata (Dense)</h4>\n  <ino-list ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h2>Two-Line List</h2>\n\n\n  <h4>Graphic</h4>\n  <ino-list ino-two-lines>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Graphic (Dense)</h4>\n  <ino-list ino-two-lines ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar List</h4>\n  <ino-list ino-two-lines ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar List (Dense)</h4>\n  <ino-list ino-two-lines ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata</h4>\n  <ino-list ino-two-lines ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata (Dense)</h4>\n  <ino-list ino-two-lines ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Example - Two-line Avatar + Text + Icon</h4>\n  <ino-list ino-two-lines ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n      <ino-icon slot="ino-trailing" class="ino-list-item__icon" ino-icon="info"></ino-icon>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n      <ino-icon slot="ino-trailing" class="ino-list-item__icon" ino-icon="info"></ino-icon>\n    </ino-list-item>\n  </ino-list>\n</div>\n`;;\n\nListItemVariants.decorators = [withStencilReadme(listItemReadme)];\n\nexport const ListDivider = () => /*html*/ `\n<div class="story-list">\n  <h4>Divider to seperate list items</h4>\n  <ino-list>\n    <ino-list-item ino-text="Item 1"></ino-list-item>\n    <ino-list-item ino-text="Item 2"></ino-list-item>\n    <ino-list-divider></ino-list-divider>\n    <ino-list-item ino-text="Item 3"></ino-list-item>\n  </ino-list>\n\n  <h4>Divider to separate two lists</h4>\n  <ino-list class="divider-two-lists">\n    <ino-list-item ino-text="List 1 - item 1"></ino-list-item>\n    <ino-list-item ino-text="List 1 - item 2"></ino-list-item>\n    <ino-list-item ino-text="List 1 - item 3"></ino-list-item>\n  </ino-list>\n  <ino-list-divider ino-between-lists></ino-list-divider>\n  <ino-list class="divider-two-lists">\n    <ino-list-item ino-text="List 2 - item 1"></ino-list-item>\n    <ino-list-item ino-text="List 2 - item 2"></ino-list-item>\n    <ino-list-item ino-text="List 2 - item 3"></ino-list-item>\n  </ino-list>\n\n  <h4>Inset divider</h4>\n  <ino-list>\n    <ino-list-item ino-text="Add to favorites">\n      <ino-icon slot="ino-leading" ino-icon="favorite"></ino-icon>\n    </ino-list-item>\n    <ino-list-divider ino-inset></ino-list-divider>\n    <ino-list-item ino-text="Star it!">\n      <ino-icon slot="ino-leading" ino-icon="star"></ino-icon>\n    </ino-list-item>\n  </ino-list>\n</div>\n`;;\n\nListDivider.decorators = [withStencilReadme(listDividerReadme)];\n\nexport const ControlItem = () => /*html*/ `\n<div class="story-list">\n  <h4>Default checkbox/radio item</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" checked ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <ino-list class="first-densed-list">\n    <ino-control-item name="group" ino-role="radio" name="group-8" ino-text="First text item"> </ino-control-item>\n    <ino-control-item name="group" ino-role="radio" name="group-8" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Different checkbox/radio items</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="First text item"><ino-icon ino-icon="add"></ino-icon></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="First text item"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-9" ino-trailing ino-text="First text item"><ino-icon ino-icon="add"></ino-icon></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-9" ino-text="First text item"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-9" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Trailing checkbox/radio items</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="First text item"></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-10" ino-trailing ino-text="First text item"></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-10" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Densed checkbox/radio item</h4>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="checkbox" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="radio" name="group-11" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-11" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Two lined checkbox/radio item</h4>\n  <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n   <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-12" ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-12" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n\n  <h4>Disabled checkbox/radio item</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-disabled ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-disabled ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-13" ino-disabled ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-13" ino-disabled ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Activated & selected checkbox/radio item</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-activated ino-text="Activated item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-selected ino-text="Selected item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-14" ino-activated ino-text="Activated item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-14" ino-selected ino-text="Selected item"></ino-control-item>\n  </ino-list>\n</div>\n`;;\n\nControlItem.decorators = [withStencilReadme(listItemControlReadme)];\n\nexport const NavItem = () => /*html*/ `\n<style>\n  .customizable-nav-item {\n    --ino-nav-item-color: ${text(\n  \'--ino-nav-item-color\',\n  \'black\',\n  \'Custom Properties\'\n)};\n    --ino-nav-item-color-active: ${text(\n  \'--ino-nav-item-color-active\',\n  \'blue\',\n  \'Custom Properties\'\n)};\n    --ino-nav-item-background-color: ${text(\n  \'--ino-nav-item-background-color\',\n  \'#ffffff\',\n  \'Custom Properties\'\n)};\n    --ino-nav-item-background-color-active: ${text(\n  \'--ino-nav-item-background-color-active\',\n  \'#red\',\n  \'Custom Properties\'\n)};\n  }\n</style>\n<div class="story-list">\n  <h4>Customizable nav item</h4>\n  <ino-list>\n    <ino-nav-item\n      class="customizable-nav-item"\n      ino-text="${text(\'ino-text\', \'Nav item\')}"\n      ino-activated="${boolean(\'ino-activated\', false)}"\n      ino-disabled="${boolean(\'ino-disabled\', false)}"\n    >\n      <ino-icon ino-icon="onboarding" class="ino-list-item__icon"></ino-icon>\n    </ino-nav-item>\n  </ino-list>\n\n  <h4>States</h4>\n  <ino-list>\n    <ino-nav-item ino-text="Simple item"></ino-nav-item>\n    <ino-nav-item ino-text="Simple item 2"></ino-nav-item>\n    <ino-nav-item ino-activated ino-text="Activated item"></ino-nav-item>\n    <ino-nav-item ino-disabled ino-text="Disabled item"></ino-nav-item>\n  </ino-list>\n\n  <h4>Graphic</h4>\n  <ino-list>\n    <ino-nav-item ino-text="Lorem ipsum dolor sit">\n      <ino-icon ino-icon="onboarding" class="ino-list-item__icon"></ino-icon>\n    </ino-nav-item>\n    <ino-nav-item ino-text="Lorem ipsum dolor sit">\n      <ino-img src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-nav-item>\n  </ino-list>\n</div>\n`;\n\nNavItem.decorators = [withStencilReadme(navItemReadme)];\n',locationsMap:{"default-usage":{startLoc:{col:28,line:55},endLoc:{col:1,line:141},startBody:{col:28,line:55},endBody:{col:1,line:141}},"list-item":{startLoc:{col:24,line:145},endLoc:{col:1,line:200},startBody:{col:24,line:145},endBody:{col:1,line:200}},"list-item-variants":{startLoc:{col:32,line:204},endLoc:{col:1,line:440},startBody:{col:32,line:204},endBody:{col:1,line:440}},"list-divider":{startLoc:{col:27,line:444},endLoc:{col:1,line:478},startBody:{col:27,line:444},endBody:{col:1,line:478}},"control-item":{startLoc:{col:27,line:482},endLoc:{col:1,line:557},startBody:{col:27,line:482},endBody:{col:1,line:557}},"nav-item":{startLoc:{col:23,line:561},endLoc:{col:1,line:617},startBody:{col:23,line:561},endBody:{col:1,line:617}}}}},"storySource",{source:'import { boolean, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport listReadme from \'_local-elements/src/components/ino-list/readme.md\';\nimport listItemReadme from \'_local-elements/src/components/ino-list-item/readme.md\';\nimport listDividerReadme from \'_local-elements/src/components/ino-list-divider/readme.md\';\nimport listItemControlReadme from \'_local-elements/src/components/ino-control-item/readme.md\';\nimport navItemReadme from \'_local-elements/src/components/ino-nav-item/readme.md\';\n\nimport \'./ino-list.scss\';\n\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function(e) {\n    const el = e.target;\n    const tagName = el.tagName.toLowerCase();\n    if (tagName !== \'ino-checkbox\' && tagName !== \'ino-radio\' && tagName !== \'ino-control-item\') {\n      return;\n    }\n\n    el.setAttribute(\'checked\', e.detail);\n\n    if (el.getAttribute(\'indeterminate\') === \'true\') {\n      el.setAttribute(\'indeterminate\', \'false\');\n    }\n  };\n\n  document.addEventListener(\'checkedChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'checkedChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Structure/<ino-list>\',\n  decorators: [story => {\n    subscribeToComponentEvents();\n    return story();\n  }]\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-list">\n  <h4>Customizable List</h4>\n  <ino-list\n    ino-dense="${boolean(\'ino-dense\', false)}"\n    ino-two-lines="${boolean(\'ino-two-lines\', false)}"\n    ino-avatar="${boolean(\'ino-avatar\', false)}"\n   >\n    <ino-list-item ino-text="First text item"></ino-list-item>\n    <ino-list-item ino-text="Second text item"></ino-list-item>\n    <ino-list-item ino-text="Third text item"></ino-list-item>\n  </ino-list>\n\n  <h4>Two lines</h4>\n  <ino-list ino-two-lines>\n    <ino-list-item ino-text="First text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Second text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Third text item" ino-secondary-text="Secondary"></ino-list-item>\n  </ino-list>\n\n  <h4>Densed</h4>\n  <ino-list ino-dense class="first-densed-list">\n    <ino-list-item ino-text="First text item"></ino-list-item>\n    <ino-list-item ino-text="Second text item"></ino-list-item>\n    <ino-list-item ino-text="Third text item"></ino-list-item>\n  </ino-list>\n  <ino-list ino-dense ino-two-lines class="first-densed-list">\n    <ino-list-item ino-text="First text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Second text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Third text item" ino-secondary-text="Secondary"></ino-list-item>\n  </ino-list>\n\n  <h4>Avatar</h4>\n  <ino-list ino-avatar class="first-densed-list">\n    <ino-list-item ino-text="First text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Second text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n  <ino-list ino-avatar ino-dense class="first-densed-list">\n    <ino-list-item ino-text="First text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Second text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n  <ino-list ino-avatar ino-two-lines class="first-densed-list">\n    <ino-list-item ino-text="First text item" ino-secondary-text="Secondary">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Second text item" ino-secondary-text="Secondary">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n  <h4>Checkbox</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="checkbox" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="checkbox" checked ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n\n  <h4>Radio Button</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-1" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-1" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="radio" name="group-2" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-2" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-3" checked ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-3" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n</div>\n`;\n\nDefaultUsage.decorators = [withStencilReadme(listReadme)];\n\nexport const ListItem = () => /*html*/ `\n<div class="story-list">\n  <h4>Customizable list item</h4>\n  <ino-list ino-two-lines="${boolean(\'ino-two-lines (on ino-list)\', true)}">\n    <ino-list-item\n      ino-secondary-text="${text(\'ino-secondary-text\', \'Second line text\')}"\n      ino-selected="${boolean(\'ino-selected\', false)}"\n      ino-activated="${boolean(\'ino-activated\', false)}"\n      ino-disabled="${boolean(\'ino-disabled\', false)}"\n      ino-text="${text(\'ino-text\', \'List item\')}">\n    </ino-list-item>\n  </ino-list>\n\n  <h4>States</h4>\n  <ino-list>\n    <ino-list-item ino-text="Simple item"></ino-list-item>\n    <ino-list-item ino-selected ino-text="Selected item"></ino-list-item>\n    <ino-list-item ino-selected ino-text="Selected item 2"></ino-list-item>\n    <ino-list-item ino-text="Simple item 2"></ino-list-item>\n    <ino-list-item ino-activated ino-text="Activated item"></ino-list-item>\n    <ino-list-item ino-disabled ino-text="Disabled item"></ino-list-item>\n  </ino-list>\n\n\n\n  <h4>Graphic and Meta</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n  <h4>Primary and Leading Slot</h4>\n  <ino-list>\n    <ino-list-item>\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <a slot="ino-primary" href="">Link Element</a>\n    </ino-list-item>\n  </ino-list>\n\n  <h4>Two Lines with Primary and Secondary Slot</h4>\n  <ino-list ino-two-lines>\n    <ino-list-item>\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <a slot="ino-primary" href="">Primary Link Element</a>\n        <a slot="ino-secondary" href="">Secondary Link Element</a>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n</div>\n`;\n\nListItem.decorators = [withStencilReadme(listItemReadme)];\n\nexport const ListItemVariants = () => /*html*/ `\n<div class="story-list">\n  <h1>List item variants</h1>\n  <h4>Graphic</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Graphic (Dense)</h4>\n  <ino-list ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Icon with Text</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <ino-icon slot="ino-leading" class="ino-list-item__icon" ino-icon="star"></ino-icon>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <ino-icon slot="ino-leading" class="ino-list-item__icon" ino-icon="star"></ino-icon>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Leading Checkbox</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n  </ino-list>\n\n  <h4>Leading Radio-Button</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-4" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-4" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n  </ino-list>\n\n\n  <h4>Avatar List</h4>\n  <ino-list ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar List (Dense)</h4>\n  <ino-list ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata (Dense)</h4>\n  <ino-list ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Trailing Checkbox</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n  </ino-list>\n\n  <h4>Checkbox + Metadata</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n  </ino-list>\n\n  <h4>Checkbox + Metadata + Leading Icon</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n  </ino-list>\n\n  <h4>Trailing Radio-Button</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-5" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-5" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n  </ino-list>\n\n  <h4>Radio-Button + Metadata</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-6" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-6" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n  </ino-list>\n\n  <h4>Radio-Button + Metadata + Leading Icon</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-7" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-7" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n  </ino-list>\n\n  <h4>Avatar + Metadata</h4>\n  <ino-list ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar + Metadata (Dense)</h4>\n  <ino-list ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h2>Two-Line List</h2>\n\n\n  <h4>Graphic</h4>\n  <ino-list ino-two-lines>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Graphic (Dense)</h4>\n  <ino-list ino-two-lines ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar List</h4>\n  <ino-list ino-two-lines ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar List (Dense)</h4>\n  <ino-list ino-two-lines ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata</h4>\n  <ino-list ino-two-lines ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata (Dense)</h4>\n  <ino-list ino-two-lines ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Example - Two-line Avatar + Text + Icon</h4>\n  <ino-list ino-two-lines ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n      <ino-icon slot="ino-trailing" class="ino-list-item__icon" ino-icon="info"></ino-icon>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n      <ino-icon slot="ino-trailing" class="ino-list-item__icon" ino-icon="info"></ino-icon>\n    </ino-list-item>\n  </ino-list>\n</div>\n`;\n\nListItemVariants.decorators = [withStencilReadme(listItemReadme)];\n\nexport const ListDivider = () => /*html*/ `\n<div class="story-list">\n  <h4>Divider to seperate list items</h4>\n  <ino-list>\n    <ino-list-item ino-text="Item 1"></ino-list-item>\n    <ino-list-item ino-text="Item 2"></ino-list-item>\n    <ino-list-divider></ino-list-divider>\n    <ino-list-item ino-text="Item 3"></ino-list-item>\n  </ino-list>\n\n  <h4>Divider to separate two lists</h4>\n  <ino-list class="divider-two-lists">\n    <ino-list-item ino-text="List 1 - item 1"></ino-list-item>\n    <ino-list-item ino-text="List 1 - item 2"></ino-list-item>\n    <ino-list-item ino-text="List 1 - item 3"></ino-list-item>\n  </ino-list>\n  <ino-list-divider ino-between-lists></ino-list-divider>\n  <ino-list class="divider-two-lists">\n    <ino-list-item ino-text="List 2 - item 1"></ino-list-item>\n    <ino-list-item ino-text="List 2 - item 2"></ino-list-item>\n    <ino-list-item ino-text="List 2 - item 3"></ino-list-item>\n  </ino-list>\n\n  <h4>Inset divider</h4>\n  <ino-list>\n    <ino-list-item ino-text="Add to favorites">\n      <ino-icon slot="ino-leading" ino-icon="favorite"></ino-icon>\n    </ino-list-item>\n    <ino-list-divider ino-inset></ino-list-divider>\n    <ino-list-item ino-text="Star it!">\n      <ino-icon slot="ino-leading" ino-icon="star"></ino-icon>\n    </ino-list-item>\n  </ino-list>\n</div>\n`;\n\nListDivider.decorators = [withStencilReadme(listDividerReadme)];\n\nexport const ControlItem = () => /*html*/ `\n<div class="story-list">\n  <h4>Default checkbox/radio item</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" checked ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <ino-list class="first-densed-list">\n    <ino-control-item name="group" ino-role="radio" name="group-8" ino-text="First text item"> </ino-control-item>\n    <ino-control-item name="group" ino-role="radio" name="group-8" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Different checkbox/radio items</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="First text item"><ino-icon ino-icon="add"></ino-icon></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="First text item"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-9" ino-trailing ino-text="First text item"><ino-icon ino-icon="add"></ino-icon></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-9" ino-text="First text item"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-9" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Trailing checkbox/radio items</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="First text item"></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-10" ino-trailing ino-text="First text item"></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-10" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Densed checkbox/radio item</h4>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="checkbox" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="radio" name="group-11" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-11" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Two lined checkbox/radio item</h4>\n  <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n   <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-12" ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-12" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n\n  <h4>Disabled checkbox/radio item</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-disabled ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-disabled ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-13" ino-disabled ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-13" ino-disabled ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Activated & selected checkbox/radio item</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-activated ino-text="Activated item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-selected ino-text="Selected item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-14" ino-activated ino-text="Activated item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-14" ino-selected ino-text="Selected item"></ino-control-item>\n  </ino-list>\n</div>\n`;\n\nControlItem.decorators = [withStencilReadme(listItemControlReadme)];\n\nexport const NavItem = () => /*html*/ `\n<style>\n  .customizable-nav-item {\n    --ino-nav-item-color: ${text(\n  \'--ino-nav-item-color\',\n  \'black\',\n  \'Custom Properties\'\n)};\n    --ino-nav-item-color-active: ${text(\n  \'--ino-nav-item-color-active\',\n  \'blue\',\n  \'Custom Properties\'\n)};\n    --ino-nav-item-background-color: ${text(\n  \'--ino-nav-item-background-color\',\n  \'#ffffff\',\n  \'Custom Properties\'\n)};\n    --ino-nav-item-background-color-active: ${text(\n  \'--ino-nav-item-background-color-active\',\n  \'#red\',\n  \'Custom Properties\'\n)};\n  }\n</style>\n<div class="story-list">\n  <h4>Customizable nav item</h4>\n  <ino-list>\n    <ino-nav-item\n      class="customizable-nav-item"\n      ino-text="${text(\'ino-text\', \'Nav item\')}"\n      ino-activated="${boolean(\'ino-activated\', false)}"\n      ino-disabled="${boolean(\'ino-disabled\', false)}"\n    >\n      <ino-icon ino-icon="onboarding" class="ino-list-item__icon"></ino-icon>\n    </ino-nav-item>\n  </ino-list>\n\n  <h4>States</h4>\n  <ino-list>\n    <ino-nav-item ino-text="Simple item"></ino-nav-item>\n    <ino-nav-item ino-text="Simple item 2"></ino-nav-item>\n    <ino-nav-item ino-activated ino-text="Activated item"></ino-nav-item>\n    <ino-nav-item ino-disabled ino-text="Disabled item"></ino-nav-item>\n  </ino-list>\n\n  <h4>Graphic</h4>\n  <ino-list>\n    <ino-nav-item ino-text="Lorem ipsum dolor sit">\n      <ino-icon ino-icon="onboarding" class="ino-list-item__icon"></ino-icon>\n    </ino-nav-item>\n    <ino-nav-item ino-text="Lorem ipsum dolor sit">\n      <ino-img src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-nav-item>\n  </ino-list>\n</div>\n`;\n\nNavItem.decorators = [withStencilReadme(navItemReadme)];\n',locationsMap:{"default-usage":{startLoc:{col:28,line:47},endLoc:{col:1,line:133},startBody:{col:28,line:47},endBody:{col:1,line:133}},"list-item":{startLoc:{col:24,line:137},endLoc:{col:1,line:192},startBody:{col:24,line:137},endBody:{col:1,line:192}},"list-item-variants":{startLoc:{col:32,line:196},endLoc:{col:1,line:432},startBody:{col:32,line:196},endBody:{col:1,line:432}},"list-divider":{startLoc:{col:27,line:436},endLoc:{col:1,line:470},startBody:{col:27,line:436},endBody:{col:1,line:470}},"control-item":{startLoc:{col:27,line:474},endLoc:{col:1,line:549},startBody:{col:27,line:474},endBody:{col:1,line:549}},"nav-item":{startLoc:{col:23,line:553},endLoc:{col:1,line:609},startBody:{col:23,line:553},endBody:{col:1,line:609}}}}),title:"Structure/<ino-list>",decorators:[function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target,tagName=el.tagName.toLowerCase();"ino-checkbox"!==tagName&&"ino-radio"!==tagName&&"ino-control-item"!==tagName||(el.setAttribute("checked",e.detail),"true"===el.getAttribute("indeterminate")&&el.setAttribute("indeterminate","false"))};return document.addEventListener("checkedChange",eventHandler),function(){document.removeEventListener("checkedChange",eventHandler)}}(),story()}]};var ino_list_stories_DefaultUsage=function DefaultUsage(){return'\n<div class="story-list">\n  <h4>Customizable List</h4>\n  <ino-list\n    ino-dense="'.concat(Object(dist.boolean)("ino-dense",!1),'"\n    ino-two-lines="').concat(Object(dist.boolean)("ino-two-lines",!1),'"\n    ino-avatar="').concat(Object(dist.boolean)("ino-avatar",!1),'"\n   >\n    <ino-list-item ino-text="First text item"></ino-list-item>\n    <ino-list-item ino-text="Second text item"></ino-list-item>\n    <ino-list-item ino-text="Third text item"></ino-list-item>\n  </ino-list>\n\n  <h4>Two lines</h4>\n  <ino-list ino-two-lines>\n    <ino-list-item ino-text="First text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Second text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Third text item" ino-secondary-text="Secondary"></ino-list-item>\n  </ino-list>\n\n  <h4>Densed</h4>\n  <ino-list ino-dense class="first-densed-list">\n    <ino-list-item ino-text="First text item"></ino-list-item>\n    <ino-list-item ino-text="Second text item"></ino-list-item>\n    <ino-list-item ino-text="Third text item"></ino-list-item>\n  </ino-list>\n  <ino-list ino-dense ino-two-lines class="first-densed-list">\n    <ino-list-item ino-text="First text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Second text item" ino-secondary-text="Secondary"></ino-list-item>\n    <ino-list-item ino-text="Third text item" ino-secondary-text="Secondary"></ino-list-item>\n  </ino-list>\n\n  <h4>Avatar</h4>\n  <ino-list ino-avatar class="first-densed-list">\n    <ino-list-item ino-text="First text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Second text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n  <ino-list ino-avatar ino-dense class="first-densed-list">\n    <ino-list-item ino-text="First text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Second text item">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n  <ino-list ino-avatar ino-two-lines class="first-densed-list">\n    <ino-list-item ino-text="First text item" ino-secondary-text="Secondary">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Second text item" ino-secondary-text="Secondary">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n  <h4>Checkbox</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="checkbox" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="checkbox" checked ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n\n  <h4>Radio Button</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-1" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-1" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="radio" name="group-2" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-2" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-3" checked ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-3" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n</div>\n')};ino_list_stories_DefaultUsage.decorators=[Object(with_stencil_readme.a)('# ino-list\n\nA component that displays a list of choices. It functions as a wrapper around the material [list](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) component.\n\nThis component is a composer to configure and wrap `list-item`s, `list-divider`s, `control-item`s and `nav-item`s.\n\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-list ino-dense ino-two-lines>\n  <ino-list-item ...></ino-list-item>\n  <ino-list-divider></ino-list-divider>\n  <ino-control-item ...></ino-control-item>\n  <ino-nav-item ...></ino-nav-item>\n</ino-list>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoListItem, InoList, InoImg } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoList inoAvatar>\n        <InoListItem inoText="First text item">\n          <InoImg\n            slot="ino-leading"\n            src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"\n            ino-ratio-width="1"\n            ino-ratio-height="1"\n          />\n        </InoListItem>\n        <InoListItem inoText="Second text item">\n          <InoImg\n            slot="ino-leading"\n            src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"\n            ino-ratio-width="1"\n            ino-ratio-height="1"\n          />\n        </InoListItem>\n      </InoList>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoListItem, InoList, InoImg } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst List: React.FunctionComponent<Components.InoListAttributes> = props => {\n  const { inoAvatar } = props;\n\n  return <InoList inoAvatar={inoAvatar}>{props.children}</InoList>;\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <List inoAvatar>\n        <InoListItem inoText="First text item">\n          <InoImg\n            slot="ino-leading"\n            src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"\n            ino-ratio-width="1"\n            ino-ratio-height="1"\n          />\n        </InoListItem>\n        <InoListItem inoText="Second text item">\n          <InoImg\n            slot="ino-leading"\n            src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"\n            ino-ratio-width="1"\n            ino-ratio-height="1"\n          />\n        </InoListItem>\n      </List>\n    );\n  }\n}\n```\n\n## Additional Hints\n\nProvide `ino-two-lines` to set propper style attributes for list items having a primary and secondary line.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute       | Description                                                                                                                        | Type      | Default     |\n| ------------- | --------------- | ---------------------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `inoAvatar`   | `ino-avatar`    | Configures the leading tiles of each row to display images instead of icons. This will make the graphics of the list items larger. | `boolean` | `false`     |\n| `inoDense`    | `ino-dense`     | Styles the list more dense, making it appear more compact.                                                                         | `boolean` | `undefined` |\n| `inoTwoLines` | `ino-two-lines` | Marks this element as list with items having two lines.                                                                            | `boolean` | `undefined` |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-menu](../ino-menu)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-menu --\x3e ino-list\n  style ino-list fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')];var ino_list_stories_ListItem=function ListItem(){return'\n<div class="story-list">\n  <h4>Customizable list item</h4>\n  <ino-list ino-two-lines="'.concat(Object(dist.boolean)("ino-two-lines (on ino-list)",!0),'">\n    <ino-list-item\n      ino-secondary-text="').concat(Object(dist.text)("ino-secondary-text","Second line text"),'"\n      ino-selected="').concat(Object(dist.boolean)("ino-selected",!1),'"\n      ino-activated="').concat(Object(dist.boolean)("ino-activated",!1),'"\n      ino-disabled="').concat(Object(dist.boolean)("ino-disabled",!1),'"\n      ino-text="').concat(Object(dist.text)("ino-text","List item"),'">\n    </ino-list-item>\n  </ino-list>\n\n  <h4>States</h4>\n  <ino-list>\n    <ino-list-item ino-text="Simple item"></ino-list-item>\n    <ino-list-item ino-selected ino-text="Selected item"></ino-list-item>\n    <ino-list-item ino-selected ino-text="Selected item 2"></ino-list-item>\n    <ino-list-item ino-text="Simple item 2"></ino-list-item>\n    <ino-list-item ino-activated ino-text="Activated item"></ino-list-item>\n    <ino-list-item ino-disabled ino-text="Disabled item"></ino-list-item>\n  </ino-list>\n\n\n\n  <h4>Graphic and Meta</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n  <h4>Primary and Leading Slot</h4>\n  <ino-list>\n    <ino-list-item>\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <a slot="ino-primary" href="">Link Element</a>\n    </ino-list-item>\n  </ino-list>\n\n  <h4>Two Lines with Primary and Secondary Slot</h4>\n  <ino-list ino-two-lines>\n    <ino-list-item>\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <a slot="ino-primary" href="">Primary Link Element</a>\n        <a slot="ino-secondary" href="">Secondary Link Element</a>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n</div>\n')};ino_list_stories_ListItem.decorators=[Object(with_stencil_readme.a)(ino_list_item_readme)];var ListItemVariants=function ListItemVariants(){return'\n<div class="story-list">\n  <h1>List item variants</h1>\n  <h4>Graphic</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Graphic (Dense)</h4>\n  <ino-list ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Icon with Text</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <ino-icon slot="ino-leading" class="ino-list-item__icon" ino-icon="star"></ino-icon>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <ino-icon slot="ino-leading" class="ino-list-item__icon" ino-icon="star"></ino-icon>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Leading Checkbox</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n  </ino-list>\n\n  <h4>Leading Radio-Button</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-4" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-4" ino-text="Lorem ipsum dolor sit"></ino-control-item>\n  </ino-list>\n\n\n  <h4>Avatar List</h4>\n  <ino-list ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar List (Dense)</h4>\n  <ino-list ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata</h4>\n  <ino-list>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata (Dense)</h4>\n  <ino-list ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n      <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Trailing Checkbox</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n  </ino-list>\n\n  <h4>Checkbox + Metadata</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n  </ino-list>\n\n  <h4>Checkbox + Metadata + Leading Icon</h4>\n  <ino-list>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n  </ino-list>\n\n  <h4>Trailing Radio-Button</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-5" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-5" ino-text="Lorem ipsum dolor sit" ino-trailing></ino-control-item>\n  </ino-list>\n\n  <h4>Radio-Button + Metadata</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-6" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-6" ino-text="Lorem ipsum dolor sit"><p>Some Text</p></ino-control-item>\n  </ino-list>\n\n  <h4>Radio-Button + Metadata + Leading Icon</h4>\n  <ino-list>\n    <ino-control-item ino-role="radio" name="group-7" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-7" ino-trailing ino-text="Lorem ipsum dolor sit"><ino-icon ino-icon="add" /></ino-control-item>\n  </ino-list>\n\n  <h4>Avatar + Metadata</h4>\n  <ino-list ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar + Metadata (Dense)</h4>\n  <ino-list ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit">\n        <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h2>Two-Line List</h2>\n\n\n  <h4>Graphic</h4>\n  <ino-list ino-two-lines>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Graphic (Dense)</h4>\n  <ino-list ino-two-lines ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar List</h4>\n  <ino-list ino-two-lines ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Avatar List (Dense)</h4>\n  <ino-list ino-two-lines ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata</h4>\n  <ino-list ino-two-lines ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Metadata (Dense)</h4>\n  <ino-list ino-two-lines ino-avatar ino-dense>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n        <p slot="ino-trailing">$10.00</p>\n    </ino-list-item>\n  </ino-list>\n\n\n  <h4>Example - Two-line Avatar + Text + Icon</h4>\n  <ino-list ino-two-lines ino-avatar>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n      <ino-icon slot="ino-trailing" class="ino-list-item__icon" ino-icon="info"></ino-icon>\n    </ino-list-item>\n    <ino-list-item ino-text="Lorem ipsum dolor sit" ino-secondary-text="Secondary Lorem ipsum dolor sit">\n      <ino-img slot="ino-leading" src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n      <ino-icon slot="ino-trailing" class="ino-list-item__icon" ino-icon="info"></ino-icon>\n    </ino-list-item>\n  </ino-list>\n</div>\n'};ListItemVariants.decorators=[Object(with_stencil_readme.a)(ino_list_item_readme)];var ListDivider=function ListDivider(){return'\n<div class="story-list">\n  <h4>Divider to seperate list items</h4>\n  <ino-list>\n    <ino-list-item ino-text="Item 1"></ino-list-item>\n    <ino-list-item ino-text="Item 2"></ino-list-item>\n    <ino-list-divider></ino-list-divider>\n    <ino-list-item ino-text="Item 3"></ino-list-item>\n  </ino-list>\n\n  <h4>Divider to separate two lists</h4>\n  <ino-list class="divider-two-lists">\n    <ino-list-item ino-text="List 1 - item 1"></ino-list-item>\n    <ino-list-item ino-text="List 1 - item 2"></ino-list-item>\n    <ino-list-item ino-text="List 1 - item 3"></ino-list-item>\n  </ino-list>\n  <ino-list-divider ino-between-lists></ino-list-divider>\n  <ino-list class="divider-two-lists">\n    <ino-list-item ino-text="List 2 - item 1"></ino-list-item>\n    <ino-list-item ino-text="List 2 - item 2"></ino-list-item>\n    <ino-list-item ino-text="List 2 - item 3"></ino-list-item>\n  </ino-list>\n\n  <h4>Inset divider</h4>\n  <ino-list>\n    <ino-list-item ino-text="Add to favorites">\n      <ino-icon slot="ino-leading" ino-icon="favorite"></ino-icon>\n    </ino-list-item>\n    <ino-list-divider ino-inset></ino-list-divider>\n    <ino-list-item ino-text="Star it!">\n      <ino-icon slot="ino-leading" ino-icon="star"></ino-icon>\n    </ino-list-item>\n  </ino-list>\n</div>\n'};ListDivider.decorators=[Object(with_stencil_readme.a)("# ino-list-divider\n\nA list divider component that either divides two lists or list items. It functions as a wrapper around the material [list divider](https://github.com/material-components/material-components-web/blob/master/packages/mdc-divider/) capabilities.\n\nThis component is used as child of `ino-list` and `ino-menu` components.\n\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-list-divder\n  ino-between-lists\n  ino-inset\n  ino-padded\n>\n</ino-list-divider>\n```\n\n**Divide lists:** By default, a `ino-list-divider` sepeartes two `list-item` components. To split `ino-list` component itself, provide `ino-between-lists` (only available for `ino-list`).\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property          | Attribute           | Description                                                                                                                             | Type      | Default     |\n| ----------------- | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `inoBetweenLists` | `ino-between-lists` | Marks the divider as a separator between two `ino-list` instead of `ino-list-item` elements.                                            | `boolean` | `undefined` |\n| `inoInset`        | `ino-inset`         | Increases leading margin to match leading column in `ino-list-item`.  Only applicable if `inoBetweenList` is `false`.                   | `boolean` | `undefined` |\n| `inoPadded`       | `ino-padded`        | Increases margin on each side of the divider to match meta content in `ino-list-item`.  Only applicable if `inoBetweenList` is `false`. | `boolean` | `undefined` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n")];var ControlItem=function ControlItem(){return'\n<div class="story-list">\n  <h4>Default checkbox/radio item</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" checked ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <ino-list class="first-densed-list">\n    <ino-control-item name="group" ino-role="radio" name="group-8" ino-text="First text item"> </ino-control-item>\n    <ino-control-item name="group" ino-role="radio" name="group-8" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Different checkbox/radio items</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="First text item"><ino-icon ino-icon="add"></ino-icon></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="First text item"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-9" ino-trailing ino-text="First text item"><ino-icon ino-icon="add"></ino-icon></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-9" ino-text="First text item"><p>Some Text</p></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-9" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Trailing checkbox/radio items</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="First text item"></ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-10" ino-trailing ino-text="First text item"></ino-control-item>\n    <ino-control-item ino-role="radio" name="group-10" ino-trailing ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Densed checkbox/radio item</h4>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="checkbox" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list" ino-dense>\n    <ino-control-item ino-role="radio" name="group-11" ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-11" ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Two lined checkbox/radio item</h4>\n  <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n   <ino-list ino-two-lines class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-12" ino-text="First text item" ino-secondary-text="Secondary Text"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-12" ino-text="Second text item" ino-secondary-text="Secondary Text"></ino-control-item>\n  </ino-list>\n\n  <h4>Disabled checkbox/radio item</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-disabled ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-disabled ino-text="Second text item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-13" ino-disabled ino-text="First text item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-13" ino-disabled ino-text="Second text item"></ino-control-item>\n  </ino-list>\n\n  <h4>Activated & selected checkbox/radio item</h4>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="checkbox" ino-activated ino-text="Activated item"> </ino-control-item>\n    <ino-control-item ino-role="checkbox" ino-selected ino-text="Selected item"></ino-control-item>\n  </ino-list>\n  <ino-list class="first-densed-list">\n    <ino-control-item ino-role="radio" name="group-14" ino-activated ino-text="Activated item"> </ino-control-item>\n    <ino-control-item ino-role="radio" name="group-14" ino-selected ino-text="Selected item"></ino-control-item>\n  </ino-list>\n</div>\n'};ControlItem.decorators=[Object(with_stencil_readme.a)('# ino-list-item\n\nA list item component that displays a single instance of choice in a list or menu with a control element (radio-button or checkbox). It functions as a wrapper around the material [list item](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) capabilities.\n\nThis component is used as child of `ino-list` and `ino-menu` components.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector(\'ino-control-item\')\n  .addEventListener(\'checkedChange\', e =>\n    console.log(\n      \'The element itself or the checkbox was clicked. Its new value is:\',\n      e.detail\n    )\n  );\n```\n\n```html\n<ino-control-item\n  ino-role="checkbox|radio"\n  checked="<boolean>"\n  ino-disabled="<boolean>"\n  name="<string>"\n  value="<string>"\n  ino-tab-index="<number>"\n  ino-id="<string>"\n  ino-activated\n  ino-text="<string>"\n  ino-secondary-text="<string>"\n  ino-selected="<boolean>"\n  indeterminate="<boolean>"\n  oncheckedchange="handleCheckChange()"\n  ino-trailing="<boolean>"\n>\n  ...\n</ino-control-item>\n```\n\n**Slot:** This component supports icons and text as children. Just declare your icon or text inside of the `ino-control-item`-Element and it will be placed according to the `ino-trailing`-Property.\n\n**Two lines:** For items having two lines, provide an `ino-secondary-text` and make sure you set the `ino-two-lines` attribute in the respective parent component (only available for `ino-list`).\n\n**Trailing:** Positions the control element at the end of the line\n\n### Restrictions\n\nPlease note that only text is supported as a trailing element. However, your icons can be placed at the leading position. To do so, use the `ino-trailing`-Property and declare your icon inside of the element as shown below.\n\n```html\n<ino-control-item\n  role="checkbox"\n  ino-trailing\n  ino-text="Checkbox-Item with a leading icon"\n>\n  <ino-icon ino-icon="add" />\n</ino-control-item>\n\n<ino-control-item\n  role="checkbox"\n  ino-text="Checkbox-Item with trailing metadata"\n>\n  <p>Some Metadata</p>\n</ino-control-item>\n```\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property               | Attribute            | Description                                                                                                                                         | Type                    | Default     |\n| ---------------------- | -------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------- | ----------- |\n| `checked`              | `checked`            | Marks this element as checked. (**unmanaged**)                                                                                                      | `boolean`               | `false`     |\n| `disabled`             | `disabled`           | Disables this element.                                                                                                                              | `boolean`               | `undefined` |\n| `indeterminate`        | `indeterminate`      | Marks this element as indeterminate (**unmanaged**) Checkbox only                                                                                   | `boolean`               | `undefined` |\n| `inoActivated`         | `ino-activated`      | Styles the row in an activated style.  In contrast to `inoSelected`, use this for only one item and to mark it as permantently activated.           | `boolean`               | `undefined` |\n| `inoDisabled`          | `ino-disabled`       | Styles the row in a disabled style.                                                                                                                 | `boolean`               | `undefined` |\n| `inoId`                | `ino-id`             | The id of this element.                                                                                                                             | `string`                | `undefined` |\n| `inoRole` _(required)_ | `ino-role`           | The type of control element                                                                                                                         | `"checkbox" \\| "radio"` | `undefined` |\n| `inoSecondaryText`     | `ino-secondary-text` | Sets the secondary text of this list item.  Requires `ino-two-lines` on the parent `ino-list` element.                                              | `string`                | `undefined` |\n| `inoSelected`          | `ino-selected`       | Styles the row in a selected style.  In contrast to `inoActivated`, use this option to select one or multiple items that are likely to change soon. | `boolean`               | `undefined` |\n| `inoText` _(required)_ | `ino-text`           | The primary text of this list item (required).                                                                                                      | `string`                | `undefined` |\n| `inoTrailing`          | `ino-trailing`       | Places the checkbox at the end of the item                                                                                                          | `boolean`               | `undefined` |\n| `name`                 | `name`               | The name of this element.                                                                                                                           | `string`                | `undefined` |\n| `value`                | `value`              | The value of this element.                                                                                                                          | `string`                | `undefined` |\n\n\n## Events\n\n| Event           | Description                                                                                                                     | Type               |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `checkedChange` | Emits when the user clicks on the checkbox or the list item to change the checked state. Contains the status in `event.detail`. | `CustomEvent<any>` |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-list-item](../ino-list-item)\n- [ino-checkbox](../ino-checkbox)\n- [ino-radio](../ino-radio)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-control-item --\x3e ino-list-item\n  ino-control-item --\x3e ino-checkbox\n  ino-control-item --\x3e ino-radio\n  style ino-control-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')];var ino_list_stories_NavItem=function NavItem(){return"\n<style>\n  .customizable-nav-item {\n    --ino-nav-item-color: ".concat(Object(dist.text)("--ino-nav-item-color","black","Custom Properties"),";\n    --ino-nav-item-color-active: ").concat(Object(dist.text)("--ino-nav-item-color-active","blue","Custom Properties"),";\n    --ino-nav-item-background-color: ").concat(Object(dist.text)("--ino-nav-item-background-color","#ffffff","Custom Properties"),";\n    --ino-nav-item-background-color-active: ").concat(Object(dist.text)("--ino-nav-item-background-color-active","#red","Custom Properties"),';\n  }\n</style>\n<div class="story-list">\n  <h4>Customizable nav item</h4>\n  <ino-list>\n    <ino-nav-item\n      class="customizable-nav-item"\n      ino-text="').concat(Object(dist.text)("ino-text","Nav item"),'"\n      ino-activated="').concat(Object(dist.boolean)("ino-activated",!1),'"\n      ino-disabled="').concat(Object(dist.boolean)("ino-disabled",!1),'"\n    >\n      <ino-icon ino-icon="onboarding" class="ino-list-item__icon"></ino-icon>\n    </ino-nav-item>\n  </ino-list>\n\n  <h4>States</h4>\n  <ino-list>\n    <ino-nav-item ino-text="Simple item"></ino-nav-item>\n    <ino-nav-item ino-text="Simple item 2"></ino-nav-item>\n    <ino-nav-item ino-activated ino-text="Activated item"></ino-nav-item>\n    <ino-nav-item ino-disabled ino-text="Disabled item"></ino-nav-item>\n  </ino-list>\n\n  <h4>Graphic</h4>\n  <ino-list>\n    <ino-nav-item ino-text="Lorem ipsum dolor sit">\n      <ino-icon ino-icon="onboarding" class="ino-list-item__icon"></ino-icon>\n    </ino-nav-item>\n    <ino-nav-item ino-text="Lorem ipsum dolor sit">\n      <ino-img src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n    </ino-nav-item>\n  </ino-list>\n</div>\n')};ino_list_stories_NavItem.decorators=[Object(with_stencil_readme.a)("# ino-nav-item\n\nA nav item component that displays a single instance of choice in a list or menu. It functions as a wrapper around the material [list item](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) capabilities.\n\nThis component is used as child of `ino-list` and `ino-menu` components.\n\n> Note: This component's main use case is within the `ino-nav-drawer`.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector('ino-nav-item')\n  .addEventListener('clickEl', e =>\n    console.log(\n      'The new nav-item was clicked, the element itself is:',\n      e.detail\n    )\n  );\n```\n\n```html\n<ino-nav-item\n  ino-activated\n  ino-text=\"<string>\"\n  onclickel=\"handleClickEl()\"\n>\n  <ino-icon ...></ino-icon>\n</ino-nav-item>\n```\n**Default:** Add an item with the default slot to add a first column in the nav item in LTR languages. Typically an icon or image.\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property       | Attribute       | Description                                                                                                 | Type      | Default     |\n| -------------- | --------------- | ----------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `inoActivated` | `ino-activated` | Styles the row in an activated style.  Use this for only one item and to mark it as permantently activated. | `boolean` | `false`     |\n| `inoDisabled`  | `ino-disabled`  | Styles the row in a disabled style.                                                                         | `boolean` | `false`     |\n| `inoText`      | `ino-text`      | The text of this list item.                                                                                 | `string`  | `undefined` |\n\n\n## CSS Custom Properties\n\n| Name                                     | Description                                   |\n| ---------------------------------------- | --------------------------------------------- |\n| `--ino-nav-item-background-color`        | Inactive color of the background of one item. |\n| `--ino-nav-item-background-color-active` | Active color of the background of one item.   |\n| `--ino-nav-item-color`                   | Inactive color of icon.                       |\n| `--ino-nav-item-color-active`            | Active color of icon.                         |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-list-item](../ino-list-item)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-nav-item --\x3e ino-list-item\n  style ino-nav-item fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n")]},1338:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Angular",(function(){return framework_integration_stories_Angular})),__webpack_require__.d(__webpack_exports__,"React",(function(){return framework_integration_stories_React})),__webpack_require__.d(__webpack_exports__,"Vue",(function(){return framework_integration_stories_Vue})),__webpack_require__.d(__webpack_exports__,"JavaScript",(function(){return framework_integration_stories_JavaScript}));var markup=__webpack_require__(9);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import markup from \'_local-storybookcore/markup\';\\nimport setupAngularInstructions from \'_local-docs/framework-integration/angular-instructions.md\';\\nimport setupReactInstructions from \'_local-docs/framework-integration/react-instructions.md\';\\nimport setupVueInstructions from \'_local-docs/framework-integration/vue-instructions.md\';\\nimport setupJavaScriptInstructions from \'_local-docs/framework-integration/javascript-instructions.md\';\\n\\nexport default {\\n  title: \'Docs/Framework Integration\'\\n};\\n\\nexport const Angular = () => markup(setupAngularInstructions);\\nexport const React = () => markup(setupReactInstructions);\\nexport const Vue = () => markup(setupVueInstructions);\\nexport const JavaScript = () => markup(setupJavaScriptInstructions);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"Angular":{"startLoc":{"col":23,"line":11},"endLoc":{"col":61,"line":11},"startBody":{"col":23,"line":11},"endBody":{"col":61,"line":11}},"React":{"startLoc":{"col":21,"line":12},"endLoc":{"col":57,"line":12},"startBody":{"col":21,"line":12},"endBody":{"col":57,"line":12}},"Vue":{"startLoc":{"col":19,"line":13},"endLoc":{"col":53,"line":13},"startBody":{"col":19,"line":13},"endBody":{"col":53,"line":13}},"JavaScript":{"startLoc":{"col":26,"line":14},"endLoc":{"col":67,"line":14},"startBody":{"col":26,"line":14},"endBody":{"col":67,"line":14}}};\n    \nimport markup from \'_local-storybookcore/markup\';\nimport setupAngularInstructions from \'_local-docs/framework-integration/angular-instructions.md\';\nimport setupReactInstructions from \'_local-docs/framework-integration/react-instructions.md\';\nimport setupVueInstructions from \'_local-docs/framework-integration/vue-instructions.md\';\nimport setupJavaScriptInstructions from \'_local-docs/framework-integration/javascript-instructions.md\';\n\nexport default {parameters: {"storySource":{"source":"import markup from \'_local-storybookcore/markup\';\\nimport setupAngularInstructions from \'_local-docs/framework-integration/angular-instructions.md\';\\nimport setupReactInstructions from \'_local-docs/framework-integration/react-instructions.md\';\\nimport setupVueInstructions from \'_local-docs/framework-integration/vue-instructions.md\';\\nimport setupJavaScriptInstructions from \'_local-docs/framework-integration/javascript-instructions.md\';\\n\\nexport default {\\n  title: \'Docs/Framework Integration\'\\n};\\n\\nexport const Angular = () => markup(setupAngularInstructions);\\nexport const React = () => markup(setupReactInstructions);\\nexport const Vue = () => markup(setupVueInstructions);\\nexport const JavaScript = () => markup(setupJavaScriptInstructions);\\n","locationsMap":{"angular":{"startLoc":{"col":23,"line":11},"endLoc":{"col":61,"line":11},"startBody":{"col":23,"line":11},"endBody":{"col":61,"line":11}},"react":{"startLoc":{"col":21,"line":12},"endLoc":{"col":57,"line":12},"startBody":{"col":21,"line":12},"endBody":{"col":57,"line":12}},"vue":{"startLoc":{"col":19,"line":13},"endLoc":{"col":53,"line":13},"startBody":{"col":19,"line":13},"endBody":{"col":53,"line":13}},"java-script":{"startLoc":{"col":26,"line":14},"endLoc":{"col":67,"line":14},"startBody":{"col":26,"line":14},"endBody":{"col":67,"line":14}}}},},\n  title: \'Docs/Framework Integration\'\n};\n\nexport const Angular = () => markup(setupAngularInstructions);;\nexport const React = () => markup(setupReactInstructions);;\nexport const Vue = () => markup(setupVueInstructions);;\nexport const JavaScript = () => markup(setupJavaScriptInstructions);\n',locationsMap:{angular:{startLoc:{col:23,line:19},endLoc:{col:61,line:19},startBody:{col:23,line:19},endBody:{col:61,line:19}},react:{startLoc:{col:21,line:20},endLoc:{col:57,line:20},startBody:{col:21,line:20},endBody:{col:57,line:20}},vue:{startLoc:{col:19,line:21},endLoc:{col:53,line:21},startBody:{col:19,line:21},endBody:{col:53,line:21}},"java-script":{startLoc:{col:26,line:22},endLoc:{col:67,line:22},startBody:{col:26,line:22},endBody:{col:67,line:22}}}}},"storySource",{source:"import markup from '_local-storybookcore/markup';\nimport setupAngularInstructions from '_local-docs/framework-integration/angular-instructions.md';\nimport setupReactInstructions from '_local-docs/framework-integration/react-instructions.md';\nimport setupVueInstructions from '_local-docs/framework-integration/vue-instructions.md';\nimport setupJavaScriptInstructions from '_local-docs/framework-integration/javascript-instructions.md';\n\nexport default {\n  title: 'Docs/Framework Integration'\n};\n\nexport const Angular = () => markup(setupAngularInstructions);\nexport const React = () => markup(setupReactInstructions);\nexport const Vue = () => markup(setupVueInstructions);\nexport const JavaScript = () => markup(setupJavaScriptInstructions);\n",locationsMap:{angular:{startLoc:{col:23,line:11},endLoc:{col:61,line:11},startBody:{col:23,line:11},endBody:{col:61,line:11}},react:{startLoc:{col:21,line:12},endLoc:{col:57,line:12},startBody:{col:21,line:12},endBody:{col:57,line:12}},vue:{startLoc:{col:19,line:13},endLoc:{col:53,line:13},startBody:{col:19,line:13},endBody:{col:53,line:13}},"java-script":{startLoc:{col:26,line:14},endLoc:{col:67,line:14},startBody:{col:26,line:14},endBody:{col:67,line:14}}}}),title:"Docs/Framework Integration"};var framework_integration_stories_Angular=function Angular(){return Object(markup.a)("# Integrate with Angular\n\n> We set up a demo project with Angular CLI to show you how to integrate the components into a newly generated Angular\n> project. Scroll down to see the Stackblitz.\n>\n> These instructions are based on `angular@9.1.0` and [`angular-cli@9.1.0`](https://cli.angular.io/).\n\n## 0) Prepare your Project\n\nBefore using `@inovex.de/elements`, you should make sure that your current setup works and boots properly.\nIf this is the case, proceed to the next step.\n\n## 1) Install `@inovex.de/elements-angular`\n\nWe provide an integration layer package for Angular so that you can integrate the elements as an Angular library\ninto your Angular project. \n\nAdd the package `@inovex.de/elements-angular` to your project using `yarn` or `npm`:\n\n### Instructions for npm:\n\n```sh\n$ npm install @inovex.de/elements-angular --save\n```\n\n### Instructions for Yarn:\n\n```sh\n$ yarn add @inovex.de/elements-angular\n```\n\n### 2) Import the Module `InoElementsModule`\n\nThe components we provide in the Angular project are wrapped in Angular directives within an Angular library.\nAll the `@Input` properties and `@Output` events of our components are included. This allows your IDE\nand compiler to infer all the type information from the given interfaces, which is compulsive for code completion\nto work properly.\n\nTo use the inovex elements, you need to integrate the `InoElementsModule` into one of your App's\nmodules. The main module is usually called `AppModule`. If you have more than one module, you should\nintegrate the `InoElementsModule` into each module that is supposed to use the inovex elements. Alternatively,\n you can also integrate the components into a shared module. This way, you only need to import the components once \n (recommended).\n\nYou only need two lines of code to import the package and make it available in Angular:\n\n```typescript\n// src/app/app.module.ts\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { InoElementsModule } from '@inovex.de/elements-angular'; // <-- a) import our package\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    InoElementsModule // <-- b) make it available in Angular\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\n### 3) Use the Components\n\nAs the integration is completed, you can now use the components in your project in the same way you would use\nany other Angular directive.\n\nTo help you to get started, we created a [simple todo app](https://stackblitz.com/edit/ino-elements-angular-example?embed=1&file=index.js) for you to play around with.\n")},framework_integration_stories_React=function React(){return Object(markup.a)("# Integrate with React\n\nWe provide an integration layer package for React so that you can integrate the elements just like any other dependency\ninto your React project. The name of the package matches the name of the respective inovex element in PascalCase\n(e.g. `InoButton` for `ino-button`). \n\n> We set up a demo project with React to show you how to integrate the components into a newly generated React\n> project. Scroll down to see the Stackblitz.\n>\n> These instructions are based on `react@16.13.1` and [`create-react-app@3.4.1`](https://github.com/facebook/create-react-app).\n>\n> If you want to use TypeScript, please see instructions from the [Adding TypeScript Section on create-react-app.dev](https://facebook.github.io/create-react-app/docs/adding-typescript).\n\n## 0) Prepare your Project\n\nBefore using `@inovex.de/elements`, you should make sure that your current setup works and boots properly.\nIf this is the case, proceed to the next step.\n\n## 1) Install `@inovex.de/elements-react`\n\nAdd the package `@inovex.de/elements-react` to your project using `yarn` or `npm`:\n\n### Instructions for npm:\n\n```sh\n$ npm install @inovex.de/elements-react --save\n```\n\n### Instructions for Yarn:\n\n```sh\n$ yarn add @inovex.de/elements-react\n```\n\n### 2) Use the Components\n\n> A hint on the icons: The React integration layer automatically imports the icons. You don't have to import\n> them manually.\n\nAs the integration is now completed, you can use the components in your project in the same way you would use\nany other React component.\n\nTo help you to get started, we created a [simple todo app](https://stackblitz.com/edit/ino-elements-react-example?embed=1&file=index.js) for you to play around with.\n")},framework_integration_stories_Vue=function Vue(){return Object(markup.a)("# Integrate with Vue.js (as Web Components)\n\n> We set up a demo project with Vue.js to show you how to integrate the components into a newly generated Vue.js\n> project. Scroll down to see the Stackblitz.\n>\n> These instructions are based on `vue@2.6.11` and [`create-react-app@4.2.3`](https://cli.vuejs.org/).\n\n## 0) Prepare your Project\n\nBefore using `@inovex.de/elements`, you should make sure that your current setup works and boots properly.\nIf this is the case, proceed to the next step.\n\n## 1) Install `@inovex.de/elements`\n\n> Hint: We do not provide an integration package for Vue.js as we do for Angular and React.\n> Vue.js works out-of-the box with Web Components as Vue.js respects the DOM API standards.\n\nAdd the package `@inovex.de/elements` to your project using `yarn` or `npm`:\n\n### Instructions for npm:\n\n```sh\n$ npm install @inovex.de/elements --save\n```\n\n### Instructions for Yarn:\n\n```sh\n$ yarn add @inovex.de/elements\n```\n\n### 2) Prepare the Project\n\nBefore you start using the components, you need to prepare the project.\n\nOpen `src/main.js` and add the following code snippet somewhere on the first lines, to...\n\n- ... tell the Vue compiler to ignore Custom Elements starting with `ino-` during compilation (1)\n- ... define the Custom Elements (these are the inovex elements Web Components) (2)\n- ... import the icons (3, optional)\n\n```js\n// src/main.js\nimport { applyPolyfills, defineCustomElements } from '@inovex.de/elements/dist/loader';\nimport { addIcons } from '@inovex.de/elements/dist/collection/util/icons';\nimport { ICON_PATHS } from '@inovex.de/elements/dist/inovex-elements/icon-assets/SVG/index.esm.js';\n\naddIcons(ICON_PATHS); // 3 (only needed if you want to use our icons)\n\n// 1\nVue.config.ignoredElements = [\n  /^ino-/ // ignore all web components starting with \"ino-\"\n];\n\n// 2\napplyPolyfills().then(() => {\n  defineCustomElements();\n});\n```\n\n### 3) Use the Components\n\nYou can now use the components in your Vue.js project in the same way you would use any native HTML element.\n\nTo help you to get started, we created a [simple todo app](https://stackblitz.com/edit/ino-elements-vue-example?embed=1&file=index.js) for you to play around with.")},framework_integration_stories_JavaScript=function JavaScript(){return Object(markup.a)("# Integrate with JavaScript (as Web Components)\n\n> We set up a demo project to show you how to integrate the components into any website. Scroll down to see the Stackblitz.\n\n## 0) Prepare your Project\n\nBefore using `@inovex.de/elements`, you should make sure that your current setup works and boots properly.\nIf this is the case, proceed to the next step.\n\n## 1) Install or Integrate `@inovex.de/elements`\n\n> Hint: The components provided in this package work out-of-the box and are shipped with a preloader. You don't have to import the components manually as the preloader will lazy load the components you use. Hence, if you for instance only use `<ino-button>`, the loader only requests the portions of the package which are needed to render the button.\n\nThere are two ways to add the inovex elements to your project. Either by loading them via a `script` tag from a central server or by downloading them via npm and adding them to your build process. It is your choice whether you want to use a package manager or the `script` tag.\n\nThere are some rules of thumb if you don't know which option better suits your project.\n\nUse the `script` tag if...\n\n* ... you just want to play around with our elements.\n* ... you have a small website which doesn't use any library or framework.\n\nUse the npm package manager if...\n\n* ... you already started building a single page application.\n* ... you plan to migrate a static website to a single page application.\n* ... you plan to start a new project.\n\n### a) Install the Package\n\nAdd the package `@inovex.de/elements` to your project using `yarn` or `npm`:\n\n#### Instructions for npm:\n\n```sh\n$ npm install @inovex.de/elements --save\n```\n\n#### Instructions for Yarn:\n\n```sh\n$ yarn add @inovex.de/elements\n```\n\n### b) Integrate via script tag\n\n> Hint: As soon as we're open source, you have to add the links to [JSDlv](https://www.jsdelivr.com/)\n\nTo load the components at runtime, you need to insert the following code fragment. Make sure that the script tag is set on each web page the user can visit on your website. For most of the websites it should be sufficient to add the tag to the `index.html` file:\n\n\n```\n<script src=\"https://elements.inovex.io/dist/v1.0.0/inovex-elements.js\"><\/script>\n```\n\nBefore we proceed, we need to clarify what's going on here:\n\n#### Why don't we need a `type=\"module\"` / ES6 Module import?\n\nWe do not need this import because the bootstrap script within the provided scripts already contains two versions of an ES5 script bundle and an ES6 Module. Some browsers still use the old ES5 script and do not support the new ES6 module. In short: The browser will load the ES6 module, if supported. Otherwise it will fall back to the ES5 bundle. The ES6 Module allows you to write import statements inside of your web page's JavaScript code. Read more about [ES Modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules).\n\n#### I don't want to pin to a concrete version, do you provide a link to the latest release?\n\nYes, we provide a link to our latest release, but we strongly recommend to not use these links in production since the application can easily break at any time. It is a best practice to pin to a version number to ensure that the application does not break unexpectedly.\n\n> Things always break when you don't expect them to. Hence, we strongly recommend to pin to a specific version number.\n\nHowever, for testing purposes, and if you just want to play around with the elements, you can always replace the version number with `latest`:\n\n* `https://elements.inovex.io/dist/latest/inovex-elements.js`\n\n### 2) Use the Components\n\n> A hint on the icons: The elements loader automatically imports the icons. You don't have to import\n> them manually.\n\nYou can now use the components on your website in the same way as you would use any native HTML element. To help you to get started, we created a [simple todo app](https://stackblitz.com/edit/ino-elements-js-example?embed=1&file=index.js) for you to play around with.\n")}},1339:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters}));var client=__webpack_require__(167);var index_980f9855=__webpack_require__(172);!function(){if("undefined"!=typeof window&&void 0!==window.Reflect&&void 0!==window.customElements){var a=HTMLElement;window.HTMLElement=function(){return Reflect.construct(a,[],this.constructor)},HTMLElement.prototype=a.prototype,HTMLElement.prototype.constructor=HTMLElement,Object.setPrototypeOf(HTMLElement,a)}}();__webpack_require__(920);(function applyPolyfills(){var promises=[];if("undefined"!=typeof window){var win=window;win.customElements&&(!win.Element||win.Element.prototype.closest&&win.Element.prototype.matches&&win.Element.prototype.remove&&win.Element.prototype.getRootNode)||promises.push(__webpack_require__.e(9).then(__webpack_require__.t.bind(null,1439,7))),"function"==typeof Object.assign&&Object.entries&&Array.prototype.find&&Array.prototype.includes&&String.prototype.startsWith&&String.prototype.endsWith&&(!win.NodeList||win.NodeList.prototype.forEach)&&win.fetch&&function checkIfURLIsSupported(){try{var u=new URL("b","http://a");return u.pathname="c%20d","http://a/c%20d"===u.href&&u.searchParams}catch(e){return!1}}()&&"undefined"!=typeof WeakMap||promises.push(__webpack_require__.e(7).then(__webpack_require__.t.bind(null,1440,7)))}return Promise.all(promises)})().then((function(){!function defineCustomElements(win,options){Object(index_980f9855.b)().then((function(){return Object(index_980f9855.c)([["ino-snackbar",[[0,"ino-snackbar",{inoMessage:[1,"ino-message"],inoActionText:[1,"ino-action-text"],inoAlignment:[1,"ino-alignment"]}]]],["ino-control-item",[[4,"ino-control-item",{inoRole:[1,"ino-role"],inoId:[1,"ino-id"],inoText:[1,"ino-text"],inoSecondaryText:[1,"ino-secondary-text"],inoSelected:[4,"ino-selected"],inoActivated:[4,"ino-activated"],inoDisabled:[4,"ino-disabled"],checked:[4],disabled:[4],name:[1],value:[1],indeterminate:[4],inoTrailing:[4,"ino-trailing"]}]]],["ino-datepicker",[[0,"ino-datepicker",{autoFocus:[4,"autofocus"],disabled:[4],name:[1],required:[4],inoShowLabelHint:[4,"ino-show-label-hint"],value:[1],min:[1],max:[1],inoOutline:[4,"ino-outline"],inoLabel:[1,"ino-label"],inoHelper:[1,"ino-helper"],inoHelperPersistent:[4,"ino-helper-persistent"],inoHelperValidation:[4,"ino-helper-validation"],inoRange:[4,"ino-range"],inoDateFormat:[1,"ino-date-format"],inoDefaultDate:[1,"ino-default-date"],inoDefaultHour:[2,"ino-default-hour"],inoDefaultMinute:[2,"ino-default-minute"],inoTwelveHourTime:[4,"ino-twelve-hour-time"],inoType:[1,"ino-type"],minuteStep:[2,"minute-step"],hourStep:[2,"hour-step"],isInValid:[32]},[[0,"click","inoInputClickedHandler"],[0,"clickEl","inoIconClickedHandler"]]]]],["ino-fab-set",[[1,"ino-fab-set",{inoDialDirection:[1,"ino-dial-direction"],inoTopBottomLocation:[1,"ino-top-bottom-location"],inoLeftRightLocation:[1,"ino-left-right-location"],inoOpenDial:[4,"ino-open-dial"]}]]],["ino-input-file",[[0,"ino-input-file",{accept:[1],autoFocus:[4,"autofocus"],disabled:[4],multiple:[4],name:[1],required:[4],inoLabel:[1,"ino-label"]}]]],["ino-nav-drawer",[[1,"ino-nav-drawer",{inoOpen:[4,"ino-open"],inoAnchor:[1,"ino-anchor"],inoVariant:[1,"ino-variant"]}]]],["ino-card",[[4,"ino-card",{inoSelected:[4,"ino-selected"]}]]],["ino-chip",[[0,"ino-chip",{inoColorScheme:[1,"ino-color-scheme"],inoFill:[1,"ino-fill"],inoIcon:[1,"ino-icon"],inoLabel:[1,"ino-label"],inoValue:[1,"ino-value"],inoRemovable:[4,"ino-removable"],inoSelectable:[4,"ino-selectable"],inoSelected:[4,"ino-selected"]}]]],["ino-menu",[[4,"ino-menu",{inoFor:[1,"ino-for"],inoOpen:[4,"ino-open"]}]]],["ino-nav-item",[[4,"ino-nav-item",{inoText:[1,"ino-text"],inoActivated:[4,"ino-activated"],inoDisabled:[4,"ino-disabled"]}]]],["ino-option-group",[[4,"ino-option-group",{inoLabel:[1,"ino-label"]}]]],["ino-select",[[4,"ino-select",{disabled:[4],name:[1],required:[4],inoShowLabelHint:[4,"ino-show-label-hint"],inoLabel:[1,"ino-label"],inoOutline:[4,"ino-outline"],value:[1]},[[0,"MDCSelect:change","handleInput"]]]]],["ino-tab",[[0,"ino-tab",{inoIcon:[1,"ino-icon"],inoLabel:[1,"ino-label"],inoStacked:[4,"ino-stacked"],inoIndicatorContentWidth:[4,"ino-indicator-content-width"]}]]],["ino-textarea",[[0,"ino-textarea",{autoFocus:[4,"autofocus"],cols:[2],disabled:[4],maxlength:[2],minlength:[2],showCharacterCounter:[4,"show-character-counter"],name:[1],placeholder:[1],required:[4],inoShowLabelHint:[4,"ino-show-label-hint"],rows:[2],value:[1],autogrow:[4],inoLabel:[1,"ino-label"]},[[0,"change","handleInput"],[0,"input","handleNativeElement"]]]]],["ino-chip-set",[[4,"ino-chip-set",{inoType:[1,"ino-type"]}]]],["ino-dialog",[[1,"ino-dialog",{inoOpen:[4,"ino-open"]}]]],["ino-form-row",[[4,"ino-form-row",{inoLabel:[1,"ino-label"],inoMandatory:[4,"ino-mandatory"]}]]],["ino-header",[[1,"ino-header",{inoTitle:[1,"ino-title"]}]]],["ino-img",[[0,"ino-img",{alt:[1],decoding:[1],height:[2],sizes:[1],src:[1],srcset:[1],width:[2],usemap:[1],inoImgListItem:[4,"ino-img-list-item"],inoLabel:[1,"ino-label"],inoRatioWidth:[2,"ino-ratio-width"],inoRatioHeight:[2,"ino-ratio-height"],inoRounded:[4,"ino-rounded"],composedRatioHeight:[32]}]]],["ino-img-list",[[4,"ino-img-list",{inoMasonry:[4,"ino-masonry"],inoEncloseLabel:[4,"ino-enclose-label"]}]]],["ino-list-divider",[[0,"ino-list-divider",{inoBetweenLists:[4,"ino-between-lists"],inoPadded:[4,"ino-padded"],inoInset:[4,"ino-inset"]}]]],["ino-popover",[[4,"ino-popover",{inoPlacement:[1,"ino-placement"],inoFor:[1,"ino-for"],inoColorScheme:[1,"ino-color-scheme"],inoTrigger:[1,"ino-trigger"],getTippyInstance:[64]}]]],["ino-progress-bar",[[1,"ino-progress-bar",{inoBuffer:[2,"ino-buffer"],inoIndeterminate:[4,"ino-indeterminate"],inoLabel:[1,"ino-label"],inoReversed:[4,"ino-reversed"],inoProgress:[2,"ino-progress"]}]]],["ino-radio-group",[[1,"ino-radio-group",{value:[8]}]]],["ino-range",[[0,"ino-range",{inoDiscrete:[4,"ino-discrete"],inoMarkers:[4,"ino-markers"],name:[1],min:[2],max:[2],value:[2],disabled:[4],step:[2],inoColorScheme:[1,"ino-color-scheme"]}]]],["ino-segment-button",[[1,"ino-segment-button",{checked:[4],disabled:[4],inoDense:[4,"ino-dense"],name:[1],value:[1]}]]],["ino-segment-group",[[1,"ino-segment-group",{name:[1],value:[8]}]]],["ino-sidebar",[[1,"ino-sidebar",{inoAlignRight:[4,"ino-align-right"],inoOpen:[4,"ino-open"],name:[1]}]]],["ino-switch",[[4,"ino-switch",{checked:[4],disabled:[4],name:[1],inoColorScheme:[1,"ino-color-scheme"]}]]],["ino-tab-bar",[[4,"ino-tab-bar",{inoActiveTab:[2,"ino-active-tab"]}]]],["ino-table",[[1,"ino-table"]]],["ino-table-cell",[[4,"ino-table-cell",{inoNumeric:[4,"ino-numeric"]}]]],["ino-table-row",[[4,"ino-table-row",{inoHeaderRow:[4,"ino-header-row"],inoSelected:[4,"ino-selected"]}]]],["ino-fab",[[1,"ino-fab",{inoIcon:[1,"ino-icon"],inoLabel:[1,"ino-label"],inoExtended:[4,"ino-extended"],inoEdgePosition:[1,"ino-edge-position"],inoDisabled:[4,"ino-disabled"],inoMini:[4,"ino-mini"],inoTooltipPlacement:[1,"ino-tooltip-placement"]},[[0,"click","clickHandler"]]]]],["ino-input",[[4,"ino-input",{autocomplete:[1],autoFocus:[4,"auto-focus"],disabled:[4],min:[1],max:[1],maxlength:[2],step:[8],name:[1],pattern:[1],placeholder:[1],required:[4],size:[2],type:[1],value:[1],inoThousandsSeparator:[4,"ino-thousands-separator"],inoDecimalPlaces:[2,"ino-decimal-places"],inoUnit:[1,"ino-unit"],inoShowLabelHint:[4,"ino-show-label-hint"],inoOutline:[4,"ino-outline"],inoLabel:[1,"ino-label"],inoHelper:[1,"ino-helper"],inoHelperPersistent:[4,"ino-helper-persistent"],inoHelperValidation:[4,"ino-helper-validation"],inoHelperCharacterCounter:[4,"ino-helper-character-counter"],inoIconLeading:[4,"ino-icon-leading"],inoIconTrailing:[4,"ino-icon-trailing"],inoDataList:[1,"ino-data-list"],inoError:[4,"ino-error"],getInputElement:[64]},[[0,"focus","focusListener"],[0,"change","handleChange"],[0,"input","handleInput"]]]]],["ino-list",[[4,"ino-list",{inoDense:[4,"ino-dense"],inoTwoLines:[4,"ino-two-lines"],inoAvatar:[4,"ino-avatar"]}]]],["ino-option",[[4,"ino-option",{disabled:[4],selected:[4],value:[1]},[[0,"keydown","keydownHandler"]]]]],["ino-icon-button",[[0,"ino-icon-button",{autoFocus:[4,"autofocus"],disabled:[4],inoIcon:[1,"ino-icon"],inoColorScheme:[1,"ino-color-scheme"]},[[0,"click","clickHandler"]]]]],["ino-checkbox_2",[[1,"ino-checkbox",{checked:[4],disabled:[4],name:[1],value:[1],inoSelection:[4,"ino-selection"],indeterminate:[4]}],[1,"ino-radio",{checked:[4],disabled:[4],name:[1],value:[1]}]]],["ino-list-item",[[4,"ino-list-item",{inoText:[1,"ino-text"],inoSecondaryText:[1,"ino-secondary-text"],inoSelected:[4,"ino-selected"],inoActivated:[4,"ino-activated"],inoDisabled:[4,"ino-disabled"]},[[0,"click","clickHandler"]]]]],["ino-tooltip",[[0,"ino-tooltip",{inoColorScheme:[1,"ino-color-scheme"],inoPlacement:[1,"ino-placement"],inoFor:[1,"ino-for"],inoTrigger:[1,"ino-trigger"],inoLabel:[1,"ino-label"],getTippyInstance:[64]}]]],["ino-label",[[0,"ino-label",{inoOutline:[4,"ino-outline"],inoText:[1,"ino-text"],inoRequired:[4,"ino-required"],inoShowHint:[4,"ino-show-hint"],inoDisabled:[4,"ino-disabled"]}]]],["ino-button_2",[[1,"ino-button",{autoFocus:[4,"autofocus"],disabled:[4],name:[1],form:[1],type:[1],inoColorScheme:[1,"ino-color-scheme"],inoEdgeMirrored:[4,"ino-edge-mirrored"],inoFill:[1,"ino-fill"],inoFullWidth:[4,"ino-full-width"],inoIconLeading:[4,"ino-icon-leading"],inoIconTrailing:[4,"ino-icon-trailing"],inoDense:[4,"ino-dense"],inoLoading:[4,"ino-loading"]}],[0,"ino-spinner",{inoType:[1,"ino-type"],inoColorScheme:[1,"ino-color-scheme"],inoHeight:[2,"ino-height"],inoModal:[4,"ino-modal"],inoWidth:[2,"ino-width"]}]]],["ino-icon",[[1,"ino-icon",{inoIcon:[1,"ino-icon"],inoColorSecondary:[4,"ino-color-secondary"],inoClickable:[4,"ino-clickable"],src:[1],svgTitle:[1,"svg-title"],svgContent:[32]}]]]],options)}))}(window)})),Object(client.addDecorator)((function(storyFn){return'<div class="ino-story-composer">'.concat(storyFn(),"</div>")}));var parameters={options:{storySort:{order:["Docs",["Home","Framework Integration","Styleguide","Contributing"]]}}}},1340:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_select_stories_DefaultUsage})),__webpack_require__.d(__webpack_exports__,"Forms",(function(){return Forms})),__webpack_require__.d(__webpack_exports__,"SelectOptions",(function(){return ino_select_stories_SelectOptions})),__webpack_require__.d(__webpack_exports__,"OptionGroup",(function(){return OptionGroup}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1314);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Input/<ino-select>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-select/readme.md\';\\nimport optionComponentReadme from \'_local-elements/src/components/ino-option/readme.md\';\\nimport optionGroupComponentReadme from \'_local-elements/src/components/ino-option-group/readme.md\';\\n\\nimport \'./ino-select.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function(e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-select\') {\\n      return;\\n    }\\n\\n    el.setAttribute(\'value\', e.detail);\\n  };\\n\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-select>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'valueChange .customizable-select\', \'submit .form\']\\n    }\\n  },\\n  decorators: [\\n    story => {\\n      subscribeToComponentEvents();\\n      return story();\\n    }\\n  ]\\n};\\n\\nexport const DefaultUsage = () => {\\n  const optionsTemplate = /*html*/ `\\n    <ino-option value=\\"Option 1\\">Option 1</ino-option>\\n    <ino-option value=\\"Option 2\\">Option 2</ino-option>\\n    <ino-option value=\\"Option 3\\">Option 3</ino-option>\\n    <ino-option value=\\"Option 4\\">Option 4</ino-option>\\n    `;\\n\\n  return /*html*/ `\\n      <div class=\\"story-select\\">\\n        <ino-select class=\\"customizable-select\\"\\n          name=\\"${text(\'name\', \'select-1\')}\\"\\n          ino-outline=\\"${boolean(\'ino-outline\', false)}\\"\\n          ino-label=\\"${text(\'ino-label\', \'Customizable select\')}\\"\\n          required=\\"${boolean(\'required\', false)}\\"\\n          ino-show-label-hint=\\"${boolean(\'ino-show-label-hint\', false)}\\"\\n          value=\\"${text(\'value\', \'Option 1\')}\\"\\n        >\\n          ${optionsTemplate}\\n        </ino-select>\\n\\n        <ino-select ino-label=\\"Select with Groups\\">\\n            <ino-option-group ino-label=\\"My First Group\\">\\n                ${optionsTemplate}\\n            </ino-option-group>\\n            <ino-option-group ino-label=\\"My Second Group\\">\\n                <ino-option value=\\"Option 5\\">Option 5</ino-option>\\n                <ino-option value=\\"Option 6\\">Option 6</ino-option>\\n                <ino-option value=\\"Option 7\\">Option 7</ino-option>\\n                <ino-option value=\\"Option 8\\">Option 8</ino-option>\\n            </ino-option-group>\\n          </ino-select>\\n\\n        <ino-select style=\\"--select-height: 80px\\" ino-label=\\"Select with custom height\\">\\n          ${optionsTemplate}\\n        </ino-select>\\n\\n        <h4 class=\\"outline\\">Outlined</h4>\\n        <ino-select ino-outline>\\n          ${optionsTemplate}\\n          <ino-option value=\\"Option 5\\" selected>Option 5</ino-option>\\n        </ino-select>\\n\\n        <h4>Labels</h4>\\n        <ino-select>\\n          <ino-option value=\\"No Label\\" selected>No label</ino-option>\\n          ${optionsTemplate}\\n        </ino-select>\\n        <ino-select ino-label=\\"Floating label\\">\\n         <ino-option value=\\"Selected Option\\" selected>Selected Option</ino-option>\\n          ${optionsTemplate}\\n        </ino-select>\\n\\n        <ino-select ino-label=\\"Floating label outlined\\" ino-outline>\\n          <ino-option value=\\"Selected Option\\" selected>Selected Option</ino-option>\\n          ${optionsTemplate}\\n        </ino-select>\\n\\n        <h4>States</h4>\\n        <ino-select disabled ino-label=\\"Disabled select\\">\\n          <ino-option value=\\"Selected Option\\" selected>Selected Option</ino-option>\\n          ${optionsTemplate}\\n        </ino-select>\\n        <ino-select ino-label=\\"Select with disabled option\\">\\n          ${optionsTemplate}\\n          <ino-option value=\\"Disabled Option\\" disabled>Disabled Option</ino-option>\\n        </ino-select>\\n\\n        <ino-select required ino-label=\\"required select\\" ino-show-label-hint>\\n          ${optionsTemplate}\\n        </ino-select>\\n\\n        <ino-select ino-label=\\"optional select\\" ino-show-label-hint>\\n          ${optionsTemplate}\\n        </ino-select>\\n      </div>\\n    `;\\n};\\n\\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\\n\\n\\nexport const Forms = () => /*html*/ `\\n<div class=\\"story-select\\">\\n  <h4>Required</h4>\\n  <p>The form should not submit since no option is selected and the select is required.</p>\\n  <form class=\\"form\\" onSubmit=\\"alert(\'Form submitted\'); return false;\\">\\n      <ino-select ino-label=\\"Form select\\" required>\\n        <ino-option value=\\"Test\\">Test</ino-option>\\n      </ino-select>\\n      <ino-button type=\\"submit\\">Submit</ino-button>\\n  </form>\\n</div>\\n`;\\n\\nexport const SelectOptions = () => /*html*/ `\\n    <h4>Customizable option</h4>\\n    <ino-select ino-label=\\"Customizable option\\">\\n        <ino-option\\n            disabled=\\"${boolean(\'disabled\', false)}\\"\\n            selected=\\"${boolean(\'selected\', false)}\\"\\n            value=\\"${text(\'value\', \'Content\')}\\"\\n        >\\n            Content\\n        </ino-option>\\n    </ino-select>\\n\\n    <h4>Disabled option</h4>\\n    <ino-select ino-label=\\"Disabled option\\">\\n        <ino-option value=\\"Content\\" disabled>Content</ino-option>\\n    </ino-select>\\n\\n    <h4>Selected option</h4>\\n        <ino-select ino-label=\\"Selected option\\">\\n        <ino-option value=\\"Content\\" selected>Content</ino-option>\\n    </ino-select>\\n  `;\\n\\nSelectOptions.decorators = [withStencilReadme(optionComponentReadme)];\\n\\nexport const OptionGroup = () => /*html*/ `\\n    <h4>Option Group Example</h4>\\n    <ino-select ino-label=\\"Select with Groups\\">\\n      <ino-option-group ino-label=\\"My First Group\\">\\n          <ino-option value=\\"Option 1\\">Option 1</ino-option>\\n          <ino-option value=\\"Option 2\\">Option 2</ino-option>\\n          <ino-option value=\\"Option 3\\">Option 3</ino-option>\\n          <ino-option value=\\"Option 4\\">Option 4</ino-option>\\n      </ino-option-group>\\n      <ino-option-group ino-label=\\"My Second Group\\">\\n          <ino-option value=\\"Option 5\\">Option 5</ino-option>\\n          <ino-option value=\\"Option 6\\">Option 6</ino-option>\\n          <ino-option value=\\"Option 7\\">Option 7</ino-option>\\n          <ino-option value=\\"Option 8\\">Option 8</ino-option>\\n      </ino-option-group>\\n    </ino-select>\\n  `;\\n\\nOptionGroup.decorators = [withStencilReadme(optionGroupComponentReadme)];\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":47},"endLoc":{"col":1,"line":124},"startBody":{"col":28,"line":47},"endBody":{"col":1,"line":124}},"Forms":{"startLoc":{"col":21,"line":129},"endLoc":{"col":1,"line":140},"startBody":{"col":21,"line":129},"endBody":{"col":1,"line":140}},"SelectOptions":{"startLoc":{"col":29,"line":142},"endLoc":{"col":3,"line":163},"startBody":{"col":29,"line":142},"endBody":{"col":3,"line":163}},"OptionGroup":{"startLoc":{"col":27,"line":167},"endLoc":{"col":3,"line":183},"startBody":{"col":27,"line":167},"endBody":{"col":3,"line":183}}};\n    \nimport { boolean, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-select/readme.md\';\nimport optionComponentReadme from \'_local-elements/src/components/ino-option/readme.md\';\nimport optionGroupComponentReadme from \'_local-elements/src/components/ino-option-group/readme.md\';\n\nimport \'./ino-select.scss\';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function(e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-select\') {\n      return;\n    }\n\n    el.setAttribute(\'value\', e.detail);\n  };\n\n  document.addEventListener(\'valueChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'valueChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Input/<ino-select>\',\n  parameters: {"storySource":{"source":"import { boolean, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-select/readme.md\';\\nimport optionComponentReadme from \'_local-elements/src/components/ino-option/readme.md\';\\nimport optionGroupComponentReadme from \'_local-elements/src/components/ino-option-group/readme.md\';\\n\\nimport \'./ino-select.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function(e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-select\') {\\n      return;\\n    }\\n\\n    el.setAttribute(\'value\', e.detail);\\n  };\\n\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-select>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'valueChange .customizable-select\', \'submit .form\']\\n    }\\n  },\\n  decorators: [\\n    story => {\\n      subscribeToComponentEvents();\\n      return story();\\n    }\\n  ]\\n};\\n\\nexport const DefaultUsage = () => {\\n  const optionsTemplate = /*html*/ `\\n    <ino-option value=\\"Option 1\\">Option 1</ino-option>\\n    <ino-option value=\\"Option 2\\">Option 2</ino-option>\\n    <ino-option value=\\"Option 3\\">Option 3</ino-option>\\n    <ino-option value=\\"Option 4\\">Option 4</ino-option>\\n    `;\\n\\n  return /*html*/ `\\n      <div class=\\"story-select\\">\\n        <ino-select class=\\"customizable-select\\"\\n          name=\\"${text(\'name\', \'select-1\')}\\"\\n          ino-outline=\\"${boolean(\'ino-outline\', false)}\\"\\n          ino-label=\\"${text(\'ino-label\', \'Customizable select\')}\\"\\n          required=\\"${boolean(\'required\', false)}\\"\\n          ino-show-label-hint=\\"${boolean(\'ino-show-label-hint\', false)}\\"\\n          value=\\"${text(\'value\', \'Option 1\')}\\"\\n        >\\n          ${optionsTemplate}\\n        </ino-select>\\n\\n        <ino-select ino-label=\\"Select with Groups\\">\\n            <ino-option-group ino-label=\\"My First Group\\">\\n                ${optionsTemplate}\\n            </ino-option-group>\\n            <ino-option-group ino-label=\\"My Second Group\\">\\n                <ino-option value=\\"Option 5\\">Option 5</ino-option>\\n                <ino-option value=\\"Option 6\\">Option 6</ino-option>\\n                <ino-option value=\\"Option 7\\">Option 7</ino-option>\\n                <ino-option value=\\"Option 8\\">Option 8</ino-option>\\n            </ino-option-group>\\n          </ino-select>\\n\\n        <ino-select style=\\"--select-height: 80px\\" ino-label=\\"Select with custom height\\">\\n          ${optionsTemplate}\\n        </ino-select>\\n\\n        <h4 class=\\"outline\\">Outlined</h4>\\n        <ino-select ino-outline>\\n          ${optionsTemplate}\\n          <ino-option value=\\"Option 5\\" selected>Option 5</ino-option>\\n        </ino-select>\\n\\n        <h4>Labels</h4>\\n        <ino-select>\\n          <ino-option value=\\"No Label\\" selected>No label</ino-option>\\n          ${optionsTemplate}\\n        </ino-select>\\n        <ino-select ino-label=\\"Floating label\\">\\n         <ino-option value=\\"Selected Option\\" selected>Selected Option</ino-option>\\n          ${optionsTemplate}\\n        </ino-select>\\n\\n        <ino-select ino-label=\\"Floating label outlined\\" ino-outline>\\n          <ino-option value=\\"Selected Option\\" selected>Selected Option</ino-option>\\n          ${optionsTemplate}\\n        </ino-select>\\n\\n        <h4>States</h4>\\n        <ino-select disabled ino-label=\\"Disabled select\\">\\n          <ino-option value=\\"Selected Option\\" selected>Selected Option</ino-option>\\n          ${optionsTemplate}\\n        </ino-select>\\n        <ino-select ino-label=\\"Select with disabled option\\">\\n          ${optionsTemplate}\\n          <ino-option value=\\"Disabled Option\\" disabled>Disabled Option</ino-option>\\n        </ino-select>\\n\\n        <ino-select required ino-label=\\"required select\\" ino-show-label-hint>\\n          ${optionsTemplate}\\n        </ino-select>\\n\\n        <ino-select ino-label=\\"optional select\\" ino-show-label-hint>\\n          ${optionsTemplate}\\n        </ino-select>\\n      </div>\\n    `;\\n};\\n\\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\\n\\n\\nexport const Forms = () => /*html*/ `\\n<div class=\\"story-select\\">\\n  <h4>Required</h4>\\n  <p>The form should not submit since no option is selected and the select is required.</p>\\n  <form class=\\"form\\" onSubmit=\\"alert(\'Form submitted\'); return false;\\">\\n      <ino-select ino-label=\\"Form select\\" required>\\n        <ino-option value=\\"Test\\">Test</ino-option>\\n      </ino-select>\\n      <ino-button type=\\"submit\\">Submit</ino-button>\\n  </form>\\n</div>\\n`;\\n\\nexport const SelectOptions = () => /*html*/ `\\n    <h4>Customizable option</h4>\\n    <ino-select ino-label=\\"Customizable option\\">\\n        <ino-option\\n            disabled=\\"${boolean(\'disabled\', false)}\\"\\n            selected=\\"${boolean(\'selected\', false)}\\"\\n            value=\\"${text(\'value\', \'Content\')}\\"\\n        >\\n            Content\\n        </ino-option>\\n    </ino-select>\\n\\n    <h4>Disabled option</h4>\\n    <ino-select ino-label=\\"Disabled option\\">\\n        <ino-option value=\\"Content\\" disabled>Content</ino-option>\\n    </ino-select>\\n\\n    <h4>Selected option</h4>\\n        <ino-select ino-label=\\"Selected option\\">\\n        <ino-option value=\\"Content\\" selected>Content</ino-option>\\n    </ino-select>\\n  `;\\n\\nSelectOptions.decorators = [withStencilReadme(optionComponentReadme)];\\n\\nexport const OptionGroup = () => /*html*/ `\\n    <h4>Option Group Example</h4>\\n    <ino-select ino-label=\\"Select with Groups\\">\\n      <ino-option-group ino-label=\\"My First Group\\">\\n          <ino-option value=\\"Option 1\\">Option 1</ino-option>\\n          <ino-option value=\\"Option 2\\">Option 2</ino-option>\\n          <ino-option value=\\"Option 3\\">Option 3</ino-option>\\n          <ino-option value=\\"Option 4\\">Option 4</ino-option>\\n      </ino-option-group>\\n      <ino-option-group ino-label=\\"My Second Group\\">\\n          <ino-option value=\\"Option 5\\">Option 5</ino-option>\\n          <ino-option value=\\"Option 6\\">Option 6</ino-option>\\n          <ino-option value=\\"Option 7\\">Option 7</ino-option>\\n          <ino-option value=\\"Option 8\\">Option 8</ino-option>\\n      </ino-option-group>\\n    </ino-select>\\n  `;\\n\\nOptionGroup.decorators = [withStencilReadme(optionGroupComponentReadme)];\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":47},"endLoc":{"col":1,"line":124},"startBody":{"col":28,"line":47},"endBody":{"col":1,"line":124}},"forms":{"startLoc":{"col":21,"line":129},"endLoc":{"col":1,"line":140},"startBody":{"col":21,"line":129},"endBody":{"col":1,"line":140}},"select-options":{"startLoc":{"col":29,"line":142},"endLoc":{"col":3,"line":163},"startBody":{"col":29,"line":142},"endBody":{"col":3,"line":163}},"option-group":{"startLoc":{"col":27,"line":167},"endLoc":{"col":3,"line":183},"startBody":{"col":27,"line":167},"endBody":{"col":3,"line":183}}}},\n    actions: {\n      handles: [\'valueChange .customizable-select\', \'submit .form\']\n    }\n  },\n  decorators: [\n    story => {\n      subscribeToComponentEvents();\n      return story();\n    }\n  ]\n};\n\nexport const DefaultUsage = () => {\n  const optionsTemplate = /*html*/ `\n    <ino-option value="Option 1">Option 1</ino-option>\n    <ino-option value="Option 2">Option 2</ino-option>\n    <ino-option value="Option 3">Option 3</ino-option>\n    <ino-option value="Option 4">Option 4</ino-option>\n    `;\n\n  return /*html*/ `\n      <div class="story-select">\n        <ino-select class="customizable-select"\n          name="${text(\'name\', \'select-1\')}"\n          ino-outline="${boolean(\'ino-outline\', false)}"\n          ino-label="${text(\'ino-label\', \'Customizable select\')}"\n          required="${boolean(\'required\', false)}"\n          ino-show-label-hint="${boolean(\'ino-show-label-hint\', false)}"\n          value="${text(\'value\', \'Option 1\')}"\n        >\n          ${optionsTemplate}\n        </ino-select>\n\n        <ino-select ino-label="Select with Groups">\n            <ino-option-group ino-label="My First Group">\n                ${optionsTemplate}\n            </ino-option-group>\n            <ino-option-group ino-label="My Second Group">\n                <ino-option value="Option 5">Option 5</ino-option>\n                <ino-option value="Option 6">Option 6</ino-option>\n                <ino-option value="Option 7">Option 7</ino-option>\n                <ino-option value="Option 8">Option 8</ino-option>\n            </ino-option-group>\n          </ino-select>\n\n        <ino-select style="--select-height: 80px" ino-label="Select with custom height">\n          ${optionsTemplate}\n        </ino-select>\n\n        <h4 class="outline">Outlined</h4>\n        <ino-select ino-outline>\n          ${optionsTemplate}\n          <ino-option value="Option 5" selected>Option 5</ino-option>\n        </ino-select>\n\n        <h4>Labels</h4>\n        <ino-select>\n          <ino-option value="No Label" selected>No label</ino-option>\n          ${optionsTemplate}\n        </ino-select>\n        <ino-select ino-label="Floating label">\n         <ino-option value="Selected Option" selected>Selected Option</ino-option>\n          ${optionsTemplate}\n        </ino-select>\n\n        <ino-select ino-label="Floating label outlined" ino-outline>\n          <ino-option value="Selected Option" selected>Selected Option</ino-option>\n          ${optionsTemplate}\n        </ino-select>\n\n        <h4>States</h4>\n        <ino-select disabled ino-label="Disabled select">\n          <ino-option value="Selected Option" selected>Selected Option</ino-option>\n          ${optionsTemplate}\n        </ino-select>\n        <ino-select ino-label="Select with disabled option">\n          ${optionsTemplate}\n          <ino-option value="Disabled Option" disabled>Disabled Option</ino-option>\n        </ino-select>\n\n        <ino-select required ino-label="required select" ino-show-label-hint>\n          ${optionsTemplate}\n        </ino-select>\n\n        <ino-select ino-label="optional select" ino-show-label-hint>\n          ${optionsTemplate}\n        </ino-select>\n      </div>\n    `;\n};;\n\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\n\n\nexport const Forms = () => /*html*/ `\n<div class="story-select">\n  <h4>Required</h4>\n  <p>The form should not submit since no option is selected and the select is required.</p>\n  <form class="form" onSubmit="alert(\'Form submitted\'); return false;">\n      <ino-select ino-label="Form select" required>\n        <ino-option value="Test">Test</ino-option>\n      </ino-select>\n      <ino-button type="submit">Submit</ino-button>\n  </form>\n</div>\n`;;\n\nexport const SelectOptions = () => /*html*/ `\n    <h4>Customizable option</h4>\n    <ino-select ino-label="Customizable option">\n        <ino-option\n            disabled="${boolean(\'disabled\', false)}"\n            selected="${boolean(\'selected\', false)}"\n            value="${text(\'value\', \'Content\')}"\n        >\n            Content\n        </ino-option>\n    </ino-select>\n\n    <h4>Disabled option</h4>\n    <ino-select ino-label="Disabled option">\n        <ino-option value="Content" disabled>Content</ino-option>\n    </ino-select>\n\n    <h4>Selected option</h4>\n        <ino-select ino-label="Selected option">\n        <ino-option value="Content" selected>Content</ino-option>\n    </ino-select>\n  `;;\n\nSelectOptions.decorators = [withStencilReadme(optionComponentReadme)];\n\nexport const OptionGroup = () => /*html*/ `\n    <h4>Option Group Example</h4>\n    <ino-select ino-label="Select with Groups">\n      <ino-option-group ino-label="My First Group">\n          <ino-option value="Option 1">Option 1</ino-option>\n          <ino-option value="Option 2">Option 2</ino-option>\n          <ino-option value="Option 3">Option 3</ino-option>\n          <ino-option value="Option 4">Option 4</ino-option>\n      </ino-option-group>\n      <ino-option-group ino-label="My Second Group">\n          <ino-option value="Option 5">Option 5</ino-option>\n          <ino-option value="Option 6">Option 6</ino-option>\n          <ino-option value="Option 7">Option 7</ino-option>\n          <ino-option value="Option 8">Option 8</ino-option>\n      </ino-option-group>\n    </ino-select>\n  `;\n\nOptionGroup.decorators = [withStencilReadme(optionGroupComponentReadme)];\n',locationsMap:{"default-usage":{startLoc:{col:28,line:55},endLoc:{col:1,line:132},startBody:{col:28,line:55},endBody:{col:1,line:132}},forms:{startLoc:{col:21,line:137},endLoc:{col:1,line:148},startBody:{col:21,line:137},endBody:{col:1,line:148}},"select-options":{startLoc:{col:29,line:150},endLoc:{col:3,line:171},startBody:{col:29,line:150},endBody:{col:3,line:171}},"option-group":{startLoc:{col:27,line:175},endLoc:{col:3,line:191},startBody:{col:27,line:175},endBody:{col:3,line:191}}}}},_defineProperty(_parameters,"storySource",{source:'import { boolean, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-select/readme.md\';\nimport optionComponentReadme from \'_local-elements/src/components/ino-option/readme.md\';\nimport optionGroupComponentReadme from \'_local-elements/src/components/ino-option-group/readme.md\';\n\nimport \'./ino-select.scss\';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function(e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-select\') {\n      return;\n    }\n\n    el.setAttribute(\'value\', e.detail);\n  };\n\n  document.addEventListener(\'valueChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'valueChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Input/<ino-select>\',\n  parameters: {\n    actions: {\n      handles: [\'valueChange .customizable-select\', \'submit .form\']\n    }\n  },\n  decorators: [\n    story => {\n      subscribeToComponentEvents();\n      return story();\n    }\n  ]\n};\n\nexport const DefaultUsage = () => {\n  const optionsTemplate = /*html*/ `\n    <ino-option value="Option 1">Option 1</ino-option>\n    <ino-option value="Option 2">Option 2</ino-option>\n    <ino-option value="Option 3">Option 3</ino-option>\n    <ino-option value="Option 4">Option 4</ino-option>\n    `;\n\n  return /*html*/ `\n      <div class="story-select">\n        <ino-select class="customizable-select"\n          name="${text(\'name\', \'select-1\')}"\n          ino-outline="${boolean(\'ino-outline\', false)}"\n          ino-label="${text(\'ino-label\', \'Customizable select\')}"\n          required="${boolean(\'required\', false)}"\n          ino-show-label-hint="${boolean(\'ino-show-label-hint\', false)}"\n          value="${text(\'value\', \'Option 1\')}"\n        >\n          ${optionsTemplate}\n        </ino-select>\n\n        <ino-select ino-label="Select with Groups">\n            <ino-option-group ino-label="My First Group">\n                ${optionsTemplate}\n            </ino-option-group>\n            <ino-option-group ino-label="My Second Group">\n                <ino-option value="Option 5">Option 5</ino-option>\n                <ino-option value="Option 6">Option 6</ino-option>\n                <ino-option value="Option 7">Option 7</ino-option>\n                <ino-option value="Option 8">Option 8</ino-option>\n            </ino-option-group>\n          </ino-select>\n\n        <ino-select style="--select-height: 80px" ino-label="Select with custom height">\n          ${optionsTemplate}\n        </ino-select>\n\n        <h4 class="outline">Outlined</h4>\n        <ino-select ino-outline>\n          ${optionsTemplate}\n          <ino-option value="Option 5" selected>Option 5</ino-option>\n        </ino-select>\n\n        <h4>Labels</h4>\n        <ino-select>\n          <ino-option value="No Label" selected>No label</ino-option>\n          ${optionsTemplate}\n        </ino-select>\n        <ino-select ino-label="Floating label">\n         <ino-option value="Selected Option" selected>Selected Option</ino-option>\n          ${optionsTemplate}\n        </ino-select>\n\n        <ino-select ino-label="Floating label outlined" ino-outline>\n          <ino-option value="Selected Option" selected>Selected Option</ino-option>\n          ${optionsTemplate}\n        </ino-select>\n\n        <h4>States</h4>\n        <ino-select disabled ino-label="Disabled select">\n          <ino-option value="Selected Option" selected>Selected Option</ino-option>\n          ${optionsTemplate}\n        </ino-select>\n        <ino-select ino-label="Select with disabled option">\n          ${optionsTemplate}\n          <ino-option value="Disabled Option" disabled>Disabled Option</ino-option>\n        </ino-select>\n\n        <ino-select required ino-label="required select" ino-show-label-hint>\n          ${optionsTemplate}\n        </ino-select>\n\n        <ino-select ino-label="optional select" ino-show-label-hint>\n          ${optionsTemplate}\n        </ino-select>\n      </div>\n    `;\n};\n\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\n\n\nexport const Forms = () => /*html*/ `\n<div class="story-select">\n  <h4>Required</h4>\n  <p>The form should not submit since no option is selected and the select is required.</p>\n  <form class="form" onSubmit="alert(\'Form submitted\'); return false;">\n      <ino-select ino-label="Form select" required>\n        <ino-option value="Test">Test</ino-option>\n      </ino-select>\n      <ino-button type="submit">Submit</ino-button>\n  </form>\n</div>\n`;\n\nexport const SelectOptions = () => /*html*/ `\n    <h4>Customizable option</h4>\n    <ino-select ino-label="Customizable option">\n        <ino-option\n            disabled="${boolean(\'disabled\', false)}"\n            selected="${boolean(\'selected\', false)}"\n            value="${text(\'value\', \'Content\')}"\n        >\n            Content\n        </ino-option>\n    </ino-select>\n\n    <h4>Disabled option</h4>\n    <ino-select ino-label="Disabled option">\n        <ino-option value="Content" disabled>Content</ino-option>\n    </ino-select>\n\n    <h4>Selected option</h4>\n        <ino-select ino-label="Selected option">\n        <ino-option value="Content" selected>Content</ino-option>\n    </ino-select>\n  `;\n\nSelectOptions.decorators = [withStencilReadme(optionComponentReadme)];\n\nexport const OptionGroup = () => /*html*/ `\n    <h4>Option Group Example</h4>\n    <ino-select ino-label="Select with Groups">\n      <ino-option-group ino-label="My First Group">\n          <ino-option value="Option 1">Option 1</ino-option>\n          <ino-option value="Option 2">Option 2</ino-option>\n          <ino-option value="Option 3">Option 3</ino-option>\n          <ino-option value="Option 4">Option 4</ino-option>\n      </ino-option-group>\n      <ino-option-group ino-label="My Second Group">\n          <ino-option value="Option 5">Option 5</ino-option>\n          <ino-option value="Option 6">Option 6</ino-option>\n          <ino-option value="Option 7">Option 7</ino-option>\n          <ino-option value="Option 8">Option 8</ino-option>\n      </ino-option-group>\n    </ino-select>\n  `;\n\nOptionGroup.decorators = [withStencilReadme(optionGroupComponentReadme)];\n',locationsMap:{"default-usage":{startLoc:{col:28,line:47},endLoc:{col:1,line:124},startBody:{col:28,line:47},endBody:{col:1,line:124}},forms:{startLoc:{col:21,line:129},endLoc:{col:1,line:140},startBody:{col:21,line:129},endBody:{col:1,line:140}},"select-options":{startLoc:{col:29,line:142},endLoc:{col:3,line:163},startBody:{col:29,line:142},endBody:{col:3,line:163}},"option-group":{startLoc:{col:27,line:167},endLoc:{col:3,line:183},startBody:{col:27,line:167},endBody:{col:3,line:183}}}}),_defineProperty(_parameters,"actions",{handles:["valueChange .customizable-select","submit .form"]}),_parameters),decorators:[function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;"ino-select"===el.tagName.toLowerCase()&&el.setAttribute("value",e.detail)};return document.addEventListener("valueChange",eventHandler),function(){document.removeEventListener("valueChange",eventHandler)}}(),story()}]};var ino_select_stories_DefaultUsage=function DefaultUsage(){var optionsTemplate='\n    <ino-option value="Option 1">Option 1</ino-option>\n    <ino-option value="Option 2">Option 2</ino-option>\n    <ino-option value="Option 3">Option 3</ino-option>\n    <ino-option value="Option 4">Option 4</ino-option>\n    ';return'\n      <div class="story-select">\n        <ino-select class="customizable-select"\n          name="'.concat(Object(dist.text)("name","select-1"),'"\n          ino-outline="').concat(Object(dist.boolean)("ino-outline",!1),'"\n          ino-label="').concat(Object(dist.text)("ino-label","Customizable select"),'"\n          required="').concat(Object(dist.boolean)("required",!1),'"\n          ino-show-label-hint="').concat(Object(dist.boolean)("ino-show-label-hint",!1),'"\n          value="').concat(Object(dist.text)("value","Option 1"),'"\n        >\n          ').concat(optionsTemplate,'\n        </ino-select>\n\n        <ino-select ino-label="Select with Groups">\n            <ino-option-group ino-label="My First Group">\n                ').concat(optionsTemplate,'\n            </ino-option-group>\n            <ino-option-group ino-label="My Second Group">\n                <ino-option value="Option 5">Option 5</ino-option>\n                <ino-option value="Option 6">Option 6</ino-option>\n                <ino-option value="Option 7">Option 7</ino-option>\n                <ino-option value="Option 8">Option 8</ino-option>\n            </ino-option-group>\n          </ino-select>\n\n        <ino-select style="--select-height: 80px" ino-label="Select with custom height">\n          ').concat(optionsTemplate,'\n        </ino-select>\n\n        <h4 class="outline">Outlined</h4>\n        <ino-select ino-outline>\n          ').concat(optionsTemplate,'\n          <ino-option value="Option 5" selected>Option 5</ino-option>\n        </ino-select>\n\n        <h4>Labels</h4>\n        <ino-select>\n          <ino-option value="No Label" selected>No label</ino-option>\n          ').concat(optionsTemplate,'\n        </ino-select>\n        <ino-select ino-label="Floating label">\n         <ino-option value="Selected Option" selected>Selected Option</ino-option>\n          ').concat(optionsTemplate,'\n        </ino-select>\n\n        <ino-select ino-label="Floating label outlined" ino-outline>\n          <ino-option value="Selected Option" selected>Selected Option</ino-option>\n          ').concat(optionsTemplate,'\n        </ino-select>\n\n        <h4>States</h4>\n        <ino-select disabled ino-label="Disabled select">\n          <ino-option value="Selected Option" selected>Selected Option</ino-option>\n          ').concat(optionsTemplate,'\n        </ino-select>\n        <ino-select ino-label="Select with disabled option">\n          ').concat(optionsTemplate,'\n          <ino-option value="Disabled Option" disabled>Disabled Option</ino-option>\n        </ino-select>\n\n        <ino-select required ino-label="required select" ino-show-label-hint>\n          ').concat(optionsTemplate,'\n        </ino-select>\n\n        <ino-select ino-label="optional select" ino-show-label-hint>\n          ').concat(optionsTemplate,"\n        </ino-select>\n      </div>\n    ")};ino_select_stories_DefaultUsage.decorators=[Object(with_stencil_readme.a)("# ino-select\n\nA component providing single-option select menus. It functions as a wrapper around the material design's [select](https://github.com/material-components/material-components-web/tree/master/packages/mdc-select) component.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector('ino-select')\n  .addEventListener('valueChange', e =>\n    alert(`The new select value is: ${e.detail}`)\n  );\n```\n\n```html\n<ino-select\n  autofocus\n  disabled\n  name=\"<string>\"\n  required\n  value=\"<string>\"\n  ino-label=\"<string>\"\n  ino-outline\n>\n  <ino-option value=\"Option 1\">Option 1</ino-option> <ino-option value=\"Option 2\">Option 2</ino-option> ...\n</ino-select>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from 'react';\nimport { InoSelect, InoOption } from '@inovex.de/elements/dist/react';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoSelect; inoLabel=\"Form select\"; required>\n        <InoOption; value=\"Test\">Test</InoOption>\n      </InoSelect>;;\n    )\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from 'react';\nimport { InoSelect, InoOption } from '@inovex.de/elements/dist/react';\nimport { Components } from '@inovex.de/elements/dist/types/components';\n\nconst Select: React.FunctionComponent<Components.InoSelectAttributes> = props => {\n  const { inoLabel, required } = props;\n\n  return (\n    <InoSelect;\n      inoLabel={inoLabel};\n      required={required}\n    >\n      {props.children}\n    </InoSelect>;;\n  )\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <Select; inoLabel=\"Form select\"; required>\n        <InoOption; value=\"Test\">Test</InoOption>\n      </Select>;;\n    )\n  }\n}\n```\n\n## Additional Hints\n\nUse the custom `ino-option` component to add options to the select component. The `ino-label` attribute sets an optional floating label for this element.\n### Control flow\n\nThe select has a controlled (unmanaged) attribute `value`. For this reason, the value doesn't change on user interaction but on updates of `value`. Listen to `valueChange`, sync it with your local state and pass the new value to the component again to change value of select.\n\n```js\ndocument.querySelector('ino-select')\n  .addEventListener('valueChange', e => this.state.value = e.detail);\n```\n\n### Event Behaviour\n\nThe component behaves like a native select with additional features. The native `input'` is not bubbled. The component will emit a `valueChange` event if the value of the group changes.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute             | Description                                                                                                | Type      | Default     |\n| ------------------ | --------------------- | ---------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `disabled`         | `disabled`            | Disables this element.                                                                                     | `boolean` | `undefined` |\n| `inoLabel`         | `ino-label`           | The label of this element                                                                                  | `string`  | `undefined` |\n| `inoOutline`       | `ino-outline`         | Styles this select box as outlined element.                                                                | `boolean` | `undefined` |\n| `inoShowLabelHint` | `ino-show-label-hint` | If true, an *optional* message is displayed if not required, otherwise a * marker is displayed if required | `boolean` | `undefined` |\n| `name`             | `name`                | The name of this element.                                                                                  | `string`  | `undefined` |\n| `required`         | `required`            | Marks this element as required.                                                                            | `boolean` | `undefined` |\n| `value`            | `value`               | The value of this element. (**unmanaged**)                                                                 | `string`  | `''`        |\n\n\n## Events\n\n| Event         | Description                                                           | Type                  |\n| ------------- | --------------------------------------------------------------------- | --------------------- |\n| `valueChange` | Emits when a selection changes. Contains new value in `event.detail`. | `CustomEvent<string>` |\n\n\n## CSS Custom Properties\n\n| Name              | Description                    |\n| ----------------- | ------------------------------ |\n| `--select-height` | Height of the open select menu |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-label](../ino-label)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-select --\x3e ino-label\n  style ino-select fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n")];var Forms=function Forms(){return'\n<div class="story-select">\n  <h4>Required</h4>\n  <p>The form should not submit since no option is selected and the select is required.</p>\n  <form class="form" onSubmit="alert(\'Form submitted\'); return false;">\n      <ino-select ino-label="Form select" required>\n        <ino-option value="Test">Test</ino-option>\n      </ino-select>\n      <ino-button type="submit">Submit</ino-button>\n  </form>\n</div>\n'},ino_select_stories_SelectOptions=function SelectOptions(){return'\n    <h4>Customizable option</h4>\n    <ino-select ino-label="Customizable option">\n        <ino-option\n            disabled="'.concat(Object(dist.boolean)("disabled",!1),'"\n            selected="').concat(Object(dist.boolean)("selected",!1),'"\n            value="').concat(Object(dist.text)("value","Content"),'"\n        >\n            Content\n        </ino-option>\n    </ino-select>\n\n    <h4>Disabled option</h4>\n    <ino-select ino-label="Disabled option">\n        <ino-option value="Content" disabled>Content</ino-option>\n    </ino-select>\n\n    <h4>Selected option</h4>\n        <ino-select ino-label="Selected option">\n        <ino-option value="Content" selected>Content</ino-option>\n    </ino-select>\n  ')};ino_select_stories_SelectOptions.decorators=[Object(with_stencil_readme.a)('# ino-option\n\nAn option component that can be used to add options to an ino-select component.\n\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-option\n    disabled\n    selected\n    value="<string>"\n>\n   Content\n</ino-option>\n```\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property             | Attribute  | Description         | Type      | Default     |\n| -------------------- | ---------- | ------------------- | --------- | ----------- |\n| `disabled`           | `disabled` | Disables the option | `boolean` | `false`     |\n| `selected`           | `selected` | Selects the option  | `boolean` | `false`     |\n| `value` _(required)_ | `value`    | Value of the option | `string`  | `undefined` |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-option-group](../ino-option-group)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-option-group --\x3e ino-option\n  style ino-option fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')];var OptionGroup=function OptionGroup(){return'\n    <h4>Option Group Example</h4>\n    <ino-select ino-label="Select with Groups">\n      <ino-option-group ino-label="My First Group">\n          <ino-option value="Option 1">Option 1</ino-option>\n          <ino-option value="Option 2">Option 2</ino-option>\n          <ino-option value="Option 3">Option 3</ino-option>\n          <ino-option value="Option 4">Option 4</ino-option>\n      </ino-option-group>\n      <ino-option-group ino-label="My Second Group">\n          <ino-option value="Option 5">Option 5</ino-option>\n          <ino-option value="Option 6">Option 6</ino-option>\n          <ino-option value="Option 7">Option 7</ino-option>\n          <ino-option value="Option 8">Option 8</ino-option>\n      </ino-option-group>\n    </ino-select>\n  '};OptionGroup.decorators=[Object(with_stencil_readme.a)('# ino-option-group\nA wrapper component to be used for a group of ino-options. This component adds a non-selectable header before the options.\n\nBeyond that, if you encounter problems using React or Vue in conjunction with the `ino-select`, use this component as a wrapper around your `ino-option`. This way the virtual DOM will know when to update the `ino-select` and its children, which may otherwise not work properly if the options are added dynamically while deeply nested in the `ino-select\'. For more information refer to [this issue](https://github.com/ionic-team/stencil/issues/2259).\n\n### Usage\n\n```html\n<ino-select>\n    <ino-option-group ino-label="My First Option Group">\n      <ino-option value="Option 1">Option 1</ino-option>\n      <ino-option value="Option 2">Option 2</ino-option>\n      <ino-option value="Option 3">Option 3</ino-option>\n    </ino-option-group>\n    <ino-option-group ino-label="My Second Option Group">\n      <ino-option value="Option 4">Option 4</ino-option>\n      <ino-option value="Option 5">Option 5</ino-option>\n      <ino-option value="Option 6">Option 6</ino-option>\n    </ino-option-group>\n</ino-select>\n```\n\n### React\n\n#### Example\n\n```js\nimport { Component } from \'react\';\nimport { InoSelect, InoOption, InoOptionGroup } from \'@inovex.de/elements-react/dist\';\n\nclass MyComponent extends Component {\n\n  state = {\n    selected: \'Option 1\'\n  } ;\n  \n  changeHandler = (value) => {\n    this.setState({selected: value});\n  };\n\n  render() {\n    return (\n        <InoSelect inoLabel="My Select" value={this.state.selected} onValueChange={() => this.changeHandler(e.detail)}>\n          <InoOptionGroup inoLabel={"Option Group 1"}>\n              <InoOption value="Option 1">Option 1</InoOption>\n              <InoOption value="Option 2">Option 2</InoOption>\n          </InoOptionGroup>\n          <InoOptionGroup inoLabel={"Option Group 2"}>\n              <InoOption value="Option 3">Option 3</InoOption>\n              <InoOption value="Option 4">Option 4</InoOption>\n          </InoOptionGroup>\n        </InoSelect>\n    );\n  }\n}\n```\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property   | Attribute   | Description                                                                                                                                                                                                                                                               | Type     | Default     |\n| ---------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- | ----------- |\n| `inoLabel` | `ino-label` | Label of the group. If not set, this component serves as a wrapper component for dynamically added `ino-options`. When using react and vue, an issue exists with slots and the virtual DOM. Read more about it [here](https://github.com/ionic-team/stencil/issues/2259). | `string` | `undefined` |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-option](../ino-option)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-option-group --\x3e ino-option\n  style ino-option-group fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')]},1341:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return DefaultUsage})),__webpack_require__.d(__webpack_exports__,"InoTableRow",(function(){return InoTableRow})),__webpack_require__.d(__webpack_exports__,"InoTableCell",(function(){return InoTableCell}));var with_stencil_readme=__webpack_require__(2);__webpack_require__(1326);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import tableReadme from \'_local-elements/src/components/ino-table/readme.md\';\\nimport tableRowReadme from \'_local-elements/src/components/ino-table-row/readme.md\';\\nimport tableCellReadme from \'_local-elements/src/components/ino-table-cell/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport \'./ino-table.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const checkboxHandler = function(e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-checkbox\') {\\n      return;\\n    }\\n\\n    const row = el.closest(\'ino-table-row\');\\n    el.checked = !el.checked;\\n    row.inoSelected = el.checked;\\n    if (el.id === \'headerBox\') {\\n      el.indeterminate = false;\\n      setAllBoxes();\\n    } else {\\n      setHeaderBox();\\n    }\\n  };\\n\\n  const setAllBoxes = () => {\\n    const mainBox = document.getElementById(\'headerBox\');\\n    const boxes = Array.from(document.querySelectorAll(\'ino-checkbox:not(#headerBox)\'));\\n    boxes.forEach(i => {\\n      i.checked = mainBox.checked;\\n      i.closest(\'ino-table-row\').inoSelected = mainBox.checked;\\n    });\\n  };\\n\\n  const setHeaderBox = () => {\\n    const mainBox = document.getElementById(\'headerBox\');\\n    const boxes = Array.from(document.querySelectorAll(\'ino-checkbox:not(#headerBox)\'));\\n    if (boxes.every(i => i.checked)) {\\n      mainBox.checked = true;\\n      mainBox.indeterminate = false;\\n    } else if (boxes.some(i => i.checked)) {\\n      mainBox.indeterminate = true;\\n    } else {\\n      mainBox.checked = false;\\n      mainBox.indeterminate = false;\\n    }\\n  };\\n\\n  document.addEventListener(\'checkedChange\', checkboxHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'checkedChange\', checkboxHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-table>\',\\n\\n  decorators: [story => {\\n    subscribeToComponentEvents();\\n    return story();\\n  }]\\n};\\n\\nexport const DefaultUsage = () => /* html */`\\n    <h4>Data table example</h4>\\n    <ino-table>\\n        <ino-table-row slot=\\"header\\" ino-header-row>\\n            <ino-table-cell>ID</ino-table-cell>\\n            <ino-table-cell>Name</ino-table-cell>\\n            <ino-table-cell>Release Date</ino-table-cell>\\n            <ino-table-cell>Box Office</ino-table-cell>\\n            <ino-table-cell>Rating</ino-table-cell>\\n        </ino-table-row>\\n\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>1</ino-table-cell>\\n            <ino-table-cell>The Bourne Identity</ino-table-cell>\\n            <ino-table-cell>14.06.2002</ino-table-cell>\\n            <ino-table-cell>$214 million</ino-table-cell>\\n            <ino-table-cell>93%</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>2</ino-table-cell>\\n            <ino-table-cell>Sully</ino-table-cell>\\n            <ino-table-cell>09.09.2016</ino-table-cell>\\n            <ino-table-cell>$240.8 million</ino-table-cell>\\n            <ino-table-cell>84%</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>3</ino-table-cell>\\n            <ino-table-cell>The Martian</ino-table-cell>\\n            <ino-table-cell>02.10.2015</ino-table-cell>\\n            <ino-table-cell>$630.2 million</ino-table-cell>\\n            <ino-table-cell>94%</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>4</ino-table-cell>\\n            <ino-table-cell>John Wick: Chapter 3</ino-table-cell>\\n            <ino-table-cell>17.05.2019</ino-table-cell>\\n            <ino-table-cell>$326.7 million</ino-table-cell>\\n            <ino-table-cell>92%</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>5</ino-table-cell>\\n            <ino-table-cell>10 Cloverfield Lane</ino-table-cell>\\n            <ino-table-cell>11.03.2016</ino-table-cell>\\n            <ino-table-cell>$110.2 million</ino-table-cell>\\n            <ino-table-cell>87%</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>6</ino-table-cell>\\n            <ino-table-cell>Thor: Ragnarok</ino-table-cell>\\n            <ino-table-cell>10.10.2017</ino-table-cell>\\n            <ino-table-cell>$854 million</ino-table-cell>\\n            <ino-table-cell>92%</ino-table-cell>\\n        </ino-table-row>\\n    </ino-table>\\n\\n    <h4>With checkboxes</h4>\\n    <ino-table>\\n        <ino-table-row slot=\\"header\\" ino-header-row>\\n            <ino-table-cell><ino-checkbox id=\\"headerBox\\"></ino-checkbox></ino-table-cell>\\n            <ino-table-cell>Header A</ino-table-cell>\\n            <ino-table-cell>Header B</ino-table-cell>\\n            <ino-table-cell>Header C</ino-table-cell>\\n            <ino-table-cell>Header D</ino-table-cell>\\n            <ino-table-cell>Actions</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\\n            <ino-table-cell ino-numeric>1</ino-table-cell>\\n            <ino-table-cell>Cell B1</ino-table-cell>\\n            <ino-table-cell>Cell C1</ino-table-cell>\\n            <ino-table-cell>Cell D1</ino-table-cell>\\n            <ino-table-cell><ino-icon-button ino-icon=\\"download\\"></ino-icon-button></ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\\n            <ino-table-cell ino-numeric>2</ino-table-cell>\\n            <ino-table-cell>Cell B2</ino-table-cell>\\n            <ino-table-cell>Cell C2</ino-table-cell>\\n            <ino-table-cell>Cell D2</ino-table-cell>\\n            <ino-table-cell><ino-icon-button ino-icon=\\"download\\"></ino-icon-button></ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\\n            <ino-table-cell ino-numeric>3</ino-table-cell>\\n            <ino-table-cell>Cell B3</ino-table-cell>\\n            <ino-table-cell>Cell C3</ino-table-cell>\\n            <ino-table-cell>Cell D3</ino-table-cell>\\n            <ino-table-cell><ino-icon-button ino-icon=\\"download\\"></ino-icon-button></ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\\n            <ino-table-cell ino-numeric>4</ino-table-cell>\\n            <ino-table-cell>Cell B4</ino-table-cell>\\n            <ino-table-cell>Cell C4</ino-table-cell>\\n            <ino-table-cell>Cell D4</ino-table-cell>\\n            <ino-table-cell><ino-icon-button ino-icon=\\"download\\"></ino-icon-button></ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\\n            <ino-table-cell ino-numeric>5</ino-table-cell>\\n            <ino-table-cell>Cell B5</ino-table-cell>\\n            <ino-table-cell>Cell C5</ino-table-cell>\\n            <ino-table-cell>Cell D5</ino-table-cell>\\n            <ino-table-cell><ino-icon-button ino-icon=\\"download\\"></ino-icon-button></ino-table-cell>\\n        </ino-table-row>\\n    </ino-table>\\n  `;\\n\\nDefaultUsage.decorators = [withStencilReadme(tableReadme)];\\n\\n\\nexport const InoTableRow = () => /*html*/ ``;\\nInoTableRow.storyName = \'<ino-table-row>\';\\nInoTableRow.decorators = [withStencilReadme(tableRowReadme)];\\n\\nexport const InoTableCell = () => /*html*/ ``;\\nInoTableCell.storyName = \'<ino-table-cell>\';\\nInoTableCell.decorators = [withStencilReadme(tableCellReadme)];\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":67},"endLoc":{"col":3,"line":173},"startBody":{"col":28,"line":67},"endBody":{"col":3,"line":173}},"InoTableRow":{"startLoc":{"col":27,"line":178},"endLoc":{"col":44,"line":178},"startBody":{"col":27,"line":178},"endBody":{"col":44,"line":178}},"InoTableCell":{"startLoc":{"col":28,"line":182},"endLoc":{"col":45,"line":182},"startBody":{"col":28,"line":182},"endBody":{"col":45,"line":182}}};\n    \nimport tableReadme from \'_local-elements/src/components/ino-table/readme.md\';\nimport tableRowReadme from \'_local-elements/src/components/ino-table-row/readme.md\';\nimport tableCellReadme from \'_local-elements/src/components/ino-table-cell/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport \'./ino-table.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const checkboxHandler = function(e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-checkbox\') {\n      return;\n    }\n\n    const row = el.closest(\'ino-table-row\');\n    el.checked = !el.checked;\n    row.inoSelected = el.checked;\n    if (el.id === \'headerBox\') {\n      el.indeterminate = false;\n      setAllBoxes();\n    } else {\n      setHeaderBox();\n    }\n  };\n\n  const setAllBoxes = () => {\n    const mainBox = document.getElementById(\'headerBox\');\n    const boxes = Array.from(document.querySelectorAll(\'ino-checkbox:not(#headerBox)\'));\n    boxes.forEach(i => {\n      i.checked = mainBox.checked;\n      i.closest(\'ino-table-row\').inoSelected = mainBox.checked;\n    });\n  };\n\n  const setHeaderBox = () => {\n    const mainBox = document.getElementById(\'headerBox\');\n    const boxes = Array.from(document.querySelectorAll(\'ino-checkbox:not(#headerBox)\'));\n    if (boxes.every(i => i.checked)) {\n      mainBox.checked = true;\n      mainBox.indeterminate = false;\n    } else if (boxes.some(i => i.checked)) {\n      mainBox.indeterminate = true;\n    } else {\n      mainBox.checked = false;\n      mainBox.indeterminate = false;\n    }\n  };\n\n  document.addEventListener(\'checkedChange\', checkboxHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'checkedChange\', checkboxHandler);\n  };\n}\n\nexport default {parameters: {"storySource":{"source":"import tableReadme from \'_local-elements/src/components/ino-table/readme.md\';\\nimport tableRowReadme from \'_local-elements/src/components/ino-table-row/readme.md\';\\nimport tableCellReadme from \'_local-elements/src/components/ino-table-cell/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport \'./ino-table.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const checkboxHandler = function(e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-checkbox\') {\\n      return;\\n    }\\n\\n    const row = el.closest(\'ino-table-row\');\\n    el.checked = !el.checked;\\n    row.inoSelected = el.checked;\\n    if (el.id === \'headerBox\') {\\n      el.indeterminate = false;\\n      setAllBoxes();\\n    } else {\\n      setHeaderBox();\\n    }\\n  };\\n\\n  const setAllBoxes = () => {\\n    const mainBox = document.getElementById(\'headerBox\');\\n    const boxes = Array.from(document.querySelectorAll(\'ino-checkbox:not(#headerBox)\'));\\n    boxes.forEach(i => {\\n      i.checked = mainBox.checked;\\n      i.closest(\'ino-table-row\').inoSelected = mainBox.checked;\\n    });\\n  };\\n\\n  const setHeaderBox = () => {\\n    const mainBox = document.getElementById(\'headerBox\');\\n    const boxes = Array.from(document.querySelectorAll(\'ino-checkbox:not(#headerBox)\'));\\n    if (boxes.every(i => i.checked)) {\\n      mainBox.checked = true;\\n      mainBox.indeterminate = false;\\n    } else if (boxes.some(i => i.checked)) {\\n      mainBox.indeterminate = true;\\n    } else {\\n      mainBox.checked = false;\\n      mainBox.indeterminate = false;\\n    }\\n  };\\n\\n  document.addEventListener(\'checkedChange\', checkboxHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'checkedChange\', checkboxHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-table>\',\\n\\n  decorators: [story => {\\n    subscribeToComponentEvents();\\n    return story();\\n  }]\\n};\\n\\nexport const DefaultUsage = () => /* html */`\\n    <h4>Data table example</h4>\\n    <ino-table>\\n        <ino-table-row slot=\\"header\\" ino-header-row>\\n            <ino-table-cell>ID</ino-table-cell>\\n            <ino-table-cell>Name</ino-table-cell>\\n            <ino-table-cell>Release Date</ino-table-cell>\\n            <ino-table-cell>Box Office</ino-table-cell>\\n            <ino-table-cell>Rating</ino-table-cell>\\n        </ino-table-row>\\n\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>1</ino-table-cell>\\n            <ino-table-cell>The Bourne Identity</ino-table-cell>\\n            <ino-table-cell>14.06.2002</ino-table-cell>\\n            <ino-table-cell>$214 million</ino-table-cell>\\n            <ino-table-cell>93%</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>2</ino-table-cell>\\n            <ino-table-cell>Sully</ino-table-cell>\\n            <ino-table-cell>09.09.2016</ino-table-cell>\\n            <ino-table-cell>$240.8 million</ino-table-cell>\\n            <ino-table-cell>84%</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>3</ino-table-cell>\\n            <ino-table-cell>The Martian</ino-table-cell>\\n            <ino-table-cell>02.10.2015</ino-table-cell>\\n            <ino-table-cell>$630.2 million</ino-table-cell>\\n            <ino-table-cell>94%</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>4</ino-table-cell>\\n            <ino-table-cell>John Wick: Chapter 3</ino-table-cell>\\n            <ino-table-cell>17.05.2019</ino-table-cell>\\n            <ino-table-cell>$326.7 million</ino-table-cell>\\n            <ino-table-cell>92%</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>5</ino-table-cell>\\n            <ino-table-cell>10 Cloverfield Lane</ino-table-cell>\\n            <ino-table-cell>11.03.2016</ino-table-cell>\\n            <ino-table-cell>$110.2 million</ino-table-cell>\\n            <ino-table-cell>87%</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell ino-numeric>6</ino-table-cell>\\n            <ino-table-cell>Thor: Ragnarok</ino-table-cell>\\n            <ino-table-cell>10.10.2017</ino-table-cell>\\n            <ino-table-cell>$854 million</ino-table-cell>\\n            <ino-table-cell>92%</ino-table-cell>\\n        </ino-table-row>\\n    </ino-table>\\n\\n    <h4>With checkboxes</h4>\\n    <ino-table>\\n        <ino-table-row slot=\\"header\\" ino-header-row>\\n            <ino-table-cell><ino-checkbox id=\\"headerBox\\"></ino-checkbox></ino-table-cell>\\n            <ino-table-cell>Header A</ino-table-cell>\\n            <ino-table-cell>Header B</ino-table-cell>\\n            <ino-table-cell>Header C</ino-table-cell>\\n            <ino-table-cell>Header D</ino-table-cell>\\n            <ino-table-cell>Actions</ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\\n            <ino-table-cell ino-numeric>1</ino-table-cell>\\n            <ino-table-cell>Cell B1</ino-table-cell>\\n            <ino-table-cell>Cell C1</ino-table-cell>\\n            <ino-table-cell>Cell D1</ino-table-cell>\\n            <ino-table-cell><ino-icon-button ino-icon=\\"download\\"></ino-icon-button></ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\\n            <ino-table-cell ino-numeric>2</ino-table-cell>\\n            <ino-table-cell>Cell B2</ino-table-cell>\\n            <ino-table-cell>Cell C2</ino-table-cell>\\n            <ino-table-cell>Cell D2</ino-table-cell>\\n            <ino-table-cell><ino-icon-button ino-icon=\\"download\\"></ino-icon-button></ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\\n            <ino-table-cell ino-numeric>3</ino-table-cell>\\n            <ino-table-cell>Cell B3</ino-table-cell>\\n            <ino-table-cell>Cell C3</ino-table-cell>\\n            <ino-table-cell>Cell D3</ino-table-cell>\\n            <ino-table-cell><ino-icon-button ino-icon=\\"download\\"></ino-icon-button></ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\\n            <ino-table-cell ino-numeric>4</ino-table-cell>\\n            <ino-table-cell>Cell B4</ino-table-cell>\\n            <ino-table-cell>Cell C4</ino-table-cell>\\n            <ino-table-cell>Cell D4</ino-table-cell>\\n            <ino-table-cell><ino-icon-button ino-icon=\\"download\\"></ino-icon-button></ino-table-cell>\\n        </ino-table-row>\\n        <ino-table-row>\\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\\n            <ino-table-cell ino-numeric>5</ino-table-cell>\\n            <ino-table-cell>Cell B5</ino-table-cell>\\n            <ino-table-cell>Cell C5</ino-table-cell>\\n            <ino-table-cell>Cell D5</ino-table-cell>\\n            <ino-table-cell><ino-icon-button ino-icon=\\"download\\"></ino-icon-button></ino-table-cell>\\n        </ino-table-row>\\n    </ino-table>\\n  `;\\n\\nDefaultUsage.decorators = [withStencilReadme(tableReadme)];\\n\\n\\nexport const InoTableRow = () => /*html*/ ``;\\nInoTableRow.storyName = \'<ino-table-row>\';\\nInoTableRow.decorators = [withStencilReadme(tableRowReadme)];\\n\\nexport const InoTableCell = () => /*html*/ ``;\\nInoTableCell.storyName = \'<ino-table-cell>\';\\nInoTableCell.decorators = [withStencilReadme(tableCellReadme)];\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":67},"endLoc":{"col":3,"line":173},"startBody":{"col":28,"line":67},"endBody":{"col":3,"line":173}},"ino-table-row":{"startLoc":{"col":27,"line":178},"endLoc":{"col":44,"line":178},"startBody":{"col":27,"line":178},"endBody":{"col":44,"line":178}},"ino-table-cell":{"startLoc":{"col":28,"line":182},"endLoc":{"col":45,"line":182},"startBody":{"col":28,"line":182},"endBody":{"col":45,"line":182}}}},},\n  title: \'Structure/<ino-table>\',\n\n  decorators: [story => {\n    subscribeToComponentEvents();\n    return story();\n  }]\n};\n\nexport const DefaultUsage = () => /* html */`\n    <h4>Data table example</h4>\n    <ino-table>\n        <ino-table-row slot="header" ino-header-row>\n            <ino-table-cell>ID</ino-table-cell>\n            <ino-table-cell>Name</ino-table-cell>\n            <ino-table-cell>Release Date</ino-table-cell>\n            <ino-table-cell>Box Office</ino-table-cell>\n            <ino-table-cell>Rating</ino-table-cell>\n        </ino-table-row>\n\n        <ino-table-row>\n            <ino-table-cell ino-numeric>1</ino-table-cell>\n            <ino-table-cell>The Bourne Identity</ino-table-cell>\n            <ino-table-cell>14.06.2002</ino-table-cell>\n            <ino-table-cell>$214 million</ino-table-cell>\n            <ino-table-cell>93%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>2</ino-table-cell>\n            <ino-table-cell>Sully</ino-table-cell>\n            <ino-table-cell>09.09.2016</ino-table-cell>\n            <ino-table-cell>$240.8 million</ino-table-cell>\n            <ino-table-cell>84%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>3</ino-table-cell>\n            <ino-table-cell>The Martian</ino-table-cell>\n            <ino-table-cell>02.10.2015</ino-table-cell>\n            <ino-table-cell>$630.2 million</ino-table-cell>\n            <ino-table-cell>94%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>4</ino-table-cell>\n            <ino-table-cell>John Wick: Chapter 3</ino-table-cell>\n            <ino-table-cell>17.05.2019</ino-table-cell>\n            <ino-table-cell>$326.7 million</ino-table-cell>\n            <ino-table-cell>92%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>5</ino-table-cell>\n            <ino-table-cell>10 Cloverfield Lane</ino-table-cell>\n            <ino-table-cell>11.03.2016</ino-table-cell>\n            <ino-table-cell>$110.2 million</ino-table-cell>\n            <ino-table-cell>87%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>6</ino-table-cell>\n            <ino-table-cell>Thor: Ragnarok</ino-table-cell>\n            <ino-table-cell>10.10.2017</ino-table-cell>\n            <ino-table-cell>$854 million</ino-table-cell>\n            <ino-table-cell>92%</ino-table-cell>\n        </ino-table-row>\n    </ino-table>\n\n    <h4>With checkboxes</h4>\n    <ino-table>\n        <ino-table-row slot="header" ino-header-row>\n            <ino-table-cell><ino-checkbox id="headerBox"></ino-checkbox></ino-table-cell>\n            <ino-table-cell>Header A</ino-table-cell>\n            <ino-table-cell>Header B</ino-table-cell>\n            <ino-table-cell>Header C</ino-table-cell>\n            <ino-table-cell>Header D</ino-table-cell>\n            <ino-table-cell>Actions</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>1</ino-table-cell>\n            <ino-table-cell>Cell B1</ino-table-cell>\n            <ino-table-cell>Cell C1</ino-table-cell>\n            <ino-table-cell>Cell D1</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon="download"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>2</ino-table-cell>\n            <ino-table-cell>Cell B2</ino-table-cell>\n            <ino-table-cell>Cell C2</ino-table-cell>\n            <ino-table-cell>Cell D2</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon="download"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>3</ino-table-cell>\n            <ino-table-cell>Cell B3</ino-table-cell>\n            <ino-table-cell>Cell C3</ino-table-cell>\n            <ino-table-cell>Cell D3</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon="download"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>4</ino-table-cell>\n            <ino-table-cell>Cell B4</ino-table-cell>\n            <ino-table-cell>Cell C4</ino-table-cell>\n            <ino-table-cell>Cell D4</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon="download"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>5</ino-table-cell>\n            <ino-table-cell>Cell B5</ino-table-cell>\n            <ino-table-cell>Cell C5</ino-table-cell>\n            <ino-table-cell>Cell D5</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon="download"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n    </ino-table>\n  `;;\n\nDefaultUsage.decorators = [withStencilReadme(tableReadme)];\n\n\nexport const InoTableRow = () => /*html*/ ``;;\nInoTableRow.storyName = \'<ino-table-row>\';\nInoTableRow.decorators = [withStencilReadme(tableRowReadme)];\n\nexport const InoTableCell = () => /*html*/ ``;\nInoTableCell.storyName = \'<ino-table-cell>\';\nInoTableCell.decorators = [withStencilReadme(tableCellReadme)];\n',locationsMap:{"default-usage":{startLoc:{col:28,line:75},endLoc:{col:3,line:181},startBody:{col:28,line:75},endBody:{col:3,line:181}},"ino-table-row":{startLoc:{col:27,line:186},endLoc:{col:44,line:186},startBody:{col:27,line:186},endBody:{col:44,line:186}},"ino-table-cell":{startLoc:{col:28,line:190},endLoc:{col:45,line:190},startBody:{col:28,line:190},endBody:{col:45,line:190}}}}},"storySource",{source:"import tableReadme from '_local-elements/src/components/ino-table/readme.md';\nimport tableRowReadme from '_local-elements/src/components/ino-table-row/readme.md';\nimport tableCellReadme from '_local-elements/src/components/ino-table-cell/readme.md';\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\nimport './ino-table.scss';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const checkboxHandler = function(e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== 'ino-checkbox') {\n      return;\n    }\n\n    const row = el.closest('ino-table-row');\n    el.checked = !el.checked;\n    row.inoSelected = el.checked;\n    if (el.id === 'headerBox') {\n      el.indeterminate = false;\n      setAllBoxes();\n    } else {\n      setHeaderBox();\n    }\n  };\n\n  const setAllBoxes = () => {\n    const mainBox = document.getElementById('headerBox');\n    const boxes = Array.from(document.querySelectorAll('ino-checkbox:not(#headerBox)'));\n    boxes.forEach(i => {\n      i.checked = mainBox.checked;\n      i.closest('ino-table-row').inoSelected = mainBox.checked;\n    });\n  };\n\n  const setHeaderBox = () => {\n    const mainBox = document.getElementById('headerBox');\n    const boxes = Array.from(document.querySelectorAll('ino-checkbox:not(#headerBox)'));\n    if (boxes.every(i => i.checked)) {\n      mainBox.checked = true;\n      mainBox.indeterminate = false;\n    } else if (boxes.some(i => i.checked)) {\n      mainBox.indeterminate = true;\n    } else {\n      mainBox.checked = false;\n      mainBox.indeterminate = false;\n    }\n  };\n\n  document.addEventListener('checkedChange', checkboxHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('checkedChange', checkboxHandler);\n  };\n}\n\nexport default {\n  title: 'Structure/<ino-table>',\n\n  decorators: [story => {\n    subscribeToComponentEvents();\n    return story();\n  }]\n};\n\nexport const DefaultUsage = () => /* html */`\n    <h4>Data table example</h4>\n    <ino-table>\n        <ino-table-row slot=\"header\" ino-header-row>\n            <ino-table-cell>ID</ino-table-cell>\n            <ino-table-cell>Name</ino-table-cell>\n            <ino-table-cell>Release Date</ino-table-cell>\n            <ino-table-cell>Box Office</ino-table-cell>\n            <ino-table-cell>Rating</ino-table-cell>\n        </ino-table-row>\n\n        <ino-table-row>\n            <ino-table-cell ino-numeric>1</ino-table-cell>\n            <ino-table-cell>The Bourne Identity</ino-table-cell>\n            <ino-table-cell>14.06.2002</ino-table-cell>\n            <ino-table-cell>$214 million</ino-table-cell>\n            <ino-table-cell>93%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>2</ino-table-cell>\n            <ino-table-cell>Sully</ino-table-cell>\n            <ino-table-cell>09.09.2016</ino-table-cell>\n            <ino-table-cell>$240.8 million</ino-table-cell>\n            <ino-table-cell>84%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>3</ino-table-cell>\n            <ino-table-cell>The Martian</ino-table-cell>\n            <ino-table-cell>02.10.2015</ino-table-cell>\n            <ino-table-cell>$630.2 million</ino-table-cell>\n            <ino-table-cell>94%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>4</ino-table-cell>\n            <ino-table-cell>John Wick: Chapter 3</ino-table-cell>\n            <ino-table-cell>17.05.2019</ino-table-cell>\n            <ino-table-cell>$326.7 million</ino-table-cell>\n            <ino-table-cell>92%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>5</ino-table-cell>\n            <ino-table-cell>10 Cloverfield Lane</ino-table-cell>\n            <ino-table-cell>11.03.2016</ino-table-cell>\n            <ino-table-cell>$110.2 million</ino-table-cell>\n            <ino-table-cell>87%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>6</ino-table-cell>\n            <ino-table-cell>Thor: Ragnarok</ino-table-cell>\n            <ino-table-cell>10.10.2017</ino-table-cell>\n            <ino-table-cell>$854 million</ino-table-cell>\n            <ino-table-cell>92%</ino-table-cell>\n        </ino-table-row>\n    </ino-table>\n\n    <h4>With checkboxes</h4>\n    <ino-table>\n        <ino-table-row slot=\"header\" ino-header-row>\n            <ino-table-cell><ino-checkbox id=\"headerBox\"></ino-checkbox></ino-table-cell>\n            <ino-table-cell>Header A</ino-table-cell>\n            <ino-table-cell>Header B</ino-table-cell>\n            <ino-table-cell>Header C</ino-table-cell>\n            <ino-table-cell>Header D</ino-table-cell>\n            <ino-table-cell>Actions</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>1</ino-table-cell>\n            <ino-table-cell>Cell B1</ino-table-cell>\n            <ino-table-cell>Cell C1</ino-table-cell>\n            <ino-table-cell>Cell D1</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon=\"download\"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>2</ino-table-cell>\n            <ino-table-cell>Cell B2</ino-table-cell>\n            <ino-table-cell>Cell C2</ino-table-cell>\n            <ino-table-cell>Cell D2</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon=\"download\"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>3</ino-table-cell>\n            <ino-table-cell>Cell B3</ino-table-cell>\n            <ino-table-cell>Cell C3</ino-table-cell>\n            <ino-table-cell>Cell D3</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon=\"download\"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>4</ino-table-cell>\n            <ino-table-cell>Cell B4</ino-table-cell>\n            <ino-table-cell>Cell C4</ino-table-cell>\n            <ino-table-cell>Cell D4</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon=\"download\"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>5</ino-table-cell>\n            <ino-table-cell>Cell B5</ino-table-cell>\n            <ino-table-cell>Cell C5</ino-table-cell>\n            <ino-table-cell>Cell D5</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon=\"download\"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n    </ino-table>\n  `;\n\nDefaultUsage.decorators = [withStencilReadme(tableReadme)];\n\n\nexport const InoTableRow = () => /*html*/ ``;\nInoTableRow.storyName = '<ino-table-row>';\nInoTableRow.decorators = [withStencilReadme(tableRowReadme)];\n\nexport const InoTableCell = () => /*html*/ ``;\nInoTableCell.storyName = '<ino-table-cell>';\nInoTableCell.decorators = [withStencilReadme(tableCellReadme)];\n",locationsMap:{"default-usage":{startLoc:{col:28,line:67},endLoc:{col:3,line:173},startBody:{col:28,line:67},endBody:{col:3,line:173}},"ino-table-row":{startLoc:{col:27,line:178},endLoc:{col:44,line:178},startBody:{col:27,line:178},endBody:{col:44,line:178}},"ino-table-cell":{startLoc:{col:28,line:182},endLoc:{col:45,line:182},startBody:{col:28,line:182},endBody:{col:45,line:182}}}}),title:"Structure/<ino-table>",decorators:[function(story){return function subscribeToComponentEvents(){var checkboxHandler=function checkboxHandler(e){var el=e.target;if("ino-checkbox"===el.tagName.toLowerCase()){var row=el.closest("ino-table-row");el.checked=!el.checked,row.inoSelected=el.checked,"headerBox"===el.id?(el.indeterminate=!1,setAllBoxes()):setHeaderBox()}},setAllBoxes=function setAllBoxes(){var mainBox=document.getElementById("headerBox");Array.from(document.querySelectorAll("ino-checkbox:not(#headerBox)")).forEach((function(i){i.checked=mainBox.checked,i.closest("ino-table-row").inoSelected=mainBox.checked}))},setHeaderBox=function setHeaderBox(){var mainBox=document.getElementById("headerBox"),boxes=Array.from(document.querySelectorAll("ino-checkbox:not(#headerBox)"));boxes.every((function(i){return i.checked}))?(mainBox.checked=!0,mainBox.indeterminate=!1):boxes.some((function(i){return i.checked}))?mainBox.indeterminate=!0:(mainBox.checked=!1,mainBox.indeterminate=!1)};return document.addEventListener("checkedChange",checkboxHandler),function(){document.removeEventListener("checkedChange",checkboxHandler)}}(),story()}]};var DefaultUsage=function DefaultUsage(){return'\n    <h4>Data table example</h4>\n    <ino-table>\n        <ino-table-row slot="header" ino-header-row>\n            <ino-table-cell>ID</ino-table-cell>\n            <ino-table-cell>Name</ino-table-cell>\n            <ino-table-cell>Release Date</ino-table-cell>\n            <ino-table-cell>Box Office</ino-table-cell>\n            <ino-table-cell>Rating</ino-table-cell>\n        </ino-table-row>\n\n        <ino-table-row>\n            <ino-table-cell ino-numeric>1</ino-table-cell>\n            <ino-table-cell>The Bourne Identity</ino-table-cell>\n            <ino-table-cell>14.06.2002</ino-table-cell>\n            <ino-table-cell>$214 million</ino-table-cell>\n            <ino-table-cell>93%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>2</ino-table-cell>\n            <ino-table-cell>Sully</ino-table-cell>\n            <ino-table-cell>09.09.2016</ino-table-cell>\n            <ino-table-cell>$240.8 million</ino-table-cell>\n            <ino-table-cell>84%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>3</ino-table-cell>\n            <ino-table-cell>The Martian</ino-table-cell>\n            <ino-table-cell>02.10.2015</ino-table-cell>\n            <ino-table-cell>$630.2 million</ino-table-cell>\n            <ino-table-cell>94%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>4</ino-table-cell>\n            <ino-table-cell>John Wick: Chapter 3</ino-table-cell>\n            <ino-table-cell>17.05.2019</ino-table-cell>\n            <ino-table-cell>$326.7 million</ino-table-cell>\n            <ino-table-cell>92%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>5</ino-table-cell>\n            <ino-table-cell>10 Cloverfield Lane</ino-table-cell>\n            <ino-table-cell>11.03.2016</ino-table-cell>\n            <ino-table-cell>$110.2 million</ino-table-cell>\n            <ino-table-cell>87%</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell ino-numeric>6</ino-table-cell>\n            <ino-table-cell>Thor: Ragnarok</ino-table-cell>\n            <ino-table-cell>10.10.2017</ino-table-cell>\n            <ino-table-cell>$854 million</ino-table-cell>\n            <ino-table-cell>92%</ino-table-cell>\n        </ino-table-row>\n    </ino-table>\n\n    <h4>With checkboxes</h4>\n    <ino-table>\n        <ino-table-row slot="header" ino-header-row>\n            <ino-table-cell><ino-checkbox id="headerBox"></ino-checkbox></ino-table-cell>\n            <ino-table-cell>Header A</ino-table-cell>\n            <ino-table-cell>Header B</ino-table-cell>\n            <ino-table-cell>Header C</ino-table-cell>\n            <ino-table-cell>Header D</ino-table-cell>\n            <ino-table-cell>Actions</ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>1</ino-table-cell>\n            <ino-table-cell>Cell B1</ino-table-cell>\n            <ino-table-cell>Cell C1</ino-table-cell>\n            <ino-table-cell>Cell D1</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon="download"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>2</ino-table-cell>\n            <ino-table-cell>Cell B2</ino-table-cell>\n            <ino-table-cell>Cell C2</ino-table-cell>\n            <ino-table-cell>Cell D2</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon="download"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>3</ino-table-cell>\n            <ino-table-cell>Cell B3</ino-table-cell>\n            <ino-table-cell>Cell C3</ino-table-cell>\n            <ino-table-cell>Cell D3</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon="download"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>4</ino-table-cell>\n            <ino-table-cell>Cell B4</ino-table-cell>\n            <ino-table-cell>Cell C4</ino-table-cell>\n            <ino-table-cell>Cell D4</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon="download"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n        <ino-table-row>\n            <ino-table-cell><ino-checkbox></ino-checkbox></ino-table-cell>\n            <ino-table-cell ino-numeric>5</ino-table-cell>\n            <ino-table-cell>Cell B5</ino-table-cell>\n            <ino-table-cell>Cell C5</ino-table-cell>\n            <ino-table-cell>Cell D5</ino-table-cell>\n            <ino-table-cell><ino-icon-button ino-icon="download"></ino-icon-button></ino-table-cell>\n        </ino-table-row>\n    </ino-table>\n  '};DefaultUsage.decorators=[Object(with_stencil_readme.a)("# ino-table\n\nThe ino-table is a custom-built data table that can be used to display large sets of data across multiple columns and rows.\nThe component is based on the mdc-data-table.\n\n## Usage\n\nThe component is composed of multiple sub-components and can be used as follows:\n\n### Web Component\n\n```html\n<ino-table>\n    <ino-table-row slot=\"header\">\n        <ino-table-cell>Column A</ino-table-cell>\n        <ino-table-cell>Column B</ino-table-cell>\n    </ino-table-row>\n    <ino-table-row slot=\"body\">\n        <ino-table-cell>Cell A1</ino-table-cell>\n        <ino-table-cell>Cell B1</ino-table-cell>\n    </ino-table-row>\n    <ino-table-row slot=\"body\">\n        <ino-table-cell>Cell A2</ino-table-cell>\n        <ino-table-cell>Cell B2</ino-table-cell>\n    </ino-table-row>\n</ino-table>\n```\n\n### React\n\n```jsx harmony\nimport React from 'react';\nimport { Component } from 'react';\nimport { InoTable, InoTableRow, InoTableCell, InoButton } from '@inovex.de/elements/dist/react';\n\nclass MyComponent extends Component {\n\n  state = {\n    selected: false\n  };\n\n  handleEvent = () => {\n    this.setState((state) => ({\n      selected: !state.selected\n    }));\n  };\n\n  render() {\n      return (\n      <InoTable>\n        <InoTableRow selected={this.state.selected}>\n          <InoTableCell>\n            <InoButton onClick={this.handleEvent()}>Click Me</InoButton>\n          </InoTableCell>\n        </InoTableRow>\n      </InoTable>\n      );\n  }\n}\n```\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n")];var InoTableRow=function InoTableRow(){return""};InoTableRow.storyName="<ino-table-row>",InoTableRow.decorators=[Object(with_stencil_readme.a)("# ino-table-row\n\nThe ino-table-row component is a sub-component of the ino-table and it is mainly used to add additional data or \nheader rows to the table.\n\n## Usage\n\nThe component can be used as follows:\n\n```html\n<ino-table-row ino-header-row selected>\n    <ino-table-cell>Cell content</ino-table-cell>\n</ino-table-row>\n```\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property       | Attribute        | Description                                  | Type      | Default |\n| -------------- | ---------------- | -------------------------------------------- | --------- | ------- |\n| `inoHeaderRow` | `ino-header-row` | Indicates that the row is a header row       | `boolean` | `false` |\n| `inoSelected`  | `ino-selected`   | Indicates whether the row is selected or not | `boolean` | `false` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n")];var InoTableCell=function InoTableCell(){return""};InoTableCell.storyName="<ino-table-cell>",InoTableCell.decorators=[Object(with_stencil_readme.a)("# ino-table-cell\n\nThe ino-table-cell is a sub-component of the ino-table-row which in turn is a sub-component\nof the ino-table. Its main purpose is to add data or header cells to a corresponding data or header row.\n\n## Usage\n\nThe component can be used as follows:\n\n```html\n<ino-table-row ino-header-row>\n    <ino-table-cell ino-numeric>\n        1\n    </ino-table-cell>\n    <ino-table-cell>\n        Cell content\n    </ino-table-cell>\n</ino-table-row>\n```\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property     | Attribute     | Description                                     | Type      | Default |\n| ------------ | ------------- | ----------------------------------------------- | --------- | ------- |\n| `inoNumeric` | `ino-numeric` | Indicates that the cell contains numeric values | `boolean` | `false` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n")]},1342:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Welcome",(function(){return home_stories_Welcome})),__webpack_require__.d(__webpack_exports__,"Changelog",(function(){return home_stories_Changelog}));var markup=__webpack_require__(9);var componentVersion=__webpack_require__(1132).version,home_stories_Welcome=(__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import markup from \'_local-storybookcore/markup\';\\nimport welcome from \'_local-docs/welcome.md\';\\nimport changelog from \'_local-root/CHANGELOG.md\';\\n\\nconst componentVersion = require(\'_local-elements/package.json\').version\\n\\nexport default {\\n  title: \'Docs/Home\',\\n};\\n\\nexport const Welcome = () => markup(welcome.replace(/{ELEMENTS_VERSION}/g, `v${componentVersion}`));\\nexport const Changelog = () => markup(`# CHANGELOG \\\\n${changelog}`);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"Welcome":{"startLoc":{"col":23,"line":11},"endLoc":{"col":99,"line":11},"startBody":{"col":23,"line":11},"endBody":{"col":99,"line":11}},"Changelog":{"startLoc":{"col":25,"line":12},"endLoc":{"col":67,"line":12},"startBody":{"col":25,"line":12},"endBody":{"col":67,"line":12}}};\n    \nimport markup from \'_local-storybookcore/markup\';\nimport welcome from \'_local-docs/welcome.md\';\nimport changelog from \'_local-root/CHANGELOG.md\';\n\nconst componentVersion = require(\'_local-elements/package.json\').version\n\nexport default {parameters: {"storySource":{"source":"import markup from \'_local-storybookcore/markup\';\\nimport welcome from \'_local-docs/welcome.md\';\\nimport changelog from \'_local-root/CHANGELOG.md\';\\n\\nconst componentVersion = require(\'_local-elements/package.json\').version\\n\\nexport default {\\n  title: \'Docs/Home\',\\n};\\n\\nexport const Welcome = () => markup(welcome.replace(/{ELEMENTS_VERSION}/g, `v${componentVersion}`));\\nexport const Changelog = () => markup(`# CHANGELOG \\\\n${changelog}`);\\n","locationsMap":{"welcome":{"startLoc":{"col":23,"line":11},"endLoc":{"col":99,"line":11},"startBody":{"col":23,"line":11},"endBody":{"col":99,"line":11}},"changelog":{"startLoc":{"col":25,"line":12},"endLoc":{"col":67,"line":12},"startBody":{"col":25,"line":12},"endBody":{"col":67,"line":12}}}},},\n  title: \'Docs/Home\',\n};\n\nexport const Welcome = () => markup(welcome.replace(/{ELEMENTS_VERSION}/g, `v${componentVersion}`));;\nexport const Changelog = () => markup(`# CHANGELOG \\n${changelog}`);\n',locationsMap:{welcome:{startLoc:{col:23,line:19},endLoc:{col:99,line:19},startBody:{col:23,line:19},endBody:{col:99,line:19}},changelog:{startLoc:{col:25,line:20},endLoc:{col:67,line:20},startBody:{col:25,line:20},endBody:{col:67,line:20}}}}},"storySource",{source:"import markup from '_local-storybookcore/markup';\nimport welcome from '_local-docs/welcome.md';\nimport changelog from '_local-root/CHANGELOG.md';\n\nconst componentVersion = require('_local-elements/package.json').version\n\nexport default {\n  title: 'Docs/Home',\n};\n\nexport const Welcome = () => markup(welcome.replace(/{ELEMENTS_VERSION}/g, `v${componentVersion}`));\nexport const Changelog = () => markup(`# CHANGELOG \\n${changelog}`);\n",locationsMap:{welcome:{startLoc:{col:23,line:11},endLoc:{col:99,line:11},startBody:{col:23,line:11},endBody:{col:99,line:11}},changelog:{startLoc:{col:25,line:12},endLoc:{col:67,line:12},startBody:{col:25,line:12},endBody:{col:67,line:12}}}}),title:"Docs/Home"},function Welcome(){return Object(markup.a)('![inovex elements Logo](doc/assets/elements.svg "inovex elements Logo")\n\n# inovex elements {ELEMENTS_VERSION}\n\n> The last interoperable UI library for any framework.\n\nThis repository provides lovingly crafted components based on native Web Components as well as integration layers for the [Angular](https://github.com/angular) framework and the [React](https://github.com/facebook/react) library.\n\n## Why @inovex.de/elements?\n\nAs we all know, new frontends often go along with redundant tasks such as developing inputs, selects, or more complex elements like tooltips. Since the rise of web components has finally happened with native browser support in all major browsers, we take this opportunity to make all of our lives easier and provide a set of ready-to-use UI components.\n\nThis project provides a set of small and generic components that can be used in any project. The fundamental elements work great with major frameworks like Angular, React, Vue or any good old plain website without any complex framework.\n\nThe advantages are faster development cycles and fewer maintaining resources. The native elements are designed by inovex to match our brand, increase the consistency and decrease the redundancy of our projects. We decided to make the elements publicly available to allow others to use and contribute to our work.\n\n## Documentation\n\nYou can find all the information on how to use the elements in this Storybook. If you want to contribute, you\'re welcome to learn more in the [inovex elements README on Github](https://github.com/inovex/elements).\n'.replace(/{ELEMENTS_VERSION}/g,"v".concat(componentVersion)))}),home_stories_Changelog=function Changelog(){return Object(markup.a)("# CHANGELOG \n".concat("# Changelog\n### [1.0.2](https://github.com/inovex/elements/compare/v1.0.1...v1.0.2) (2020-09-22)\n\n### [1.0.1](https://github.com/inovex/elements/compare/v1.0.0...v1.0.1) (2020-09-22)\n\n\n### Bug Fixes\n\n* **storybook:** fix showcase urls ([#74](https://github.com/inovex/elements/issues/74)) ([60de0ff](https://github.com/inovex/elements/commit/60de0ffc3051d713d49cb07e4a00bc9de4cbf27a))\n\n## [1.0.0](https://github.com/inovex/elements/compare/v0.21.0...v1.0.0) (2020-09-16)\n\n\n### ⚠ BREAKING CHANGES\n\n* We changed the scopes of all our packages from `@inovex` to  `@inovex.de` in order to match our newly created NPM org. Unfortunately, `@inovex` was already taken. To use the inovex-elements beyond version 0.21.0, you have to change the scope in your dependencies from `@inovex/*` to `@inovex.de/*`. This way you will receive our new versions from the public registry of npmjs.\n* **elements|ino-button:** The API of the `<ino-button>` has changed. We've replaced the `ino-icon` property.\nIf you want to use an `ino-icon` inside of a button, use the `ino-icon-leading` or `ino-icon-trailing` property and provide the `<ino-icon>` element as a child of the `<ino-button>` with the slot being either `ino-icon-leading` or `ino-icon-trailing`. See the example below:\n\n    ```html\n    \x3c!-- Old --\x3e\n    <ino-button ino-icon=\"info\">Button with leading icon</ino-button>\n    \n    \x3c!-- New --\x3e\n    <ino-button ino-icon-leading>\n      <ino-icon ino-icon=\"info\" slot=\"ino-icon-leading\"></ino-icon>\n      Button with leading icon\n    </ino-button>\n    ```\n    \n    While this does seem like more work for the consumer, we implemented this change in order to have a consistent way of using the `<ino-icon>` in combination with our other components. These changes also offer much more flexibility in the use of the `<ino-icon>` as you can now utilize the whole API of the `<ino-icon>` component (e.g. using your own icons, providing your custom click handler, ...).\n* **elements:** The `tertiary` option for ino-color-scheme has been removed to match the colors specified by our design team\n\n### Features\n\n* **elements:** add component overview ([#68](https://github.com/inovex/elements/issues/68)) ([80c51b6](https://github.com/inovex/elements/commit/80c51b6084faaceaf904a12641d32ab90e802e3d))\n* **elements-react|ino-option-group:** use as vdom wrapper for ino-option ([#23](https://github.com/inovex/elements/issues/23)) ([9b96512](https://github.com/inovex/elements/commit/9b965120f91b12030eb63dc4a108b77ed32d9cd3))\n* **elements|ino-datepicker:** validate input based on date format ([#50](https://github.com/inovex/elements/issues/50)) ([ea4d288](https://github.com/inovex/elements/commit/ea4d2887f9d96777bf294ea66af8766511b7c505))\n* **elements|ino-dialog:** add dialog component ([da53a5a](https://github.com/inovex/elements/commit/da53a5a9c9f57a7fb7be91ced04c8a3db8c8ecc7))\n* **elements|ino-icon:** add report icon ([27d3ea5](https://github.com/inovex/elements/commit/27d3ea58664fdfc6fe4c740b59ddb2e94af8e143))\n* **elements|ino-input:** use native email validation ([#29](https://github.com/inovex/elements/issues/29)) ([6291bcb](https://github.com/inovex/elements/commit/6291bcbaa14466c8a2f14e757c8d47a3d7367b23))\n* **storybook:** display favicon in production storybook ([#19](https://github.com/inovex/elements/issues/19)) ([5423671](https://github.com/inovex/elements/commit/54236710264c7872f658c606459d16d5eebae24a))\n\n\n### Bug Fixes\n\n* **elements|ino-button:** fix invisible loading spinner ([#10](https://github.com/inovex/elements/issues/10)) ([50dd530](https://github.com/inovex/elements/commit/50dd5308226e68e53ac4268b7c11996eeedb80ef))\n* **elements|ino-fab-set:** remove blue bar below dial button ([#58](https://github.com/inovex/elements/issues/58)) ([c89f40f](https://github.com/inovex/elements/commit/c89f40fa24651e43d436a69ca52a6625f260de51))\n* **elements|ino-icon:** use correct css variable for special icons ([9b3cbe6](https://github.com/inovex/elements/commit/9b3cbe67df8a6d6abc40287178362cd52d6d5540))\n* **elements|ino-input:** fix too large number arrows ([#33](https://github.com/inovex/elements/issues/33)) ([c60e9a6](https://github.com/inovex/elements/commit/c60e9a67529f3826a7170e0f3dd16c6483a08ed2))\n* **elements|ino-select:** fix ellipsis for required selects in chrome ([#31](https://github.com/inovex/elements/issues/31)) ([47ee3b6](https://github.com/inovex/elements/commit/47ee3b660b54f380cc11dc03625d899980740d51))\n* **storybook|ino-img-list:** fix example images not loading in story ([#20](https://github.com/inovex/elements/issues/20)) ([5158e86](https://github.com/inovex/elements/commit/5158e86d3ae38c9a36f34c4b0af9f2a39054abc4))\n\n\n* **elements:** update style guide and colors according to the design specifications ([#7](https://github.com/inovex/elements/issues/7)) ([786c630](https://github.com/inovex/elements/commit/786c630b62cd2a9b0949afabd22af81a59e57192))\n\n\n### Miscellaneous\n\n* **storybook:** upgrade Storybook to v6 ([#51](https://github.com/inovex/elements/issues/51)) ([68b359c](https://github.com/inovex/elements/commit/68b359cdf6a8ca426b5fe08afd5b38215723468b))\n* add heading for refactor commit type ([#54](https://github.com/inovex/elements/issues/54)) ([c5e0bdc](https://github.com/inovex/elements/commit/c5e0bdc793f5a26bd82166475ecd27a17f99f9d9))\n* **elements|ino-icon:** remove icoMoon dependency ([#49](https://github.com/inovex/elements/issues/49)) ([aa05f5b](https://github.com/inovex/elements/commit/aa05f5b6e690ca6abe0d39be92061fd383163fd7))\n* ensure at least one semantic commit in PR ([#8](https://github.com/inovex/elements/issues/8)) ([72c71e3](https://github.com/inovex/elements/commit/72c71e3dfdbae620065567a258b5017b32dfee6c))\n* list additional commit types in generated changelogs ([#5](https://github.com/inovex/elements/issues/5)) ([7f7c7bf](https://github.com/inovex/elements/commit/7f7c7bff2cb4f795d7df30d3e0a86ffb12bef419))\n* update references to new repository in changelogs ([#16](https://github.com/inovex/elements/issues/16)) ([06f83f1](https://github.com/inovex/elements/commit/06f83f1acd0aef1cf5941766ebc17203648cda52))\n* update release workflow ([#13](https://github.com/inovex/elements/issues/13)) ([14b9578](https://github.com/inovex/elements/commit/14b9578fb437b2801a68e478007f581805ea34ef))\n* update repository references in packages ([#15](https://github.com/inovex/elements/issues/15)) ([2b38cc5](https://github.com/inovex/elements/commit/2b38cc51f5c76851f127b9618ed3fda475c351a6))\n* **storybook:** update storybook to 5.3.0 ([#9](https://github.com/inovex/elements/issues/9)) ([b8854a0](https://github.com/inovex/elements/commit/b8854a0c5b6cf20e67b45a9200e43a0158542a00))\n\n\n### Refactoring\n\n* change scope from (at)inovex to (at)inovex.de ([#66](https://github.com/inovex/elements/issues/66)) ([96186c2](https://github.com/inovex/elements/commit/96186c2b6f42eb202acf69cd7e0da6280b831864))\n* **elements|ino-button:** replace icon property with icon slot ([#28](https://github.com/inovex/elements/issues/28)) ([388ce17](https://github.com/inovex/elements/commit/388ce17df09e8adb8b9d2c7e3a8a7025223cb5f6))\n* **storybook:** remove deprecated addon-options ([#21](https://github.com/inovex/elements/issues/21)) ([ef27b02](https://github.com/inovex/elements/commit/ef27b02dadca41c2d635352f19b5cbae54db0b7c))\n\n\n### Documentation\n\n* add license file ([#11](https://github.com/inovex/elements/issues/11)) ([55a36a9](https://github.com/inovex/elements/commit/55a36a916c0ebbe1ef5576f3570f970a025a4c70))\n* add license to readme ([#53](https://github.com/inovex/elements/issues/53)) ([45b4e51](https://github.com/inovex/elements/commit/45b4e51bae5b6d6a78bcf8a61a11c78072dc326d))\n* link to github issues instead of jira ([#39](https://github.com/inovex/elements/issues/39)) ([5f2276d](https://github.com/inovex/elements/commit/5f2276d0ed5ba23a77395618cdb94ccc37ef0876))\n* move html content out of knob ([#6](https://github.com/inovex/elements/issues/6)) ([7380b34](https://github.com/inovex/elements/commit/7380b345d4529c360c02551c12730d49ec321f9b))\n* update all Gitlab occurrences ([#70](https://github.com/inovex/elements/issues/70)) ([2d58428](https://github.com/inovex/elements/commit/2d5842886ff5530e223b2d902d8fb296bc91c7eb))\n* update integration instructions ([#63](https://github.com/inovex/elements/issues/63)) ([e54f3b0](https://github.com/inovex/elements/commit/e54f3b096983fc6b954397c732cc1878c71bd0db))\n* update url's of storybook ([#12](https://github.com/inovex/elements/issues/12)) ([791c8da](https://github.com/inovex/elements/commit/791c8daed3e774b31fb41259bf1410176f63fdaa))\n* use self-hosted fonts ([#61](https://github.com/inovex/elements/issues/61)) ([6af692b](https://github.com/inovex/elements/commit/6af692b05baa80357ea2febf24632d8110fba706))\n* **elements|ino-header:** fix wrong header in README ([655154c](https://github.com/inovex/elements/commit/655154cbba0b35e01b23a9fdbc9b956a8e05d493))\n\n# [0.21.0](https://github.com/inovex/elements/compare/v0.20.0...v0.21.0) (2020-07-02)\n\n\n### Bug Fixes\n* **elements:** remove obsolete popper.js dependency ([2f934feb](https://github.com/inovex/elements/commit/2f934febf5b5eff052056b43d3cf34b0d4244670))\n\n\n### Feature\n* **elements|ino-icon:** update names of custom properties ([efc56f15](https://github.com/inovex/elements/commit/efc56f15d0f01517d8b20640a20f265b533e0d25))\n\n\n### BREAKING CHANGES\nIn order to apply the correct naming pattern for custom variables (a.k.a. CSS-Variables) it was necessary to rename the custom properties of the ino-icon component. The renamed variables are listed in the following table:\n\n| Old Name        | New Name           | \n|---------------|--------------------|\n| `--color`  | `--ino-icon-color-primary` or `--ino-icon-color-secondary`   |\n| `--height`    | `--ino-icon-height`    |\n| `--width` | `--ino-icon-width` |\n\n\n\n# [0.20.0](https://github.com/inovex/elements/compare/v0.19.1...v0.20.0) (2020-06-25)\n\n\n### Bug Fixes\n\n* **elements|ino-icon:** fix internally used icon not loading correctly ([cc77301](https://github.com/inovex/elements/commit/cc77301e43afc3a44052dbbb56cbcccf76a4ab58))\n\n\n### Features\n\n* **elements:** add ino-img-list component ([3c15e98](https://github.com/inovex/elements/commit/3c15e9818a46e1f5860eed8e83ad6f200262f71f))\n* **elements|ino-checkbox:** add css variables ([5a38adb](https://github.com/inovex/elements/commit/5a38adb6e55ad1ac353dbd038387a4324500f1cc))\n\n\n\n## [0.19.1](https://github.com/inovex/elements/compare/v0.19.0...v0.19.1) (2020-06-18)\n\n\n### Bug Fixes\n\n* **elements|ino-icon:** fix svg parser typescript error ([34775b8](https://github.com/inovex/elements/commit/34775b8be60ccdfb2d97bba1019fe5858a09fe88))\n\n\n\n# [0.19.0](https://github.com/inovex/elements/compare/v0.18.0...v0.19.0) (2020-06-18)\n\n\n### Bug Fixes\n\n* **elements|ino-input:** fix autoFocus property not being recognized ([c5a4d6f](https://github.com/inovex/elements/commit/c5a4d6f6c988dbcbda22086238940d90f64f96c4))\n* **elements|ino-list-item:** fix propagation bug ([c20ceaa](https://github.com/inovex/elements/commit/c20ceaac7f4723954e48720b5e56afdcf4baf2b4))\n* **elements|ino-option:** use min-height instead of fixed height ([21717eb](https://github.com/inovex/elements/commit/21717eb2e9c646c034dbef467fcec4cf28309ae4))\n* **elements|ino-select:** fix wrong positioning of opened select ([e05b83e](https://github.com/inovex/elements/commit/e05b83e39c7b0ee6a2a11c6354734a4d992c14f9))\n* **elements|ino-select:** truncate overflowed text in select field ([2dc54fc](https://github.com/inovex/elements/commit/2dc54fccc438bc2d3279c76e8ade46675c449b24))\n* **elements|ino-sidebar:** remove the ability to close the sidebar by pressing escape ([1ae8845](https://github.com/inovex/elements/commit/1ae884565fc30a58a0bb79ac32b3580bb6a2fd27))\n\n\n### Features\n\n* **elements:** add ino-table/-row/-cell components ([fc2f778](https://github.com/inovex/elements/commit/fc2f778ada0c4153d9f67a2a8daef4250228b64f))\n* **elements:** add progress-bar component ([5fbd35e](https://github.com/inovex/elements/commit/5fbd35e9c1a8e2494bdbce4f0148e39d7794d8c0))\n* **elements|ino-icon:** add property to set svg title ([e6a6b60](https://github.com/inovex/elements/commit/e6a6b608168364186a840a1952f89afe046f4512))\n* **elements|ino-icon:** add additional arrow icons ([8215b05](https://github.com/inovex/elements/commit/8215b05665e5fba9cd79edf41b4a1151d1699d26))\n\n\n\n# [0.18.0](https://github.com/inovex/elements/compare/v0.17.0...v0.18.0) (2020-05-20)\n\n\n### Bug Fixes\n\n* **elements|ino-datepicker:** fix parsing on keyboard input ([9ea3628](https://github.com/inovex/elements/commit/9ea36286b600d2fd77f62090ee2513282d2463ba))\n* **elements|ino-datepicker:** styles are now applied correctly ([b114ed3](https://github.com/inovex/elements/commit/b114ed3473f7e0a7e610c235aac6acfb74818f77))\n* **elements|ino-select:** fix label hint when required ([c01c4fb](https://github.com/inovex/elements/commit/c01c4fb5775f1c842568221b9789cc7b223217d1))\n* **elements|ino-sidebar:** fix icons in sidebar story ([e6c6a57](https://github.com/inovex/elements/commit/e6c6a5776493c9e3b5acecfc2f5cfc012e36857f))\n* **elements|ino-tooltip:** tooltip disappearing on mouseout when click trigger ([7a3859a](https://github.com/inovex/elements/commit/7a3859a68437c27632f9159fca11127066d4472c))\n\n\n### Features\n\n* **elements|ino-button:** add css variables ([9295b65](https://github.com/inovex/elements/commit/9295b6510029e4c37ef25e535467d1ad3ce90fb2))\n* **elements|ino-input:** add methods to focus and blur the input element ([9c9e863](https://github.com/inovex/elements/commit/9c9e863b2d0fa798ab0484132855977a1634df03))\n* **elements|ino-option-group:** add ino-option-group component ([6aa7a3c](https://github.com/inovex/elements/commit/6aa7a3ca7bbe771b269b27934bea88ce021b9bc6))\n* **elements|ino-select:** add css variable for custom height ([7c8966b](https://github.com/inovex/elements/commit/7c8966b0aea80ba856ee13dd5d85295168e9d60b))\n* **elements|ino-sidebar:** add css variable to specify the width ([062fe24](https://github.com/inovex/elements/commit/062fe24a1de532481e19f1f3b9aaf3ba69b8f74c))\n\n### BREAKING CHANGES\n* **ino-button:** The color-scheme has been changed to match the designer's specification. Possible values are now: `primary`, `secondary`, `white` and `grey`. While `primary` and `secondary` can be used with any fill-type, `white` and `grey` only work with the `ino-fill=\"outline\"`. The Fill-Types (`ino-fill`) have also been changed. Possible values are now: `solid`, `outline` and the new `inverse` which reverses the currently used color-scheme.\n\n# [0.17.0](https://github.com/inovex/elements/compare/v0.16.0...v0.17.0) (2020-04-29)\n\n\n### Bug Fixes\n\n* **react|wrapper:** fix react types for stencil update (fixes elements 0.15.x and 0.16.x) ([4ffff06](https://github.com/inovex/elements/commit/4ffff06dbe33bb58d250ae89bee81bbb08c9c600))\n\n\n### Features\n\n* **elements-react|ino-option:** add component ([dbfc1e4](https://github.com/inovex/elements/commit/dbfc1e4dd6fd3ebc0f55d257948b88f422b520be))\n* **elements|ino-checkbox:** add selection variant ([3e74a78](https://github.com/inovex/elements/commit/3e74a7892bdaa9dd12e1be8cf60780881a7b10d4))\n* **elements|ino-icon:** unify icons & add styling options with CSS variables ([a755e69](https://github.com/inovex/elements/commit/a755e69a656b591d869f23af818bc8a51b3718cb))\n* **elements|ino-nav-drawer:** create nav-drawer element ([72dd914](https://github.com/inovex/elements/commit/72dd9143c3859a9b173a779de4d1ef9114d3f65c))\n* **elements|ino-nav-item:** create nav-item element ([72dd914](https://github.com/inovex/elements/commit/72dd9143c3859a9b173a779de4d1ef9114d3f65c))\n* **elements|ino-sidebar:** add ino-sidebar ([e9d56de](https://github.com/inovex/elements/commit/e9d56de9abfec70139f8f1cce9f164b245040f89))\n* **storybook:** add pure js example and cleanup docs ([7cc9fdb](https://github.com/inovex/elements/commit/7cc9fdb77bf746096dcedfc769f66ecdf981d3ea))\n\n### BREAKING CHANGES\n* **ino-select:** To implement the new design of the Select component, the component has been reworked. It is no longer based on the native Select element. The `inoPrependDefault ` has been removed, as no option is now automatically selected by default. Also, the `ino-option` element is now required instead of the native option element.  The `autofocus' and `form' properties have been removed because they were not used internally.\n* **ino-icon:** The 'ino-icon' component has also been updated. The naming scheme `<icon>-<s|m>' has been discarded. Each icon now only has its own ID without the size suffix. The width and height, as well as the color can now be changed using the new CSS variables. The default color of the icons is now blue.\n\nAll icons have been unified. Also the following icons have been renamed, removed and new ones added:\n\n| Added         | Removed            | Renamed                                             |\n|---------------|--------------------|-----------------------------------------------------|\n| `back-arrow`  | `equalizer`        | `abwesend` -> `status_abwesend`                     |\n| `chart`       | `equal`            | `aktuell` -> `time`                                 |\n| `chat`        | `favorite_border`  | `delete` -> `remove`                                |\n| `checkmark`   | `greater_or_equal` | `date_range` -> `calendar`                          |\n| `copy`        | `less_or_equal`    | `file_upload` -> `upload`                           |\n| `developer`   | `info-outline`     | `future` -> `status_zukuenftige`                    |\n| `logout`      | `star-border`      | `gear` -> `settings`                                |\n| `message`     |                    | `gps` -> `location`                                 |\n| `offboarding` |                    | `onboarding_laufen` -> `status_onboarding_laufend`  |\n| `partner`     |                    | `offboarding_laufen` -> `status_onboarding_laufend` |\n| `warning`     |                    | `past` -> `status_vergangene`                       |\n| `web`         |                    | `person` | `employee` -> `user`                     |\n|               |                    | `sort_AZ` -> `sort_az`                              |\n|               |                    | `sort_ZA` -> `sort_za`                              |\n|               |                    | `users` -> `employees`                              |\n\n\n\n# [0.16.0](https://github.com/inovex/elements/compare/v0.15.1...v0.16.0) (2020-04-01)\n\n\n### Bug Fixes\n\n* **storybook:** show elements logo also in storybook ([14cc38d](https://github.com/inovex/elements/commit/14cc38dccb50efb01e8fc842edef9254696e0980))\n\n\n### Features\n\n* **storybook:** integrate stackblitz code examples ([a4b0e8d](https://github.com/inovex/elements/commit/a4b0e8d7abaaca1753672b809ef48827113a1281))\n\n\n\n## [0.15.1](https://github.com/inovex/elements/compare/v0.15.0...v0.15.1) (2020-03-26)\n\n\n### Bug Fixes\n\n* **elements:** revert @stencil/core to 1.10.3 due to style issues ([376c79d](https://github.com/inovex/elements/commit/376c79d94d45c4ab52bbf635bbfa9c446a0d7264))\n\n\n\n# [0.15.0](https://github.com/inovex/elements/compare/v0.14.0...v0.15.0) (2020-03-25)\n\n\n### Bug Fixes\n\n* **elements-react|ino-control-item:** add missing component ([9f29b68](https://github.com/inovex/elements/commit/9f29b68095b5286368533aa359a491580c7e848d))\n\n\n### Features\n\n* **elements|ino-button:** add property ino-loading to display a loading spinner ([7cbbce7](https://github.com/inovex/elements/commit/7cbbce7058162e2a585ce08431d28e0113a19cf8))\n* **elements|ino-header:** add component ([4c5c69f](https://github.com/inovex/elements/commit/4c5c69f5f97f43beb462197aad0c62ffab2e80b6))\n* **elements|ino-segment-group:** add ino-segment-group and -button ([e26478c](https://github.com/inovex/elements/commit/e26478cf593052c23cd707ecb678997dd5cd6e85))\n* **elements|ino-snackbar:** add feedback variant ([252c044](https://github.com/inovex/elements/commit/252c0441131a97cc3c8151039c6727f48ae8809e))\n\n### BREAKING CHANGES\nWe updated our dependencies, which resulted in conflicts with the `autofocus` property. If you use the typed version of the elements package, you need to change all appearances of `autofocus` to `autoFocus`. If you use the web components you don't need to change anything.\n\n# [0.14.0](https://github.com/inovex/elements/compare/v0.13.0...v0.14.0) (2020-03-17)\n\n\n### Bug Fixes\n\n* **elements:** fix wrong index in activeTabChange event in the ino-tab-bar ([4c90881](https://github.com/inovex/elements/commit/4c908817d62af58fc6442ebd5271c5b099ade997))\n\n\n### Features\n\n* **elements:** add option to align snackbar to the right ([eb8b8ab](https://github.com/inovex/elements/commit/eb8b8ab39660e0f5fe4ea3a99ae5aa338b37d31a))\n* **elements:** ino-fab(-set) in inovex style ([8bd1b32](https://github.com/inovex/elements/commit/8bd1b32458f60ce2c876e005e5cbc1159e269587))\n\n\n\n# [0.13.0](https://github.com/inovex/elements/compare/v0.12.0...v0.13.0) (2020-02-19)\n\n### Bug Fixes\n\n* **elements:** add timeout to ino-tooltip to wait for host element to be rendered ([43e7b5a](https://github.com/inovex/elements/commit/43e7b5a0c7b53138ab5600eb02ab28be66180dec))\n* **elements:** throw better exception in ino-tooltip when target not found ([8c0412f](https://github.com/inovex/elements/commit/8c0412f37828f48553432b3effcb8d44eaab4191))\n\n### Features\n\n* **elements:** ino-snackbar in inovex design ([f080cab6](https://github.com/inovex/elements/commit/f080cab6dd6bc2b64809a9774ea4551730bd7837))\n\n# [0.12.0](https://github.com/inovex/elements/compare/v0.11.0...v0.12.0) (2020-02-12)\n\n\n### Bug Fixes\n\n* **elements:** disable click on icon when datepicker disabled ([ebb757e](https://github.com/inovex/elements/commit/ebb757ef9fba177715cbe0c693297511d470c7e1))\n* **elements:** fix layout of datepicker with disabled month arrow(s) ([2a47f9f](https://github.com/inovex/elements/commit/2a47f9f5f12c29bffc2fe169c523ac62b9bd0ed5))\n* **elements:** set correct parameters for latest symbolic link ([2a6a888](https://github.com/inovex/elements/commit/2a6a8888e60098b3ff5950cdd2f8a038195d63ca))\n\n\n### Features\n\n* **elements:** add option to mark inputs as optional ([6ee24de](https://github.com/inovex/elements/commit/6ee24de3e8953967e28483a7cc2c83e136a5d0bc))\n* **elements:** add ino-switch component ([23a5512](https://github.com/inovex/elements/commit/23a55126912e218b47170b9a0442b1c2924cc3d7))\n* **elements:** add month picker option to ino-datepicker ([1f796a6](https://github.com/inovex/elements/commit/1f796a64bcd69d1dba450127589174fb1f3d0562))\n\n\n\n# [0.11.0](https://github.com/inovex/elements/compare/v0.10.1...v0.11.0) (2020-02-07)\n\n\n### Bug Fixes\n\n* **elements-storybook:** fix icon search input not updating it's value ([64c7ad5](https://github.com/inovex/elements/commit/64c7ad5beee6015509e55760c9b08bc32ec3d7e3))\n* **ino-textarea:** set inner width to 100% ([6c37996](https://github.com/inovex/elements/commit/6c379962b7d1373d2537f17ff222548bfc4d59f5))\n\n\n### Features\n\n* **elements:** add email validation onBlur ([83a38f7](https://github.com/inovex/elements/commit/83a38f70abe453e8a93a129ab7cb520e9f7ca295))\n* **elements:** add new ino-error prop to ino-input ([3e4ae46](https://github.com/inovex/elements/commit/3e4ae46b5cc26f57dd0c43ffac3b1d1d47d1d626))\n* **elements:** add thousands sep., decimal places, unit to ino-input ([a7df4cb](https://github.com/inovex/elements/commit/a7df4cbe13e12c8069fddf29e760df080ccbcfd6))\n* **elements:** ino-checkbox in inovex style ([5884df0](https://github.com/inovex/elements/commit/5884df0fd950fe02636731b7b6abf29af5f7b008))\n* **elements-react:** add ino-radio-group component ([2500449](https://github.com/inovex/elements/commit/2500449b7368e0184667c9fd32550a450618c4dd))\n* **icons:** add new icons, update icon names, update readme ([d176efa](https://github.com/inovex/elements/commit/d176efa3742fe51b6f3f880ec66378de5a5b31df))\n\n### Breaking Changes\nSome icons have been renamed to match the new naming convention. The new naming convention was introduced to reflect the newly added sizes and colors in the ID of each icon. The old naming convention was: `<id>-<a|b>` (e.g. `birthday-a`). The new naming convention is the following: `<id>-<size>-<grey>?` (e.g. `birthday-m`). If any of your used ino-icons has the suffix `-a` or `-b`, please search for the new id in the [ino-icon page](https://elements.inovex.de/dist/latest/storybook/?path=/story/graphic-ino-icon--default-usage) and update the `ino-icon`-Property accordingly (e.g. `birthday-a` -> `birthday-m`).\n\nThere are three different sizes: xs, s and m. The default which should be used is m. Many icons also have a grey version which has the suffix \"-grey\" (e.g. `birthday-m-grey`).\n\n\n## [0.10.1](https://github.com/inovex/elements/compare/v0.10.0...v0.10.1) (2019-12-09)\n\n\n### Bug Fixes\n\n* pipeline ([e237d00](https://github.com/inovex/elements/commit/e237d00ae7d9925fd231e476746adf09384056a4))\n\n\n\n# [0.10.0](https://github.com/inovex/elements/compare/v0.9.0...v0.10.0) (2019-12-09)\n\n\n### Bug Fixes\n\n* reset native input properly ([c397da0](https://github.com/inovex/elements/commit/c397da01cdc46b30e5e507f2fab5ab7798c2ff5b))\n\n\n### Features\n\n* **angular:** inital project ([df78166](https://github.com/inovex/elements/commit/df78166498a76f1b752727a8ba57b6dfa1ee4434))\n* **ino-icon:** add james icons, improve stories, add search functionality ([d67db75](https://github.com/inovex/elements/commit/d67db758b539e5f99e0c1b412bfdebb079a4f162))\n\n\n\n# [0.9.0](https://github.com/inovex/elements/compare/v0.8.0...v0.9.0) (2019-10-11)\n\n\n### Bug Fixes\n\n* **ino-datepicker:** fix overlapping label ([0e29ecd](https://github.com/inovex/elements/commit/0e29ecd))\n* **ino-datepicker:** remove internal static option ([abffbcc](https://github.com/inovex/elements/commit/abffbcc))\n* **ino-input:** autofocus ([cc70866](https://github.com/inovex/elements/commit/cc70866))\n* **ino-tooltip:** fix misplacement ([2e4f2f8](https://github.com/inovex/elements/commit/2e4f2f8))\n\n\n### Features\n\n* **ino-datepicker:** inovex design ([b956bab](https://github.com/inovex/elements/commit/b956bab))\n* **ino-input:** add 'any' as step option ([77b1f74](https://github.com/inovex/elements/commit/77b1f74))\n\n\n\n# [0.8.0](https://github.com/inovex/elements/compare/v0.7.0...v0.8.0) (2019-09-06)\n\n\n### Features\n\n* **ino-select:** add prop to enable/disable prepended empty element ([e38c9b8](https://github.com/inovex/elements/commit/e38c9b8))\n\n\n\n# [0.7.0](https://github.com/inovex/elements/compare/v0.6.6...v0.7.0) (2019-08-16)\n\n\n### Bug Fixes\n\n* **ino-select:** prevent change of inoPrependDefault to avoid layout problems ([a12eac1](https://github.com/inovex/elements/commit/a12eac1))\n* **ino-textarea:** add black border on hover ([ff0d1c5](https://github.com/inovex/elements/commit/ff0d1c5))\n\n\n### Features\n\n* **ino-control-item:** add component ([da8cc86](https://github.com/inovex/elements/commit/da8cc86))\n* **ino-input:** add datalist ([6c4e495](https://github.com/inovex/elements/commit/6c4e495))\n\n\n\n## [0.6.6](https://github.com/inovex/elements/compare/v0.6.5...v0.6.6) (2019-08-09)\n\n\n### Bug Fixes\n\n* **ino-chip-set:** add timeout for ino-chip-set-test ([574e86a](https://github.com/inovex/elements/commit/574e86a))\n* **ino-datepicker:** keep input focus as long as picker is opened ([bec1190](https://github.com/inovex/elements/commit/bec1190))\n\n\n\n## [0.6.5](https://github.com/inovex/elements/compare/v0.6.4...v0.6.5) (2019-08-06)\n\n\n\n## [0.6.4](https://github.com/inovex/elements/compare/v0.6.3...v0.6.4) (2019-08-05)\n\n\n### Bug Fixes\n\n* **ino-fab:** wrong rendering condition for ino-tooltip within ino-fab ([3c45eff](https://github.com/inovex/elements/commit/3c45eff))\n\n\n### Features\n\n* **ino-chip:** new default color ([4458b17](https://github.com/inovex/elements/commit/4458b17))\n* **ino-input:** add ino-blur und ino-focus events ([013004b](https://github.com/inovex/elements/commit/013004b))\n\n\n\n## [0.6.3](https://github.com/inovex/elements/compare/v0.6.2...v0.6.3) (2019-07-29)\n\n\n### Bug Fixes\n\n* **ino-input:** add mdc-disabled class dynamically ([dda5c9a](https://github.com/inovex/elements/commit/dda5c9a))\n\n\n\n## [0.6.2](https://github.com/inovex/elements/compare/v0.6.1...v0.6.2) (2019-07-24)\n\n\n\n## [0.6.1](https://github.com/inovex/elements/compare/v0.6.0...v0.6.1) (2019-07-24)\n\n\n### Bug Fixes\n\n* **ino-snackbar:** always show snackbar to avoid internal state ([acfb1ac](https://github.com/inovex/elements/commit/acfb1ac))\n\n\n\n# [0.6.0](https://github.com/inovex/elements/compare/v0.5.6...v0.6.0) (2019-07-23)\n\n\n### Bug Fixes\n\n* **icons:** add icon support for react components ([7ca10fa](https://github.com/inovex/elements/commit/7ca10fa))\n* **ino-input:** DOM-Exception error when using email-type ([4f8a8f1](https://github.com/inovex/elements/commit/4f8a8f1))\n\n\n### Features\n\n* **mdc-components:** update to version 3.0.0 ([6250abe](https://github.com/inovex/elements/commit/6250abe))\n\n\n\n<a name=\"0.5.6\"></a>\n## [0.5.6](https://github.com/inovex/elements/compare/v0.5.5...v0.5.6) (2019-05-16)\n\n### Features\n\n* **webpack:** re-add webpack-plugin for webpack projects ([bf5ac07](https://github.com/inovex/elements/commit/bf5ac07))\n\nIn most cases, the integration of inovex elements requires two steps:\n\n#### 1) Copy `dist` folder of `inovex-elements` dependency to project's assets\n\nIf you are using webpack and provide your own webpack config file, you can use the provided `webpack-plugin.js` as a plugin\nand the elements will be provided automatically. You just have to import the component registry as part of your main bundle:\n\n```javascript\n// webpack.config.js\n\nmodule.exports = {\n    //...\n    plugins: [ /* ... */, require('@inovex/elements/webpack-plugin')()]\n}\n```\n\nor\n\n```javascript\n// webpack.config.js\n\nmodule.exports = function override(config, env) {\n  // do stuff with the webpack config...\n  config.plugins = [...config.plugins, require('@inovex/elements/webpack-plugin')('static/js')];\n  return config;\n};\n```\n\nIf the final javascript bundle is not located in the root of the web root, you have to specify the path as the first parameter,\ne.g. if your javascript bundle is located in `static/js`, use `require('@inovex/elements/webpack-plugin')('static/js')`.\n\n#### 2) Load the elements module in entrypoint file\n\n```javascript\n// entrypoint file\n\nimport '@inovex/elements';\n```\n\n## [0.5.5](https://github.com/inovex/elements/compare/v0.5.4...v0.5.5) (2019-05-02)\n\n\n### Bug Fixes\n\n* **react:** add Fragment wrapper around children ([35ce49b](https://github.com/inovex/elements/commit/35ce49b))\n\n\n\n## [0.5.4](https://github.com/inovex/elements/compare/v0.5.3...v0.5.4) (2019-04-30)\n\n\n### Bug Fixes\n\n* **postbuild:** fix wrong path ([b1291b0](https://github.com/inovex/elements/commit/b1291b0))\n\n\n\n## [0.5.3](https://github.com/inovex/elements/compare/v0.5.2...v0.5.3) (2019-04-29)\n\n\n### Bug Fixes\n\n* **ino-datepicker:** replace ino-type with newer ino-date-format attribute in readme ([db92e69](https://github.com/inovex/elements/commit/db92e69))\n* **react:** export InoInputFile, was missing and export InoListDivider as InoListDivider instead exporting it as InoDivider ([8e310a6](https://github.com/inovex/elements/commit/8e310a6))\n\n### Features\n\n* add react examples to every component readme ([2314dd6](https://github.com/inovex/elements/commit/2314dd6))\n\n\n\n## [0.5.2](https://github.com/inovex/elements/compare/v0.5.1...v0.5.2) (2019-04-11)\n\n\n### Bug Fixes\n\n* **ino-datepicker:** datepicker will now open on input click ([842d21b](https://github.com/inovex/elements/commit/842d21b))\n* **postinstall:** remove postinstall from released package ([9b0d202](https://github.com/inovex/elements/commit/9b0d202))\n* **storybook:** remove tsx for syntax highlight ([f1dbfb9](https://github.com/inovex/elements/commit/f1dbfb9))\n\n\n\n## [0.5.1](https://github.com/inovex/elements/compare/v0.5.0...v0.5.1) (2019-03-26)\n\n### Bug Fixes\n\n* **postinstall:** remove postinstall from released package ([9b0d202](https://github.com/inovex/elements/commit/9b0d202))\n* **storybook:** remove tsx for syntax highlight ([f1dbfb9](https://github.com/inovex/elements/commit/f1dbfb9))\n\n## [0.5.0](https://github.com/inovex/elements/compare/v0.4.0...v0.5.0) (2019-03-21)\n\n* **events:** rename (most of) event names ([ed04d98](https://github.com/inovex/elements/commit/ed04d98))\n* **ino-datepicker:** fix too many tabs to skip datepicker ([3e25361](https://github.com/inovex/elements/commit/3e25361))\n* **ino-input:** Emit new value ([5af46f9](https://github.com/inovex/elements/commit/5af46f9))\n* **ino-input:** fix validation bug ([6c2c904](https://github.com/inovex/elements/commit/6c2c904))\n* **ino-textarea:** change event listening ([1340af4](https://github.com/inovex/elements/commit/1340af4))\n* **text-area:** lower case of event ([3a9194d](https://github.com/inovex/elements/commit/3a9194d))\n\n### Features\n\n* **ino-button:** add constants ([cea66f3](https://github.com/inovex/elements/commit/cea66f3))\n* **ino-card:** add image, action buttons and action icons ([5e1c59d](https://github.com/inovex/elements/commit/5e1c59d))\n* **ino-checkbox:** change to controlled component ([171e12b](https://github.com/inovex/elements/commit/171e12b))\n* **ino-datepicker:** controlled component ([26e2c74](https://github.com/inovex/elements/commit/26e2c74))\n* **ino-fab, ino-fab-set:** add components ([589b176](https://github.com/inovex/elements/commit/589b176))\n* **ino-icon:** add more icons ([0ade6ee](https://github.com/inovex/elements/commit/0ade6ee))\n* **ino-icon:** allow to use custom icons ([9abe27c](https://github.com/inovex/elements/commit/9abe27c))\n* **ino-icon-button:** change to controlled component ([dd52485](https://github.com/inovex/elements/commit/dd52485))\n* **ino-input:** change to controlled component ([19541c3](https://github.com/inovex/elements/commit/19541c3))\n* **ino-input-file:** change to controlled-component ([5054e88](https://github.com/inovex/elements/commit/5054e88))\n* **ino-list:** change to controlled component ([f2ba19e](https://github.com/inovex/elements/commit/f2ba19e))\n* **ino-menu:** controlled component ([392c7f5](https://github.com/inovex/elements/commit/392c7f5))\n* **ino-radio:** make checked attribute unmanaged ([489f32f](https://github.com/inovex/elements/commit/489f32f))\n* **ino-range:** change to controlled component ([e9938eb](https://github.com/inovex/elements/commit/e9938eb))\n* **ino-range:** switch to MDC components implementation ([b3ac281](https://github.com/inovex/elements/commit/b3ac281))\n* **ino-select:** change to controlled component ([5318824](https://github.com/inovex/elements/commit/5318824))\n* **ino-tab-bar:** change to controlled component ([5800088](https://github.com/inovex/elements/commit/5800088))\n* **ino-textarea:** change to controlled component ([b6b6678](https://github.com/inovex/elements/commit/b6b6678))\n* **ino-textarea:** optional autogrow to display all content ([55a8034](https://github.com/inovex/elements/commit/55a8034))\n* **react:** add react wrapper ([10e1127](https://github.com/inovex/elements/commit/10e1127))\n* **storybook:** add syntax-highlighting ([7f92b40](https://github.com/inovex/elements/commit/7f92b40))\n* **types:** add types for certain properties ([6e42f9f](https://github.com/inovex/elements/commit/6e42f9f))\n\n### BREAKING CHANGES\n\n* We switched over to controlled components which means that our inovex element components are now controlled by you,\nthe consumer. All the state of the component is derived from the props the component exposes. The input component\nwill no longer update its value when the user types. Instead you must listen to the `valueChange` event and set the\n`value` manually.\n* The integration in React projects is now much easier, you no longer need to use `ref=\"...\"` to get a reference to\nthe element, you're now able to use the exposed callbacks from our react wrapper. Please see the setup instructions\nfor React in Storybook to see how you can migrate.\n* Most of the event names have changed, please check all the components for new event names when upgrading.\n\n## [0.4.1](https://github.com/inovex/elements/compare/v0.4.0...v0.4.1) (2018-10-23)\n\n### Bug Fixes\n\n- **events:** rename (most of) event names ([ed04d98](https://github.com/inovex/elements/commit/ed04d98))\n- **ino-datepicker:** fix too many tabs to skip datepicker ([3e25361](https://github.com/inovex/elements/commit/3e25361))\n- **ino-input:** Emit new value ([5af46f9](https://github.com/inovex/elements/commit/5af46f9))\n- **ino-input:** fix validation bug ([6c2c904](https://github.com/inovex/elements/commit/6c2c904))\n- **ino-textarea:** change event listening ([1340af4](https://github.com/inovex/elements/commit/1340af4))\n- **text-area:** lower case of event ([3a9194d](https://github.com/inovex/elements/commit/3a9194d))\n\n### Features\n\n- **ino-button:** add constants ([cea66f3](https://github.com/inovex/elements/commit/cea66f3))\n- **ino-card:** add image, action buttons and action icons ([5e1c59d](https://github.com/inovex/elements/commit/5e1c59d))\n- **ino-checkbox:** change to controlled component ([171e12b](https://github.com/inovex/elements/commit/171e12b))\n- **ino-datepicker:** controlled component ([26e2c74](https://github.com/inovex/elements/commit/26e2c74))\n- **ino-fab, ino-fab-set:** add components ([589b176](https://github.com/inovex/elements/commit/589b176))\n- **ino-icon:** add more icons ([0ade6ee](https://github.com/inovex/elements/commit/0ade6ee))\n- **ino-icon:** allow to use custom icons ([9abe27c](https://github.com/inovex/elements/commit/9abe27c))\n- **ino-icon-button:** change to controlled component ([dd52485](https://github.com/inovex/elements/commit/dd52485))\n- **ino-input:** change to controlled component ([19541c3](https://github.com/inovex/elements/commit/19541c3))\n- **ino-input-file:** change to controlled-component ([5054e88](https://github.com/inovex/elements/commit/5054e88))\n- **ino-list:** change to controlled component ([f2ba19e](https://github.com/inovex/elements/commit/f2ba19e))\n- **ino-menu:** controlled component ([392c7f5](https://github.com/inovex/elements/commit/392c7f5))\n- **ino-radio:** make checked attribute unmanaged ([489f32f](https://github.com/inovex/elements/commit/489f32f))\n- **ino-range:** change to controlled component ([e9938eb](https://github.com/inovex/elements/commit/e9938eb))\n- **ino-range:** switch to MDC components implementation ([b3ac281](https://github.com/inovex/elements/commit/b3ac281))\n- **ino-select:** change to controlled component ([5318824](https://github.com/inovex/elements/commit/5318824))\n- **ino-tab-bar:** change to controlled component ([5800088](https://github.com/inovex/elements/commit/5800088))\n- **ino-textarea:** change to controlled component ([b6b6678](https://github.com/inovex/elements/commit/b6b6678))\n- **ino-textarea:** optional autogrow to display all content ([55a8034](https://github.com/inovex/elements/commit/55a8034))\n- **react:** add react wrapper ([10e1127](https://github.com/inovex/elements/commit/10e1127))\n- **storybook:** add syntax-highlighting ([7f92b40](https://github.com/inovex/elements/commit/7f92b40))\n- **types:** add types for certain properties ([6e42f9f](https://github.com/inovex/elements/commit/6e42f9f))\n\n### BREAKING CHANGES\n\n- We switched over to controlled components which means that our inovex element components are now controlled by you,\n  the consumer. All the state of the component is derived from the props the component exposes. The input component\n  will no longer update its value when the user types. Instead you must listen to the `valueChange` event and set the\n  `value` manually.\n- The integration in React projects is now much easier, you no longer need to use `ref=\"...\"` to get a reference to\n  the element, you're now able to use the exposed callbacks from our react wrapper. Please see the setup instructions\n  for React in Storybook to see how you can migrate.\n- Most of the event names have changed, please check all the components for new event names when upgrading.\n\n## [0.4.0](https://github.com/inovex/elements/compare/v0.3.0...v0.4.0) (2018-09-25)\n\n## [0.4.0](https://github.com/inovex/elements/compare/v0.3.0...v0.4.0) (2018-09-25)\n\n### Bug Fixes\n\n- **ino-button:** background color was not applied for raised property ([b70930f](https://github.com/inovex/elements/commit/b70930f))\n- **ino-message-box, ino-spinner:** disable modal functionality if value of property is false ([de10b7d](https://github.com/inovex/elements/commit/de10b7d))\n- **storybook:** fix icon import and naming issue ([0cb1231](https://github.com/inovex/elements/commit/0cb1231))\n\n### Features\n\n- **ino-checkbox:** add indeterminate status ([5d858e3](https://github.com/inovex/elements/commit/5d858e3))\n- **ino-chip-set:** add component ([e356839](https://github.com/inovex/elements/commit/e356839))\n- **ino-input-file:** add component ([03021ab](https://github.com/inovex/elements/commit/03021ab))\n- **ino-list:** add meta- and graphic-support ([a0c05b9](https://github.com/inovex/elements/commit/a0c05b9))\n- **ino-snackbar:** add component ([4b5d47f](https://github.com/inovex/elements/commit/4b5d47f))\n- **ino-tab, ino-tab-bar:** add component ([ffeb083](https://github.com/inovex/elements/commit/ffeb083))\n- **storybook:** migrate to plain html ([1ae48b3](https://github.com/inovex/elements/commit/1ae48b3))\n- **storybook:** show version of elements ([9a85dc0](https://github.com/inovex/elements/commit/9a85dc0))\n\n### Reverts\n\n- feat(ino-message-box): add message box ([4911def](https://github.com/inovex/elements/commit/4911def))\n\n### BREAKING CHANGES\n\n- The <ino-message-box> component has been removed because the use case is provided by the newly introduced ino-card component and ino-snackbar component. Please switch to that components instead\n\n## [0.3.0](https://github.com/inovex/elements/compare/v0.2.0...v0.3.0) (2018-09-11)\n\n### Bug Fixes\n\n- use BEM conform css class names ([3d5350f](https://github.com/inovex/elements/commit/3d5350f))\n- **ino-icon:** fix svg loading error ([0994d68](https://github.com/inovex/elements/commit/0994d68))\n\n### Features\n\n- **ino-card:** add alternatives in color brands ([a46102b](https://github.com/inovex/elements/commit/a46102b))\n- **ino-input, ino-range, ino-datepicker:** add step attribute ([9e13a3b](https://github.com/inovex/elements/commit/9e13a3b))\n- **ino-menu, ino-list, ino-list-item, ino-list-divider:** add component ([4514db7](https://github.com/inovex/elements/commit/4514db7))\n\n## [0.2.0](https://github.com/inovex/elements/compare/v0.1.2...v0.2.0) (2018-08-28)\n\n### Bug Fixes\n\n- **ino-form-row:** use correct readme in story ([ba65f3e](https://github.com/inovex/elements/commit/ba65f3e))\n\n### Features\n\n- Add react wrapper elements and improve attribute typings ([70d5064](https://github.com/inovex/elements/commit/70d5064))\n- **datepicker:** Add button and new input attributes ([643c052](https://github.com/inovex/elements/commit/643c052))\n- **ino-datepicker:** add 'range' option to DatepickerType in order to extend 'inoType' ([b2e64e0](https://github.com/inovex/elements/commit/b2e64e0))\n- **ino-icon:** renew component without inline SVGs ([6b9f049](https://github.com/inovex/elements/commit/6b9f049))\n- **ino-icon-button:** add component ([66719b0](https://github.com/inovex/elements/commit/66719b0))\n- **ino-input:** add helper text ([41c8ecd](https://github.com/inovex/elements/commit/41c8ecd))\n- **ino-input:** add leading and trailing icon ([bf75880](https://github.com/inovex/elements/commit/bf75880))\n- **tooltip:** open on tab and close on escape ([c31826c](https://github.com/inovex/elements/commit/c31826c))\n\n## [0.1.2](https://github.com/inovex/elements/compare/v0.1.1...v0.1.2) (2018-08-10)\n\n### Bug Fixes\n\n- Allow arbitrary attributes on inovex elements components ([73d2cdb](https://github.com/inovex/elements/commit/73d2cdb))\n- **message-box:** fix style-leaks because of similar classnames ([9b10a88](https://github.com/inovex/elements/commit/9b10a88))\n\n### Features\n\n- **ino-datepicker:** Disable browser autocomplete ([22b7dfe](https://github.com/inovex/elements/commit/22b7dfe))\n- **ino-select:** Upgrade dependencies and ensure outlined version ([0b3db30](https://github.com/inovex/elements/commit/0b3db30))\n- **ino-textarea:** Add new element ([6f619dc](https://github.com/inovex/elements/commit/6f619dc))\n\n## [0.1.1](https://github.com/inovex/elements/compare/v0.1.0...v0.1.1) (2018-07-05)\n\n## [0.1.0](https://github.com/inovex/elements/compare/v0.0.2...v0.1.0) (2018-07-05)\n\n### Bug Fixes\n\n- **ino-popover, ino-tooltip:** Set z-index ([3e6f283](https://github.com/inovex/elements/commit/3e6f283))\n\n### Features\n\n- **landing page:** add landing page ([a3a5a57](https://github.com/inovex/elements/commit/a3a5a57))\n\n## [0.0.2](https://github.com/inovex/elements/compare/10c2882...v0.0.2) (2018-06-23)\n\n### Bug Fixes\n\n- **ino-datepicker:** Restore native required behaviour ([46d343b](https://github.com/inovex/elements/commit/46d343b))\n- **tslint:** Allow type declaration and initialization ([cc43ebb](https://github.com/inovex/elements/commit/cc43ebb))\n\n### Features\n\n* **ino-button:** Add properties ino-color-scheme and ino-fill ([2327d38](https://github.com/inovex/elements/commit/2327d38))\n* **ino-button:** Implement first draft of ino-button ([23c81e3](https://github.com/inovex/elements/commit/23c81e3))\n* **ino-card:** Implement first version of ino-card ([b9eb4de](https://github.com/inovex/elements/commit/b9eb4de))\n* **ino-checkbox:** Implement first simple checkbox element ([c8c0665](https://github.com/inovex/elements/commit/c8c0665))\n* **ino-chip:** Add new element ([08970e1](https://github.com/inovex/elements/commit/08970e1))\n* **ino-datepicker:** Add date and timepicker ([10036e8](https://github.com/inovex/elements/commit/10036e8))\n* **ino-datepicker:** Add stories and enable usage in relative contexts ([60ca4d7](https://github.com/inovex/elements/commit/60ca4d7))\n* **ino-form-row:** Add new element ([26ba6b6](https://github.com/inovex/elements/commit/26ba6b6))\n* **ino-icon:** Add first icon element ([e648963](https://github.com/inovex/elements/commit/e648963))\n* **ino-img:** add ino-img component ([cd1f7d1](https://github.com/inovex/elements/commit/cd1f7d1))\n* **ino-input:** Add first version of an input element including tests ([10c2882](https://github.com/inovex/elements/commit/10c2882))\n* **ino-input:** Add stories ([e950f16](https://github.com/inovex/elements/commit/e950f16))\n* **ino-message-box:** Add new element ([b512282](https://github.com/inovex/elements/commit/b512282))\n* **ino-popover:** add new element ([1cec4e4](https://github.com/inovex/elements/commit/1cec4e4))\n* **ino-radio:** Add Storybook stories ([54e8c8d](https://github.com/inovex/elements/commit/54e8c8d))\n* **ino-radio:** Implement first version of ino-radio ([8d57bfd](https://github.com/inovex/elements/commit/8d57bfd))\n* **ino-range:** Add new element ([11df04e](https://github.com/inovex/elements/commit/11df04e))\n* **ino-select:** Implement first draft of select element ([c76547a](https://github.com/inovex/elements/commit/c76547a))\n* **ino-spinner:** Add new element ([5d7e7e1](https://github.com/inovex/elements/commit/5d7e7e1))\n* **ino-tooltip:** Implement first purpose of tooltip element ([18f176b](https://github.com/inovex/elements/commit/18f176b))\n* **ino-tooltip, ino-popover:** Add stories ([43d9081](https://github.com/inovex/elements/commit/43d9081))\n* **storybook:** Add global stylesheets and integrate material design font ([982336b](https://github.com/inovex/elements/commit/982336b))\n* **storybook:** Add playground directly in the readme ([7a61007](https://github.com/inovex/elements/commit/7a61007))\n* **storybook:** Initial commit ([fbfc58c](https://github.com/inovex/elements/commit/fbfc58c))\n* **storybook:** Several improvements and refactoring ([6bf3919](https://github.com/inovex/elements/commit/6bf3919))\n"))}},1343:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Colors",(function(){return styleguide_stories_Colors})),__webpack_require__.d(__webpack_exports__,"Typography",(function(){return styleguide_stories_Typography}));var markup=__webpack_require__(9);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import markup from \'_local-storybookcore/markup\';\\nimport colors from \'_local-docs/styleguide.colors.md\';\\nimport typography from \'_local-docs/styleguide.typography.md\';\\n\\nexport default {\\n  title: \'Docs/Styleguide\',\\n};\\n\\nexport const Colors = () => markup(colors);\\nexport const Typography = () => markup(typography);\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"Colors":{"startLoc":{"col":22,"line":9},"endLoc":{"col":42,"line":9},"startBody":{"col":22,"line":9},"endBody":{"col":42,"line":9}},"Typography":{"startLoc":{"col":26,"line":10},"endLoc":{"col":50,"line":10},"startBody":{"col":26,"line":10},"endBody":{"col":50,"line":10}}};\n    \nimport markup from \'_local-storybookcore/markup\';\nimport colors from \'_local-docs/styleguide.colors.md\';\nimport typography from \'_local-docs/styleguide.typography.md\';\n\nexport default {parameters: {"storySource":{"source":"import markup from \'_local-storybookcore/markup\';\\nimport colors from \'_local-docs/styleguide.colors.md\';\\nimport typography from \'_local-docs/styleguide.typography.md\';\\n\\nexport default {\\n  title: \'Docs/Styleguide\',\\n};\\n\\nexport const Colors = () => markup(colors);\\nexport const Typography = () => markup(typography);\\n","locationsMap":{"colors":{"startLoc":{"col":22,"line":9},"endLoc":{"col":42,"line":9},"startBody":{"col":22,"line":9},"endBody":{"col":42,"line":9}},"typography":{"startLoc":{"col":26,"line":10},"endLoc":{"col":50,"line":10},"startBody":{"col":26,"line":10},"endBody":{"col":50,"line":10}}}},},\n  title: \'Docs/Styleguide\',\n};\n\nexport const Colors = () => markup(colors);;\nexport const Typography = () => markup(typography);\n',locationsMap:{colors:{startLoc:{col:22,line:17},endLoc:{col:42,line:17},startBody:{col:22,line:17},endBody:{col:42,line:17}},typography:{startLoc:{col:26,line:18},endLoc:{col:50,line:18},startBody:{col:26,line:18},endBody:{col:50,line:18}}}}},"storySource",{source:"import markup from '_local-storybookcore/markup';\nimport colors from '_local-docs/styleguide.colors.md';\nimport typography from '_local-docs/styleguide.typography.md';\n\nexport default {\n  title: 'Docs/Styleguide',\n};\n\nexport const Colors = () => markup(colors);\nexport const Typography = () => markup(typography);\n",locationsMap:{colors:{startLoc:{col:22,line:9},endLoc:{col:42,line:9},startBody:{col:22,line:9},endBody:{col:42,line:9}},typography:{startLoc:{col:26,line:10},endLoc:{col:50,line:10},startBody:{col:26,line:10},endBody:{col:50,line:10}}}}),title:"Docs/Styleguide"};var styleguide_stories_Colors=function Colors(){return Object(markup.a)('# Color Codes\n\nThese shades will represent the brand in graphical elements, texts, syntax, backgrounds and ui elements.\n\n<style>\n  .color-wrapper {\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: row;\n  }\n\n  .color-rect {\n    height: 48px;\n    width: 48px;\n  }\n\n  .color-hex {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n</style>\n\n## inovex\n\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #003C7E"></div>\n  <div class="color-hex" style="color: #003C7E">#003C7E</div>\n</div>\n\n## Primary\n\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #3D40F5"></div>\n  <div class="color-hex" style="color: #3D40F5">#3D40F5, Base</div>\n</div>\n\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #5D60F7"></div>\n  <div class="color-hex" style="color: #5D60F7">#5D60F7, Light</div>\n</div>\n\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #0D10F3"></div>\n  <div class="color-hex" style="color: #0D10F3">#0D10F3, Dark</div>\n</div>\n\n## Secondary\n\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #9CCD00"></div>\n  <div class="color-hex" style="color: #9CCD00">#9CCD00, Base</div>\n</div>\n\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #BBD962"></div>\n  <div class="color-hex" style="color: #BBD962">#BBD962, Light</div>\n</div>\n\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #93BF00"></div>\n  <div class="color-hex" style="color: #93BF00">#93BF00, Dark</div>\n</div>\n\n## Success\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #9CCD00"></div>\n  <div class="color-hex" style="color: #9CCD00">#9CCD00</div>\n</div>\n\n## Warning\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #FFDE03"></div>\n  <div class="color-hex" style="color: #FFDE03">#FFDE03</div>\n</div>\n\n## Error\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #E00051"></div>\n  <div class="color-hex" style="color: #E00051">#E00051</div>\n</div>\n\n## Light\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #C1C1C1"></div>\n  <div class="color-hex" style="color: #C1C1C1">#C1C1C1</div>\n</div>\n\n## Dark\n<div class="color-wrapper">\n  <div class="color-rect" style="background-color: #777777"></div>\n  <div class="color-hex" style="color: #777777">#777777</div>\n</div>\n\n## SASS Variables\n\n```scss\n$inovex: #003c7e;\n\n$primary: #3d40f5;\n$primary-light: #5d60f7;\n$primary-dark: #0d10f3;\n$primary-contrast: #fff;\n\n$secondary: #9ccd00;\n$secondary-light: #bbd962;\n$secondary-dark: #93bf00;\n$secondary-contrast: #fff;\n\n$success: #9ccd00;\n$warning: #ffde03;\n$error: #eb003b;\n\n$light: #c1c1c1;\n$dark: #777777;\n```\n')},styleguide_stories_Typography=function Typography(){return Object(markup.a)('# Typography\n\nFor typography you should always care about size, spacing and height of the font.\n\n<style>\n  @import url(\'https://fonts.googleapis.com/css?family=Dosis:300,400,500,600,700|Source+Code+Pro:400,500|Source+Sans+Pro:400,600\');\n\n  html {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .font {\n    font-weight: 400;\n    color: #4B4C5B;\n  }\n\n  .font--lato {\n    font-family: \'Lato\', Helvetica, Verdana, sans-serif;\n  }\n\n  .font--lato-example {\n    font-size: 32px;\n    letter-spacing: 4.92px;\n    line-height: 40px;\n  }\n</style>\n\n## Lato\n\nThis is the default font.\n\n<div class="font font--lato font--lato-example">\n  ABCDEFGHIJKLMNOPQRSTUVWXYZ<br>\n  abcdefghijklmnopqrstuvwxyz<br>\n  123456789!"§$%&/()=?\n</div>\n\n## Headings\n\n<style>\n  .h1 {\n    font-family: \'Lato\', Helvetica, Verdana, sans-serif;\n    font-weight: 400;\n    font-size: 36px;\n    color: #4B4C5B;\n    letter-spacing: 0.35px;\n    line-height: 36px;\n  }\n\n  .h2 {\n    font-family: \'Lato\', Helvetica, Verdana, sans-serif;\n    font-weight: 500;\n    font-size: 28px;\n    color: #4B4C5B;\n    letter-spacing: 0.35px;\n    line-height: 36px;\n  }\n</style>\n\n```\n<h1>Heading Level 1</h1>\n<h2>Heading Level 2</h2>\n```\n\n<div class="h1">Heading Level 1</div>\n<br>\n<div class="h2">Heading Level 2</div>\n\n## Inline Elements\n\n### Link\n\n<style>\n  .link {\n    font-family: \'Lato\', Helvetica, Verdana, sans-serif;\n    font-weight: 400;\n    font-size: 16px;\n    color: #3D40F5;\n    letter-spacing: 0;\n  }\n</style>\n\n```\n<a href="#">This is a link</a>\n```\n\n<a class="link" href="#">This is a link</a>\n\n### Strong, bold\n\n<style>\n  .strong,\n  .bold {\n    font-family: \'Lato\', Helvetica, Verdana, sans-serif;\n    font-weight: 700;\n    text-align: left;\n    color: #4B4C5B;\n    font-size: 16px;\n    letter-spacing: 0.25px;\n  }\n</style>\n\n```\n<strong>This is a strong text</strong> or\n<b>This is a bold text</b>\n```\n\n<strong class="strong">This is strong text</strong><br>\n<b class="bold">This is a bold text</b>\n\n### em\n\n<style>\n  .em {\n    font-family: \'Lato\', Helvetica, Verdana, sans-serif;\n    font-weight: 400;\n    font-size: 16px;\n    color: #4B4C5B;\n    letter-spacing: 0.25px;\n  }\n</style>\n\n```\n<em>This is an emphasized text</em>\n```\n\n<em class="em">This is an emphasized text</em>\n\n### i\n\n<style>\n  .i {\n    font-family: \'Lato\', Helvetica, Verdana, sans-serif;\n    font-weight: 400;\n    font-size: 16px;\n    color: #4B4C5B;\n    letter-spacing: 0.25px;\n  }\n</style>\n\n```\n<i>This is an italic text</i>\n```\n\n<i class="i">This is an italic text</i>\n\n### small\n\n<style>\n  .small {\n    font-family: \'Lato\', Helvetica, Verdana, sans-serif;\n    font-weight: 400;\n    font-size: 13px;\n    color: #4B4C5B;\n    letter-spacing: 0.25px;\n  }\n</style>\n\n```\n<small>This is a small text</small>\n```\n\n<small class="small">This is a small text</small>\n\n### abbr\n\n<style>\n  .abbr {\n    font-family: \'Lato\', Helvetica, Verdana, sans-serif;\n    font-weight: 400;\n    font-size: 16px;\n    color: #4B4C5B;\n    letter-spacing: 0.25px;\n  }\n</style>\n\n```\n<abbr>This is an abbreviated text</abbr>\n```\n\n<abbr class="abbr">This is an abbreviated text</abbr>\n\n### Paragraph\n\n<style>\n  .paragraph {\n    font-family: \'Lato\', Helvetica, Verdana, sans-serif;\n    font-weight: 400;\n    font-size: 17px;\n    color: #636477;\n    letter-spacing: 0.25px;\n    line-height: 28px;\n  }\n</style>\n\n```\n<p>Nam porttitor blandit accumsan. Ut vel dictum sem, a pretium dui...</p>\n```\n\n<p class="paragraph">Nam porttitor blandit accumsan. Ut vel dictum sem, a pretium dui. In malesuada enim in dolor euismod, id commodo mi consectetur. Curabitur at vestibulum nisi. Nullam vehicula nisi velit. Mauris turpis nisl, molestie ut ipsum et, suscipit vehicula odio. Vestibulum interdum vestibulum felis ac molestie. Praesent aliquet quam et libero dictum, vitae dignissim leo eleifend. In in turpis turpis. Quisque justo turpis, vestibulum non enim nec, tempor mollis mi. Sed vel tristique quam.</p>')}},1344:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_chip_set_stories_DefaultUsage})),__webpack_require__.d(__webpack_exports__,"InoChip",(function(){return ino_chip_set_stories_InoChip}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1267);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Buttons/<ino-chip-set>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport chipSetReadme from \'_local-elements/src/components/ino-chip-set/readme.md\';\\nimport chipReadme from \'_local-elements/src/components/ino-chip/readme.md\';\\nimport \'./ino-chip-set.scss\';\\n\\nexport default {\\n  title: \'Buttons/<ino-chip-set>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'removeChip\']\\n    }\\n  }\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-chips\\">\\n  <h4>Customizable chip set</h4>\\n  <p>Change the type and check the action logger for events.</p>\\n  <ino-chip-set\\n    ino-type=\\"${select(\'ino-type\', [\'\', \'choice\', \'filter\'], \'\')}\\"\\n    class=\\"customizable-chip-set\\"\\n  >\\n    <ino-chip ino-value=\\"1\\" ino-label=\\"Chip 1\\" ino-icon=\\"favorite\\" ino-selected></ino-chip>\\n    <ino-chip ino-value=\\"2\\" ino-label=\\"Chip 2\\"></ino-chip>\\n    <ino-chip ino-value=\\"3\\" ino-label=\\"Chip 3\\"></ino-chip>\\n  </ino-chip-set>\\n\\n  <h4>Type</h4>\\n\\n  <h5>ino-type=\\"filter\\"</h5>\\n\\n  <ino-chip-set ino-type=\\"filter\\">\\n    <ino-chip ino-value=\\"1\\" ino-label=\\"Chip 1\\"></ino-chip>\\n    <ino-chip ino-value=\\"2\\" ino-label=\\"Chip 2 - with icon\\" ino-icon=\\"favorite\\"></ino-chip>\\n    <ino-chip ino-value=\\"3\\" ino-label=\\"Chip 3\\"></ino-chip>\\n  </ino-chip-set>\\n\\n  <h5>ino-type=\\"choice\\"</h5>\\n  <ino-chip-set ino-type=\\"choice\\">\\n    <ino-chip ino-label=\\"Chip 0\\" ino-value=\\"0\\"></ino-chip>\\n    <ino-chip ino-selected ino-label=\\"Selected chip\\" ino-value=\\"3\\"></ino-chip>\\n    <ino-chip ino-label=\\"Chip 3\\" ino-value=\\"3\\"></ino-chip>\\n  </ino-chip-set>\\n</div>\\n`;\\n\\nDefaultUsage.decorators = [\\n  withStencilReadme(chipSetReadme),\\n];\\n\\nexport const InoChip = () => /*html*/ `\\n<div class=\\"story-chip\\">\\n  <ino-chip-set ino-type=\\"choice\\">\\n    <ino-chip\\n      class=\\"customizable-chip\\"\\n      ino-color-scheme=\\"${select(\\n  \'ino-color-scheme\',\\n  [\\n    \'\',\\n    \'primary\',\\n    \'secondary\',\\n    \'success\',\\n    \'warning\',\\n    \'error\',\\n    \'light\',\\n    \'dark\'\\n  ],\\n  \'\'\\n)}\\"\\n      ino-fill=\\"${select(\'ino-fill\', [\'solid\', \'outline\'], \'solid\')}\\"\\n      ino-icon=\\"${text(\'ino-icon\', \'\')}\\"\\n      ino-removable=\\"${boolean(\'ino-removable\', true)}\\"\\n      ino-selected=\\"${boolean(\'ino-selected\', false)}\\"\\n      ino-selectable=\\"${boolean(\'ino-selectable\', false)}\\"\\n      ino-label=\\"${text(\'<slot />\', \'Customizable chip\')}\\"\\n    </ino-chip>\\n  </ino-chip-set>\\n\\n  <h4>Colors</h4>\\n  <ino-chip-set>\\n    <ino-chip ino-label=\\"Default\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"primary\\" ino-label=\\"Primary\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"secondary\\" ino-label=\\"Secondary\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"success\\" ino-label=\\"Success\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"warning\\" ino-label=\\"Warning\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"error\\" ino-label=\\"Error\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"light\\" ino-label=\\"Light\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"dark\\" ino-label=\\"Dark\\"></ino-chip>\\n  </ino-chip-set>\\n\\n\\n  <h4>Outline</h4>\\n  <ino-chip-set>\\n    <ino-chip ino-fill=\\"outline\\" ino-label=\\"Outline\\"></ino-chip>\\n    <ino-chip ino-fill=\\"outline\\" ino-label=\\"Primary\\" ino-color-scheme=\\"primary\\"></ino-chip>\\n    <ino-chip ino-fill=\\"outline\\" ino-label=\\"Secondary\\" ino-color-scheme=\\"secondary\\"></ino-chip>\\n  </ino-chip-set>\\n\\n  <h4>With Icon</h4>\\n  <ino-chip-set>\\n    <ino-chip ino-color-scheme=\\"primary\\" ino-label=\\"Primary\\" ino-icon=\\"close\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"secondary\\" ino-label=\\"Secondary\\" ino-icon=\\"close\\"></ino-chip>\\n  </ino-chip-set>\\n\\n  <h4>Removable and states</h4>\\n  <ino-chip-set>\\n    <ino-chip ino-color-scheme=\\"primary\\" ino-removable ino-label=\\"Removable\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"primary\\" ino-selected ino-label=\\"Selected\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"primary\\" ino-selected ino-label=\\"Selected with Checkmark\\" ino-selectable></ino-chip>\\n  </ino-chip-set>\\n</div>\\n`;\\n\\nInoChip.storyName = \'<ino-chip>\';\\nInoChip.decorators = [\\n  withStencilReadme(chipReadme)\\n];\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":18},"endLoc":{"col":1,"line":48},"startBody":{"col":28,"line":18},"endBody":{"col":1,"line":48}},"InoChip":{"startLoc":{"col":23,"line":54},"endLoc":{"col":1,"line":115},"startBody":{"col":23,"line":54},"endBody":{"col":1,"line":115}}};\n    \nimport { boolean, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport chipSetReadme from \'_local-elements/src/components/ino-chip-set/readme.md\';\nimport chipReadme from \'_local-elements/src/components/ino-chip/readme.md\';\nimport \'./ino-chip-set.scss\';\n\nexport default {\n  title: \'Buttons/<ino-chip-set>\',\n  parameters: {"storySource":{"source":"import { boolean, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport chipSetReadme from \'_local-elements/src/components/ino-chip-set/readme.md\';\\nimport chipReadme from \'_local-elements/src/components/ino-chip/readme.md\';\\nimport \'./ino-chip-set.scss\';\\n\\nexport default {\\n  title: \'Buttons/<ino-chip-set>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'removeChip\']\\n    }\\n  }\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-chips\\">\\n  <h4>Customizable chip set</h4>\\n  <p>Change the type and check the action logger for events.</p>\\n  <ino-chip-set\\n    ino-type=\\"${select(\'ino-type\', [\'\', \'choice\', \'filter\'], \'\')}\\"\\n    class=\\"customizable-chip-set\\"\\n  >\\n    <ino-chip ino-value=\\"1\\" ino-label=\\"Chip 1\\" ino-icon=\\"favorite\\" ino-selected></ino-chip>\\n    <ino-chip ino-value=\\"2\\" ino-label=\\"Chip 2\\"></ino-chip>\\n    <ino-chip ino-value=\\"3\\" ino-label=\\"Chip 3\\"></ino-chip>\\n  </ino-chip-set>\\n\\n  <h4>Type</h4>\\n\\n  <h5>ino-type=\\"filter\\"</h5>\\n\\n  <ino-chip-set ino-type=\\"filter\\">\\n    <ino-chip ino-value=\\"1\\" ino-label=\\"Chip 1\\"></ino-chip>\\n    <ino-chip ino-value=\\"2\\" ino-label=\\"Chip 2 - with icon\\" ino-icon=\\"favorite\\"></ino-chip>\\n    <ino-chip ino-value=\\"3\\" ino-label=\\"Chip 3\\"></ino-chip>\\n  </ino-chip-set>\\n\\n  <h5>ino-type=\\"choice\\"</h5>\\n  <ino-chip-set ino-type=\\"choice\\">\\n    <ino-chip ino-label=\\"Chip 0\\" ino-value=\\"0\\"></ino-chip>\\n    <ino-chip ino-selected ino-label=\\"Selected chip\\" ino-value=\\"3\\"></ino-chip>\\n    <ino-chip ino-label=\\"Chip 3\\" ino-value=\\"3\\"></ino-chip>\\n  </ino-chip-set>\\n</div>\\n`;\\n\\nDefaultUsage.decorators = [\\n  withStencilReadme(chipSetReadme),\\n];\\n\\nexport const InoChip = () => /*html*/ `\\n<div class=\\"story-chip\\">\\n  <ino-chip-set ino-type=\\"choice\\">\\n    <ino-chip\\n      class=\\"customizable-chip\\"\\n      ino-color-scheme=\\"${select(\\n  \'ino-color-scheme\',\\n  [\\n    \'\',\\n    \'primary\',\\n    \'secondary\',\\n    \'success\',\\n    \'warning\',\\n    \'error\',\\n    \'light\',\\n    \'dark\'\\n  ],\\n  \'\'\\n)}\\"\\n      ino-fill=\\"${select(\'ino-fill\', [\'solid\', \'outline\'], \'solid\')}\\"\\n      ino-icon=\\"${text(\'ino-icon\', \'\')}\\"\\n      ino-removable=\\"${boolean(\'ino-removable\', true)}\\"\\n      ino-selected=\\"${boolean(\'ino-selected\', false)}\\"\\n      ino-selectable=\\"${boolean(\'ino-selectable\', false)}\\"\\n      ino-label=\\"${text(\'<slot />\', \'Customizable chip\')}\\"\\n    </ino-chip>\\n  </ino-chip-set>\\n\\n  <h4>Colors</h4>\\n  <ino-chip-set>\\n    <ino-chip ino-label=\\"Default\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"primary\\" ino-label=\\"Primary\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"secondary\\" ino-label=\\"Secondary\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"success\\" ino-label=\\"Success\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"warning\\" ino-label=\\"Warning\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"error\\" ino-label=\\"Error\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"light\\" ino-label=\\"Light\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"dark\\" ino-label=\\"Dark\\"></ino-chip>\\n  </ino-chip-set>\\n\\n\\n  <h4>Outline</h4>\\n  <ino-chip-set>\\n    <ino-chip ino-fill=\\"outline\\" ino-label=\\"Outline\\"></ino-chip>\\n    <ino-chip ino-fill=\\"outline\\" ino-label=\\"Primary\\" ino-color-scheme=\\"primary\\"></ino-chip>\\n    <ino-chip ino-fill=\\"outline\\" ino-label=\\"Secondary\\" ino-color-scheme=\\"secondary\\"></ino-chip>\\n  </ino-chip-set>\\n\\n  <h4>With Icon</h4>\\n  <ino-chip-set>\\n    <ino-chip ino-color-scheme=\\"primary\\" ino-label=\\"Primary\\" ino-icon=\\"close\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"secondary\\" ino-label=\\"Secondary\\" ino-icon=\\"close\\"></ino-chip>\\n  </ino-chip-set>\\n\\n  <h4>Removable and states</h4>\\n  <ino-chip-set>\\n    <ino-chip ino-color-scheme=\\"primary\\" ino-removable ino-label=\\"Removable\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"primary\\" ino-selected ino-label=\\"Selected\\"></ino-chip>\\n    <ino-chip ino-color-scheme=\\"primary\\" ino-selected ino-label=\\"Selected with Checkmark\\" ino-selectable></ino-chip>\\n  </ino-chip-set>\\n</div>\\n`;\\n\\nInoChip.storyName = \'<ino-chip>\';\\nInoChip.decorators = [\\n  withStencilReadme(chipReadme)\\n];\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":18},"endLoc":{"col":1,"line":48},"startBody":{"col":28,"line":18},"endBody":{"col":1,"line":48}},"ino-chip":{"startLoc":{"col":23,"line":54},"endLoc":{"col":1,"line":115},"startBody":{"col":23,"line":54},"endBody":{"col":1,"line":115}}}},\n    actions: {\n      handles: [\'removeChip\']\n    }\n  },};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-chips">\n  <h4>Customizable chip set</h4>\n  <p>Change the type and check the action logger for events.</p>\n  <ino-chip-set\n    ino-type="${select(\'ino-type\', [\'\', \'choice\', \'filter\'], \'\')}"\n    class="customizable-chip-set"\n  >\n    <ino-chip ino-value="1" ino-label="Chip 1" ino-icon="favorite" ino-selected></ino-chip>\n    <ino-chip ino-value="2" ino-label="Chip 2"></ino-chip>\n    <ino-chip ino-value="3" ino-label="Chip 3"></ino-chip>\n  </ino-chip-set>\n\n  <h4>Type</h4>\n\n  <h5>ino-type="filter"</h5>\n\n  <ino-chip-set ino-type="filter">\n    <ino-chip ino-value="1" ino-label="Chip 1"></ino-chip>\n    <ino-chip ino-value="2" ino-label="Chip 2 - with icon" ino-icon="favorite"></ino-chip>\n    <ino-chip ino-value="3" ino-label="Chip 3"></ino-chip>\n  </ino-chip-set>\n\n  <h5>ino-type="choice"</h5>\n  <ino-chip-set ino-type="choice">\n    <ino-chip ino-label="Chip 0" ino-value="0"></ino-chip>\n    <ino-chip ino-selected ino-label="Selected chip" ino-value="3"></ino-chip>\n    <ino-chip ino-label="Chip 3" ino-value="3"></ino-chip>\n  </ino-chip-set>\n</div>\n`;;\n\nDefaultUsage.decorators = [\n  withStencilReadme(chipSetReadme),\n];\n\nexport const InoChip = () => /*html*/ `\n<div class="story-chip">\n  <ino-chip-set ino-type="choice">\n    <ino-chip\n      class="customizable-chip"\n      ino-color-scheme="${select(\n  \'ino-color-scheme\',\n  [\n    \'\',\n    \'primary\',\n    \'secondary\',\n    \'success\',\n    \'warning\',\n    \'error\',\n    \'light\',\n    \'dark\'\n  ],\n  \'\'\n)}"\n      ino-fill="${select(\'ino-fill\', [\'solid\', \'outline\'], \'solid\')}"\n      ino-icon="${text(\'ino-icon\', \'\')}"\n      ino-removable="${boolean(\'ino-removable\', true)}"\n      ino-selected="${boolean(\'ino-selected\', false)}"\n      ino-selectable="${boolean(\'ino-selectable\', false)}"\n      ino-label="${text(\'<slot />\', \'Customizable chip\')}"\n    </ino-chip>\n  </ino-chip-set>\n\n  <h4>Colors</h4>\n  <ino-chip-set>\n    <ino-chip ino-label="Default"></ino-chip>\n    <ino-chip ino-color-scheme="primary" ino-label="Primary"></ino-chip>\n    <ino-chip ino-color-scheme="secondary" ino-label="Secondary"></ino-chip>\n    <ino-chip ino-color-scheme="success" ino-label="Success"></ino-chip>\n    <ino-chip ino-color-scheme="warning" ino-label="Warning"></ino-chip>\n    <ino-chip ino-color-scheme="error" ino-label="Error"></ino-chip>\n    <ino-chip ino-color-scheme="light" ino-label="Light"></ino-chip>\n    <ino-chip ino-color-scheme="dark" ino-label="Dark"></ino-chip>\n  </ino-chip-set>\n\n\n  <h4>Outline</h4>\n  <ino-chip-set>\n    <ino-chip ino-fill="outline" ino-label="Outline"></ino-chip>\n    <ino-chip ino-fill="outline" ino-label="Primary" ino-color-scheme="primary"></ino-chip>\n    <ino-chip ino-fill="outline" ino-label="Secondary" ino-color-scheme="secondary"></ino-chip>\n  </ino-chip-set>\n\n  <h4>With Icon</h4>\n  <ino-chip-set>\n    <ino-chip ino-color-scheme="primary" ino-label="Primary" ino-icon="close"></ino-chip>\n    <ino-chip ino-color-scheme="secondary" ino-label="Secondary" ino-icon="close"></ino-chip>\n  </ino-chip-set>\n\n  <h4>Removable and states</h4>\n  <ino-chip-set>\n    <ino-chip ino-color-scheme="primary" ino-removable ino-label="Removable"></ino-chip>\n    <ino-chip ino-color-scheme="primary" ino-selected ino-label="Selected"></ino-chip>\n    <ino-chip ino-color-scheme="primary" ino-selected ino-label="Selected with Checkmark" ino-selectable></ino-chip>\n  </ino-chip-set>\n</div>\n`;\n\nInoChip.storyName = \'<ino-chip>\';\nInoChip.decorators = [\n  withStencilReadme(chipReadme)\n];\n',locationsMap:{"default-usage":{startLoc:{col:28,line:25},endLoc:{col:1,line:55},startBody:{col:28,line:25},endBody:{col:1,line:55}},"ino-chip":{startLoc:{col:23,line:61},endLoc:{col:1,line:122},startBody:{col:23,line:61},endBody:{col:1,line:122}}}}},_defineProperty(_parameters,"storySource",{source:'import { boolean, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport chipSetReadme from \'_local-elements/src/components/ino-chip-set/readme.md\';\nimport chipReadme from \'_local-elements/src/components/ino-chip/readme.md\';\nimport \'./ino-chip-set.scss\';\n\nexport default {\n  title: \'Buttons/<ino-chip-set>\',\n  parameters: {\n    actions: {\n      handles: [\'removeChip\']\n    }\n  }\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-chips">\n  <h4>Customizable chip set</h4>\n  <p>Change the type and check the action logger for events.</p>\n  <ino-chip-set\n    ino-type="${select(\'ino-type\', [\'\', \'choice\', \'filter\'], \'\')}"\n    class="customizable-chip-set"\n  >\n    <ino-chip ino-value="1" ino-label="Chip 1" ino-icon="favorite" ino-selected></ino-chip>\n    <ino-chip ino-value="2" ino-label="Chip 2"></ino-chip>\n    <ino-chip ino-value="3" ino-label="Chip 3"></ino-chip>\n  </ino-chip-set>\n\n  <h4>Type</h4>\n\n  <h5>ino-type="filter"</h5>\n\n  <ino-chip-set ino-type="filter">\n    <ino-chip ino-value="1" ino-label="Chip 1"></ino-chip>\n    <ino-chip ino-value="2" ino-label="Chip 2 - with icon" ino-icon="favorite"></ino-chip>\n    <ino-chip ino-value="3" ino-label="Chip 3"></ino-chip>\n  </ino-chip-set>\n\n  <h5>ino-type="choice"</h5>\n  <ino-chip-set ino-type="choice">\n    <ino-chip ino-label="Chip 0" ino-value="0"></ino-chip>\n    <ino-chip ino-selected ino-label="Selected chip" ino-value="3"></ino-chip>\n    <ino-chip ino-label="Chip 3" ino-value="3"></ino-chip>\n  </ino-chip-set>\n</div>\n`;\n\nDefaultUsage.decorators = [\n  withStencilReadme(chipSetReadme),\n];\n\nexport const InoChip = () => /*html*/ `\n<div class="story-chip">\n  <ino-chip-set ino-type="choice">\n    <ino-chip\n      class="customizable-chip"\n      ino-color-scheme="${select(\n  \'ino-color-scheme\',\n  [\n    \'\',\n    \'primary\',\n    \'secondary\',\n    \'success\',\n    \'warning\',\n    \'error\',\n    \'light\',\n    \'dark\'\n  ],\n  \'\'\n)}"\n      ino-fill="${select(\'ino-fill\', [\'solid\', \'outline\'], \'solid\')}"\n      ino-icon="${text(\'ino-icon\', \'\')}"\n      ino-removable="${boolean(\'ino-removable\', true)}"\n      ino-selected="${boolean(\'ino-selected\', false)}"\n      ino-selectable="${boolean(\'ino-selectable\', false)}"\n      ino-label="${text(\'<slot />\', \'Customizable chip\')}"\n    </ino-chip>\n  </ino-chip-set>\n\n  <h4>Colors</h4>\n  <ino-chip-set>\n    <ino-chip ino-label="Default"></ino-chip>\n    <ino-chip ino-color-scheme="primary" ino-label="Primary"></ino-chip>\n    <ino-chip ino-color-scheme="secondary" ino-label="Secondary"></ino-chip>\n    <ino-chip ino-color-scheme="success" ino-label="Success"></ino-chip>\n    <ino-chip ino-color-scheme="warning" ino-label="Warning"></ino-chip>\n    <ino-chip ino-color-scheme="error" ino-label="Error"></ino-chip>\n    <ino-chip ino-color-scheme="light" ino-label="Light"></ino-chip>\n    <ino-chip ino-color-scheme="dark" ino-label="Dark"></ino-chip>\n  </ino-chip-set>\n\n\n  <h4>Outline</h4>\n  <ino-chip-set>\n    <ino-chip ino-fill="outline" ino-label="Outline"></ino-chip>\n    <ino-chip ino-fill="outline" ino-label="Primary" ino-color-scheme="primary"></ino-chip>\n    <ino-chip ino-fill="outline" ino-label="Secondary" ino-color-scheme="secondary"></ino-chip>\n  </ino-chip-set>\n\n  <h4>With Icon</h4>\n  <ino-chip-set>\n    <ino-chip ino-color-scheme="primary" ino-label="Primary" ino-icon="close"></ino-chip>\n    <ino-chip ino-color-scheme="secondary" ino-label="Secondary" ino-icon="close"></ino-chip>\n  </ino-chip-set>\n\n  <h4>Removable and states</h4>\n  <ino-chip-set>\n    <ino-chip ino-color-scheme="primary" ino-removable ino-label="Removable"></ino-chip>\n    <ino-chip ino-color-scheme="primary" ino-selected ino-label="Selected"></ino-chip>\n    <ino-chip ino-color-scheme="primary" ino-selected ino-label="Selected with Checkmark" ino-selectable></ino-chip>\n  </ino-chip-set>\n</div>\n`;\n\nInoChip.storyName = \'<ino-chip>\';\nInoChip.decorators = [\n  withStencilReadme(chipReadme)\n];\n',locationsMap:{"default-usage":{startLoc:{col:28,line:18},endLoc:{col:1,line:48},startBody:{col:28,line:18},endBody:{col:1,line:48}},"ino-chip":{startLoc:{col:23,line:54},endLoc:{col:1,line:115},startBody:{col:23,line:54},endBody:{col:1,line:115}}}}),_defineProperty(_parameters,"actions",{handles:["removeChip"]}),_parameters)};var ino_chip_set_stories_DefaultUsage=function DefaultUsage(){return'\n<div class="story-chips">\n  <h4>Customizable chip set</h4>\n  <p>Change the type and check the action logger for events.</p>\n  <ino-chip-set\n    ino-type="'.concat(Object(dist.select)("ino-type",["","choice","filter"],""),'"\n    class="customizable-chip-set"\n  >\n    <ino-chip ino-value="1" ino-label="Chip 1" ino-icon="favorite" ino-selected></ino-chip>\n    <ino-chip ino-value="2" ino-label="Chip 2"></ino-chip>\n    <ino-chip ino-value="3" ino-label="Chip 3"></ino-chip>\n  </ino-chip-set>\n\n  <h4>Type</h4>\n\n  <h5>ino-type="filter"</h5>\n\n  <ino-chip-set ino-type="filter">\n    <ino-chip ino-value="1" ino-label="Chip 1"></ino-chip>\n    <ino-chip ino-value="2" ino-label="Chip 2 - with icon" ino-icon="favorite"></ino-chip>\n    <ino-chip ino-value="3" ino-label="Chip 3"></ino-chip>\n  </ino-chip-set>\n\n  <h5>ino-type="choice"</h5>\n  <ino-chip-set ino-type="choice">\n    <ino-chip ino-label="Chip 0" ino-value="0"></ino-chip>\n    <ino-chip ino-selected ino-label="Selected chip" ino-value="3"></ino-chip>\n    <ino-chip ino-label="Chip 3" ino-value="3"></ino-chip>\n  </ino-chip-set>\n</div>\n')};ino_chip_set_stories_DefaultUsage.decorators=[Object(with_stencil_readme.a)('# ino-chip-set\n\nThe ino-chip-set is a wrapper component for `ino-chip` components. It enables the user to filter content,\nselect a choice, or trigger an action.\n\n> See the `ino-chip` documentation for more details about a single instance of a chip.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n  .querySelector(\'ino-chip-set\')\n  .addEventListener(\'updateChipSet\', e =>\n    alert(\n      `The selected chip values are (only when ino-type=\'filter\' or \'choice\'): ${\n        e.detail\n      }`\n    )\n  );\n```\n\n```html\n<ino-chip-set ino-type="<string>">\n  <ino-chip ...></ino-chip>\n  <ino-chip ...></ino-chip>\n  ...\n</ino-chip-set>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoChipSet, InoChip } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  chipsetSelectionChange(e: any) {\n    console.log(\n      e.detail === true\n        ? \'The last one was toggled\'\n        : `User clicked: ${e.detail}`\n    );\n  }\n\n  render() {\n    return (\n      <InoChipSet\n        inoType="choice"\n        onUpdateChipSet={this.chipsetSelectionChange}\n      >\n        <InoChip inoValue="apple" inoLabel="Apple" />\n        <InoChip inoValue="banana" inoLabel="Banana" />\n        <InoChip inoValue="cherry" inoLabel="Cherry" />\n      </InoChipSet>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoChipSet, InoChip } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst ChipSet: React.FunctionComponent<Components.InoChipSetAttributes> = props => {\n  const { inoType } = props;\n\n  const chipsetSelectionChange = (e: any) => {\n    console.log(\n      e.detail === true\n        ? \'The last one was toggled\'\n        : `User clicked: ${e.detail}`\n    );\n  };\n\n  return (\n    <InoChipSet inoType={inoType} onUpdateChipSet={chipsetSelectionChange}>\n      <InoChip inoValue="apple" inoLabel="Apple" />\n      <InoChip inoValue="banana" inoLabel="Banana" />\n      <InoChip inoValue="cherry" inoLabel="Cherry" />\n    </InoChipSet>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return <ChipSet inoType="choice" />;\n  }\n}\n```\n\n## Additional Hints\n\n### Simple chip sets\n\n`chip sets` can be a simple composer for one or more chips. If you want to style content as a chip (e.g. email addresses), simply exclude the `ino-type` attribute.\n\n```html\n<ino-chip-set>\n  <ino-chip ino-label="Default chip"></ino-chip>\n  <ino-chip ino-label="Removable" ino-removable onRemoveChip={_ => removeChip()}></ino-chip>\n</ino-chip-set>\n```\n\n> See `<ino-chip>` docs for more details on capabilities of single chips.\n\n### Chip sets as form elements\n\nThere are two complex types of chip sets:\n\n- **`ino-type="choice"`**: Choice chips mimic the behaviour of a radio button and allow the selection of a single option from a set of options.\n- **`ino-type="filter"`**: Filter chips mimic the behaviour of a checkbox and allow multiple options to be selected from a set of options.\n\nBoth choice and filter chip sets emit an `updateChipSet` event when a user selects or deselects a chip. The `CustomEvent` contains a property `detail` which, in turn, contains one or multiple chip values. The values are provided via the `ino-value` attribute of each `ino-chip`.\n\n```js\ndocument.querySelector(\'ino-chip-set\').addEventListener(\'updateChipSet\', e => {\n  // console.log(e.detail)\n});\n```\n\n```html\n<ino-chip-set ino-type="choice">\n  <ino-chip ino-label="Chip 1" ino-value="Apple"></ino-chip>\n  <ino-chip ino-label="Chip 2" ino-value="Banana"></ino-chip>\n</ino-chip-set>\n```\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property  | Attribute  | Description                                                                                                             | Type                                    | Default |\n| --------- | ---------- | ----------------------------------------------------------------------------------------------------------------------- | --------------------------------------- | ------- |\n| `inoType` | `ino-type` | The type of this chip set that indicates its behavior. Possible values are: `\'\'` (default), `choice`, `filter`, `input` | `"" \\| "choice" \\| "filter" \\| "input"` | `\'\'`    |\n\n\n## Events\n\n| Event           | Description                                                                                                     | Type               |\n| --------------- | --------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `updateChipSet` | Event that emits when the value of this element changes.  Only applicable if `inoType` is `choice` or `filter`. | `CustomEvent<any>` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')];var ino_chip_set_stories_InoChip=function InoChip(){return'\n<div class="story-chip">\n  <ino-chip-set ino-type="choice">\n    <ino-chip\n      class="customizable-chip"\n      ino-color-scheme="'.concat(Object(dist.select)("ino-color-scheme",["","primary","secondary","success","warning","error","light","dark"],""),'"\n      ino-fill="').concat(Object(dist.select)("ino-fill",["solid","outline"],"solid"),'"\n      ino-icon="').concat(Object(dist.text)("ino-icon",""),'"\n      ino-removable="').concat(Object(dist.boolean)("ino-removable",!0),'"\n      ino-selected="').concat(Object(dist.boolean)("ino-selected",!1),'"\n      ino-selectable="').concat(Object(dist.boolean)("ino-selectable",!1),'"\n      ino-label="').concat(Object(dist.text)("<slot />","Customizable chip"),'"\n    </ino-chip>\n  </ino-chip-set>\n\n  <h4>Colors</h4>\n  <ino-chip-set>\n    <ino-chip ino-label="Default"></ino-chip>\n    <ino-chip ino-color-scheme="primary" ino-label="Primary"></ino-chip>\n    <ino-chip ino-color-scheme="secondary" ino-label="Secondary"></ino-chip>\n    <ino-chip ino-color-scheme="success" ino-label="Success"></ino-chip>\n    <ino-chip ino-color-scheme="warning" ino-label="Warning"></ino-chip>\n    <ino-chip ino-color-scheme="error" ino-label="Error"></ino-chip>\n    <ino-chip ino-color-scheme="light" ino-label="Light"></ino-chip>\n    <ino-chip ino-color-scheme="dark" ino-label="Dark"></ino-chip>\n  </ino-chip-set>\n\n\n  <h4>Outline</h4>\n  <ino-chip-set>\n    <ino-chip ino-fill="outline" ino-label="Outline"></ino-chip>\n    <ino-chip ino-fill="outline" ino-label="Primary" ino-color-scheme="primary"></ino-chip>\n    <ino-chip ino-fill="outline" ino-label="Secondary" ino-color-scheme="secondary"></ino-chip>\n  </ino-chip-set>\n\n  <h4>With Icon</h4>\n  <ino-chip-set>\n    <ino-chip ino-color-scheme="primary" ino-label="Primary" ino-icon="close"></ino-chip>\n    <ino-chip ino-color-scheme="secondary" ino-label="Secondary" ino-icon="close"></ino-chip>\n  </ino-chip-set>\n\n  <h4>Removable and states</h4>\n  <ino-chip-set>\n    <ino-chip ino-color-scheme="primary" ino-removable ino-label="Removable"></ino-chip>\n    <ino-chip ino-color-scheme="primary" ino-selected ino-label="Selected"></ino-chip>\n    <ino-chip ino-color-scheme="primary" ino-selected ino-label="Selected with Checkmark" ino-selectable></ino-chip>\n  </ino-chip-set>\n</div>\n')};ino_chip_set_stories_InoChip.storyName="<ino-chip>",ino_chip_set_stories_InoChip.decorators=[Object(with_stencil_readme.a)('# ino-chip\n\nThe ino-chip component displays the provided content and icon as a chip.\n\n> An ino-chip component must **always** belong to a `ino-chip-set` component.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n  .querySelector(\'ino-chip\')\n  .addEventListener(\'removeChip\', e =>\n    console.log(\'This chip will be removed\', e.detail)\n  );\n```\n\n```html\n<ino-chip\n  ino-color-scheme="<string>"\n  ino-fill="<string>"\n  ino-icon="<string>"\n  ino-label="<string>"\n  ino-removable\n  ino-selectable\n  ino-selected\n  ino-value="<string>"\n>\n</ino-chip>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoChipSet, InoChip } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  chipsetSelectionChange(e: any) {\n    console.log(\n      e.detail === true\n        ? \'The last one was toggled\'\n        : `User clicked: ${e.detail}`\n    );\n  }\n\n  render() {\n    return (\n      <InoChipSet\n        inoType="choice"\n        onUpdateChipSet={this.chipsetSelectionChange}\n      >\n        <InoChip inoValue="apple" inoLabel="Apple" />\n        <InoChip inoValue="banana" inoLabel="Banana" />\n        <InoChip inoValue="cherry" inoLabel="Cherry" />\n      </InoChipSet>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoChipSet, InoChip } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst ChipSet: React.FunctionComponent<Components.InoChipSetAttributes> = props => {\n  const { inoType } = props;\n\n  const chipsetSelectionChange = (e: any) => {\n    console.log(\n      e.detail === true\n        ? \'The last one was toggled\'\n        : `User clicked: ${e.detail}`\n    );\n  };\n\n  return (\n    <InoChipSet inoType={inoType} onUpdateChipSet={chipsetSelectionChange}>\n      <InoChip inoValue="apple" inoLabel="Apple" />\n      <InoChip inoValue="banana" inoLabel="Banana" />\n      <InoChip inoValue="cherry" inoLabel="Cherry" />\n    </InoChipSet>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return <ChipSet inoType="choice" />;\n  }\n}\n```\n\n## Additional Hints\n\n**Content**: Use the `ino-label` attribute to set the label of the chip. To add an icon to the left side of the chip, use the `ino-icon` attribute.\n\n**Styling**: The chip can be styled in many different ways with the help of the `ino-fill` and `ino-color-scheme` attributes. \nTake a look at the attribute documentation at the bottom of the page for further information. \n\n### Removable chips\n\nIf `ino-removable` is set to `true`, the chip can be removed by the user. The component then displays a small `close` icon on the right side of the chip next to the label.\n\nHowever, the component will not be hidden or destroyed but instead emits a `removeChip`-Event. Thus, the component can be removed by subscribing to the corresponding event.\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property         | Attribute          | Description                                                                                                                                                                                | Type                                                                                 | Default     |\n| ---------------- | ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------ | ----------- |\n| `inoColorScheme` | `ino-color-scheme` | The name of the color scheme which is used to style the background and outline of this component. Possible values: `primary`, `secondary`, `success`, `warning`, `error`, `light`, `dark`. | `"dark" \\| "error" \\| "light" \\| "primary" \\| "secondary" \\| "success" \\| "warning"` | `undefined` |\n| `inoFill`        | `ino-fill`         | The fill type of this element. Possible values: `solid` (default) or `outline`.                                                                                                            | `"outline" \\| "solid"`                                                               | `\'solid\'`   |\n| `inoIcon`        | `ino-icon`         | The icon before the label in this chip.                                                                                                                                                    | `string`                                                                             | `undefined` |\n| `inoLabel`       | `ino-label`        | The label of this chip (**required**).                                                                                                                                                     | `string`                                                                             | `undefined` |\n| `inoRemovable`   | `ino-removable`    | Adds a close icon on the right side of this chip.  If applied, emits the `removeChip` event.                                                                                               | `boolean`                                                                            | `undefined` |\n| `inoSelectable`  | `ino-selectable`   | Adds a checkmark if the icon is selected.                                                                                                                                                  | `boolean`                                                                            | `undefined` |\n| `inoSelected`    | `ino-selected`     | Marks this element as selected.                                                                                                                                                            | `boolean`                                                                            | `undefined` |\n| `inoValue`       | `ino-value`        | The value of this chip.  **Required** for chips as part of sets of type `filter` or `choice`.                                                                                              | `string`                                                                             | `undefined` |\n\n\n## Events\n\n| Event        | Description                                                                                                                                                              | Type               |\n| ------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------ |\n| `removeChip` | Event that emits as soon as the user removes this chip.  Listen to this event to hide or destroy this chip. The event only emits if the property `inoRemovable` is true. | `CustomEvent<any>` |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-icon](../ino-icon)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-chip --\x3e ino-icon\n  style ino-chip fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')]},1345:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_switch_stories_DefaultUsage}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2),INO_COLOR_SCHEMES=(__webpack_require__(1322),["primary","secondary","success","warning","error","light","dark"]);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:"\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import { boolean, select, text } from '@storybook/addon-knobs';\\n\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\n\\nimport componentReadme from '_local-elements/src/components/ino-switch/readme.md';\\nimport './ino-switch.scss';\\nimport { INO_COLOR_SCHEMES } from '../../core/helpers/constants';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n\\n    if (el.tagName.toLowerCase() !== 'ino-switch' || el.id !== 'custom-switch') {\\n      return;\\n    }\\n\\n    el.setAttribute('checked', e.detail);\\n  };\\n\\n  document.addEventListener('checkedChange', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener('checkedChange', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: 'Input/<ino-switch>',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div>\\n<h4>Customizable ino-switch</h4>\\n<div>\\n  <style>\\n      ino-switch.customizable-switch {\\n        --switch-toggled-on-color: ${text('--switch-toggled-on-color', '#3d40f5', 'Custom Properties')};\\n        --switch-toggled-on-thumb-color: ${text('--switch-toggled-on-thumb-color', '#3d40f5', 'Custom Properties')};\\n        --switch-toggled-on-track-color: ${text('--switch-toggled-on-track-color', '#5d60f7', 'Custom Properties')};\\n        --switch-toggled-off-color: ${text('--switch-toggled-off-color', '#c1c1c1', 'Custom Properties')};\\n        --switch-toggled-off-thumb-color: ${text('--switch-toggled-off-thumb-color', '#fff', 'Custom Properties')};\\n        --switch-toggled-off-track-color: ${text('--switch-toggled-off-track-color', '#777777', 'Custom Properties')};\\n        --switch-hover-color: ${text('--switch-hover-color', '#5d60f7', 'Custom Properties')};\\n        --switch-hover-thumb-color: ${text('--switch-hover-thumb-color', '#fff', 'Custom Properties')};\\n        --switch-hover-track-color: ${text('--switch-hover-track-color', '#5d60f7', 'Custom Properties')};\\n        --switch-active-color: ${text('--switch-active-color', '#0d10f3', 'Custom Properties')};\\n        --switch-active-thumb-color: ${text('--switch-active-thumb-color', '#fff', 'Custom Properties')};\\n        --switch-active-track-color: ${text('--switch-active-track-color', '#0d10f3', 'Custom Properties')};\\n        --switch-disabled-color: ${text('--switch-disabled-color', '#c1c1c1', 'Custom Properties')};\\n        --switch-disabled-thumb-color: ${text('--switch-disabled-thumb-color', '#c1c1c1', 'Custom Properties')};\\n        --switch-disabled-track-color: ${text('--switch-disabled-track-color', '#c1c1c1', 'Custom Properties')};\\n      }\\n   </style>\\n   <ino-switch\\n     id=\\\"custom-switch\\\"\\n     class=\\\"customizable-switch\\\"\\n     ino-color-scheme=\\\"${select('ino-color-scheme', INO_COLOR_SCHEMES, 'primary')}\\\"\\n     checked=\\\"${boolean('checked', false)}\\\"\\n     disabled=\\\"${boolean('disabled', false)}\\\"\\n   >\\n      ${text('<slot />', 'Customizable Switch')}\\n   </ino-switch>\\n </div>\\n\\n <h4>Color Schemes</h4>\\n <div class=\\\"ino-switch-colors\\\">\\n    ${INO_COLOR_SCHEMES.map(\\n      (color) => `<ino-switch ino-color-scheme=\\\"${color}\\\" checked>${color}</ino-switch>`\\n    )\\n      .join()\\n      .replace(/,/g, '')}\\n</div>\\n\\n<h4>States</h4>\\n <div class=\\\"story-switch-states\\\">\\n    <ino-switch checked>Checked</ino-switch>\\n    <ino-switch>Unchecked</ino-switch>\\n    <ino-switch disabled checked>Checked and Disabled</ino-switch>\\n    <ino-switch disabled>Disabled</ino-switch>\\n  </div>\\n</div>\\n`;\\n\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"DefaultUsage\":{\"startLoc\":{\"col\":28,\"line\":43},\"endLoc\":{\"col\":1,\"line\":94},\"startBody\":{\"col\":28,\"line\":43},\"endBody\":{\"col\":1,\"line\":94}}};\n    \nimport { boolean, select, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-switch/readme.md';\nimport './ino-switch.scss';\nimport { INO_COLOR_SCHEMES } from '../../core/helpers/constants';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n\n    if (el.tagName.toLowerCase() !== 'ino-switch' || el.id !== 'custom-switch') {\n      return;\n    }\n\n    el.setAttribute('checked', e.detail);\n  };\n\n  document.addEventListener('checkedChange', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('checkedChange', eventHandler);\n  };\n}\n\nexport default {parameters: {\"storySource\":{\"source\":\"import { boolean, select, text } from '@storybook/addon-knobs';\\n\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\n\\nimport componentReadme from '_local-elements/src/components/ino-switch/readme.md';\\nimport './ino-switch.scss';\\nimport { INO_COLOR_SCHEMES } from '../../core/helpers/constants';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n\\n    if (el.tagName.toLowerCase() !== 'ino-switch' || el.id !== 'custom-switch') {\\n      return;\\n    }\\n\\n    el.setAttribute('checked', e.detail);\\n  };\\n\\n  document.addEventListener('checkedChange', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener('checkedChange', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: 'Input/<ino-switch>',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div>\\n<h4>Customizable ino-switch</h4>\\n<div>\\n  <style>\\n      ino-switch.customizable-switch {\\n        --switch-toggled-on-color: ${text('--switch-toggled-on-color', '#3d40f5', 'Custom Properties')};\\n        --switch-toggled-on-thumb-color: ${text('--switch-toggled-on-thumb-color', '#3d40f5', 'Custom Properties')};\\n        --switch-toggled-on-track-color: ${text('--switch-toggled-on-track-color', '#5d60f7', 'Custom Properties')};\\n        --switch-toggled-off-color: ${text('--switch-toggled-off-color', '#c1c1c1', 'Custom Properties')};\\n        --switch-toggled-off-thumb-color: ${text('--switch-toggled-off-thumb-color', '#fff', 'Custom Properties')};\\n        --switch-toggled-off-track-color: ${text('--switch-toggled-off-track-color', '#777777', 'Custom Properties')};\\n        --switch-hover-color: ${text('--switch-hover-color', '#5d60f7', 'Custom Properties')};\\n        --switch-hover-thumb-color: ${text('--switch-hover-thumb-color', '#fff', 'Custom Properties')};\\n        --switch-hover-track-color: ${text('--switch-hover-track-color', '#5d60f7', 'Custom Properties')};\\n        --switch-active-color: ${text('--switch-active-color', '#0d10f3', 'Custom Properties')};\\n        --switch-active-thumb-color: ${text('--switch-active-thumb-color', '#fff', 'Custom Properties')};\\n        --switch-active-track-color: ${text('--switch-active-track-color', '#0d10f3', 'Custom Properties')};\\n        --switch-disabled-color: ${text('--switch-disabled-color', '#c1c1c1', 'Custom Properties')};\\n        --switch-disabled-thumb-color: ${text('--switch-disabled-thumb-color', '#c1c1c1', 'Custom Properties')};\\n        --switch-disabled-track-color: ${text('--switch-disabled-track-color', '#c1c1c1', 'Custom Properties')};\\n      }\\n   </style>\\n   <ino-switch\\n     id=\\\"custom-switch\\\"\\n     class=\\\"customizable-switch\\\"\\n     ino-color-scheme=\\\"${select('ino-color-scheme', INO_COLOR_SCHEMES, 'primary')}\\\"\\n     checked=\\\"${boolean('checked', false)}\\\"\\n     disabled=\\\"${boolean('disabled', false)}\\\"\\n   >\\n      ${text('<slot />', 'Customizable Switch')}\\n   </ino-switch>\\n </div>\\n\\n <h4>Color Schemes</h4>\\n <div class=\\\"ino-switch-colors\\\">\\n    ${INO_COLOR_SCHEMES.map(\\n      (color) => `<ino-switch ino-color-scheme=\\\"${color}\\\" checked>${color}</ino-switch>`\\n    )\\n      .join()\\n      .replace(/,/g, '')}\\n</div>\\n\\n<h4>States</h4>\\n <div class=\\\"story-switch-states\\\">\\n    <ino-switch checked>Checked</ino-switch>\\n    <ino-switch>Unchecked</ino-switch>\\n    <ino-switch disabled checked>Checked and Disabled</ino-switch>\\n    <ino-switch disabled>Disabled</ino-switch>\\n  </div>\\n</div>\\n`;\\n\",\"locationsMap\":{\"default-usage\":{\"startLoc\":{\"col\":28,\"line\":43},\"endLoc\":{\"col\":1,\"line\":94},\"startBody\":{\"col\":28,\"line\":43},\"endBody\":{\"col\":1,\"line\":94}}}},},\n  title: 'Input/<ino-switch>',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div>\n<h4>Customizable ino-switch</h4>\n<div>\n  <style>\n      ino-switch.customizable-switch {\n        --switch-toggled-on-color: ${text('--switch-toggled-on-color', '#3d40f5', 'Custom Properties')};\n        --switch-toggled-on-thumb-color: ${text('--switch-toggled-on-thumb-color', '#3d40f5', 'Custom Properties')};\n        --switch-toggled-on-track-color: ${text('--switch-toggled-on-track-color', '#5d60f7', 'Custom Properties')};\n        --switch-toggled-off-color: ${text('--switch-toggled-off-color', '#c1c1c1', 'Custom Properties')};\n        --switch-toggled-off-thumb-color: ${text('--switch-toggled-off-thumb-color', '#fff', 'Custom Properties')};\n        --switch-toggled-off-track-color: ${text('--switch-toggled-off-track-color', '#777777', 'Custom Properties')};\n        --switch-hover-color: ${text('--switch-hover-color', '#5d60f7', 'Custom Properties')};\n        --switch-hover-thumb-color: ${text('--switch-hover-thumb-color', '#fff', 'Custom Properties')};\n        --switch-hover-track-color: ${text('--switch-hover-track-color', '#5d60f7', 'Custom Properties')};\n        --switch-active-color: ${text('--switch-active-color', '#0d10f3', 'Custom Properties')};\n        --switch-active-thumb-color: ${text('--switch-active-thumb-color', '#fff', 'Custom Properties')};\n        --switch-active-track-color: ${text('--switch-active-track-color', '#0d10f3', 'Custom Properties')};\n        --switch-disabled-color: ${text('--switch-disabled-color', '#c1c1c1', 'Custom Properties')};\n        --switch-disabled-thumb-color: ${text('--switch-disabled-thumb-color', '#c1c1c1', 'Custom Properties')};\n        --switch-disabled-track-color: ${text('--switch-disabled-track-color', '#c1c1c1', 'Custom Properties')};\n      }\n   </style>\n   <ino-switch\n     id=\"custom-switch\"\n     class=\"customizable-switch\"\n     ino-color-scheme=\"${select('ino-color-scheme', INO_COLOR_SCHEMES, 'primary')}\"\n     checked=\"${boolean('checked', false)}\"\n     disabled=\"${boolean('disabled', false)}\"\n   >\n      ${text('<slot />', 'Customizable Switch')}\n   </ino-switch>\n </div>\n\n <h4>Color Schemes</h4>\n <div class=\"ino-switch-colors\">\n    ${INO_COLOR_SCHEMES.map(\n      (color) => `<ino-switch ino-color-scheme=\"${color}\" checked>${color}</ino-switch>`\n    )\n      .join()\n      .replace(/,/g, '')}\n</div>\n\n<h4>States</h4>\n <div class=\"story-switch-states\">\n    <ino-switch checked>Checked</ino-switch>\n    <ino-switch>Unchecked</ino-switch>\n    <ino-switch disabled checked>Checked and Disabled</ino-switch>\n    <ino-switch disabled>Disabled</ino-switch>\n  </div>\n</div>\n`;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:51},endLoc:{col:1,line:102},startBody:{col:28,line:51},endBody:{col:1,line:102}}}}},"storySource",{source:"import { boolean, select, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-switch/readme.md';\nimport './ino-switch.scss';\nimport { INO_COLOR_SCHEMES } from '../../core/helpers/constants';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n\n    if (el.tagName.toLowerCase() !== 'ino-switch' || el.id !== 'custom-switch') {\n      return;\n    }\n\n    el.setAttribute('checked', e.detail);\n  };\n\n  document.addEventListener('checkedChange', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('checkedChange', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Input/<ino-switch>',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div>\n<h4>Customizable ino-switch</h4>\n<div>\n  <style>\n      ino-switch.customizable-switch {\n        --switch-toggled-on-color: ${text('--switch-toggled-on-color', '#3d40f5', 'Custom Properties')};\n        --switch-toggled-on-thumb-color: ${text('--switch-toggled-on-thumb-color', '#3d40f5', 'Custom Properties')};\n        --switch-toggled-on-track-color: ${text('--switch-toggled-on-track-color', '#5d60f7', 'Custom Properties')};\n        --switch-toggled-off-color: ${text('--switch-toggled-off-color', '#c1c1c1', 'Custom Properties')};\n        --switch-toggled-off-thumb-color: ${text('--switch-toggled-off-thumb-color', '#fff', 'Custom Properties')};\n        --switch-toggled-off-track-color: ${text('--switch-toggled-off-track-color', '#777777', 'Custom Properties')};\n        --switch-hover-color: ${text('--switch-hover-color', '#5d60f7', 'Custom Properties')};\n        --switch-hover-thumb-color: ${text('--switch-hover-thumb-color', '#fff', 'Custom Properties')};\n        --switch-hover-track-color: ${text('--switch-hover-track-color', '#5d60f7', 'Custom Properties')};\n        --switch-active-color: ${text('--switch-active-color', '#0d10f3', 'Custom Properties')};\n        --switch-active-thumb-color: ${text('--switch-active-thumb-color', '#fff', 'Custom Properties')};\n        --switch-active-track-color: ${text('--switch-active-track-color', '#0d10f3', 'Custom Properties')};\n        --switch-disabled-color: ${text('--switch-disabled-color', '#c1c1c1', 'Custom Properties')};\n        --switch-disabled-thumb-color: ${text('--switch-disabled-thumb-color', '#c1c1c1', 'Custom Properties')};\n        --switch-disabled-track-color: ${text('--switch-disabled-track-color', '#c1c1c1', 'Custom Properties')};\n      }\n   </style>\n   <ino-switch\n     id=\"custom-switch\"\n     class=\"customizable-switch\"\n     ino-color-scheme=\"${select('ino-color-scheme', INO_COLOR_SCHEMES, 'primary')}\"\n     checked=\"${boolean('checked', false)}\"\n     disabled=\"${boolean('disabled', false)}\"\n   >\n      ${text('<slot />', 'Customizable Switch')}\n   </ino-switch>\n </div>\n\n <h4>Color Schemes</h4>\n <div class=\"ino-switch-colors\">\n    ${INO_COLOR_SCHEMES.map(\n      (color) => `<ino-switch ino-color-scheme=\"${color}\" checked>${color}</ino-switch>`\n    )\n      .join()\n      .replace(/,/g, '')}\n</div>\n\n<h4>States</h4>\n <div class=\"story-switch-states\">\n    <ino-switch checked>Checked</ino-switch>\n    <ino-switch>Unchecked</ino-switch>\n    <ino-switch disabled checked>Checked and Disabled</ino-switch>\n    <ino-switch disabled>Disabled</ino-switch>\n  </div>\n</div>\n`;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:43},endLoc:{col:1,line:94},startBody:{col:28,line:43},endBody:{col:1,line:94}}}}),title:"Input/<ino-switch>",decorators:[Object(with_stencil_readme.a)('# ino-switch\n\nInput switches toggle the state of a single item. Compared to the input checkbox, their changes usually apply without any additional submission. \n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n  .querySelector(\'ino-switch\')\n  .addEventListener(\'checkedChange\', e =>\n    alert(`The checked state is: ${e.detail}`)\n  );\n```\n\n```html\n<ino-switch\n  checked\n  disabled\n  ino-color-scheme="<string>"\n  name="<string>"\n>\n  Label\n</ino-switch>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoSwitch } from \'@inovex.de/elements-react\';\n\nclass MyComponent extends Component {\n  state = {\n    checked: false\n  };\n\n  handleCheckboxClick(e) {\n    this.setState({ checked: e.detail });\n  }\n\n  render() {\n    return (\n      <InoSwitch\n        checked={this.state.checked}\n        onCheckedChange={handleCheckboxClick}\n      >\n        Apple\n      </InoSwitch>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoSwitch } from \'@inovex.de/elements-react\';\nimport { Components } from \'@inovex.de/elements-react/dist/types/components\';\n\nconst Switch: React.FunctionComponent<Components.InoSwitchAttributes> = props => {\n  const { value, onClick, checked } = props;\n\n  return (\n    <InoSwitch value={value} onCheckedChange={onClick} checked={checked}>\n      {value}\n    </InoSwitch>\n  );\n};\n\nclass MyComponent extends Component {\n  state = {\n    checked: false\n  };\n\n  handleCheckboxClick(e) {\n      this.setState({ checked: e.detail });\n  }\n  \n  render() {\n    return (\n      <Switch\n        value={"Apple"}\n        checked={this.state.checked}\n        onClick={handleCheckboxClick}\n      />\n    );\n  }\n}\n```\n\n## Control flow\n\nThe input has a controlled (unmanaged) attribute `checked`. For this reason listen to `checkedChange`, sync it with your local state and pass the new value to the component again to change the value.\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property         | Attribute          | Description                                                                                                                                                                                           | Type                                                                                 | Default     |\n| ---------------- | ------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ | ----------- |\n| `checked`        | `checked`          | Marks this element as checked. (**unmanaged**)                                                                                                                                                        | `boolean`                                                                            | `false`     |\n| `disabled`       | `disabled`         | Disables this element.                                                                                                                                                                                | `boolean`                                                                            | `undefined` |\n| `inoColorScheme` | `ino-color-scheme` | The name of the color scheme which is used to style the background and outline of this component. Possible values: `primary` (default),  `secondary`, `success`, `warning`, `error`, `light`, `dark`. | `"dark" \\| "error" \\| "light" \\| "primary" \\| "secondary" \\| "success" \\| "warning"` | `\'primary\'` |\n| `name`           | `name`             | The name of this element.                                                                                                                                                                             | `string`                                                                             | `undefined` |\n\n\n## Events\n\n| Event           | Description                                                                                                    | Type               |\n| --------------- | -------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `checkedChange` | Emits when the user clicks on the checkbox to change the checked state. Contains the status in `event.detail`. | `CustomEvent<any>` |\n\n\n## CSS Custom Properties\n\n| Name                                   | Description                               |\n| -------------------------------------- | ----------------------------------------- |\n| `--ino-switch-active-color`            | border color of the switch if active      |\n| `--ino-switch-active-thumb-color`      | thumb color of the switch if active       |\n| `--ino-switch-active-track-color`      | track color of the switch if active       |\n| `--ino-switch-disabled-color`          | border color of the switch if disabled    |\n| `--ino-switch-disabled-thumb-color`    | thumb color of the switch if disabled     |\n| `--ino-switch-disabled-track-color`    | track color of the switch if disabled     |\n| `--ino-switch-hover-color`             | border color of the switch on hover       |\n| `--ino-switch-hover-thumb-color`       | thumb color of the switch on hover        |\n| `--ino-switch-hover-track-color`       | track color of the switch on hover        |\n| `--ino-switch-toggled-off-color`       | border color of the switch if toggled off |\n| `--ino-switch-toggled-off-thumb-color` | thumb color of the switch if toggled off  |\n| `--ino-switch-toggled-off-track-color` | track color of the switch if toggled off  |\n| `--ino-switch-toggled-on-color`        | border color of the switch if toggled on  |\n| `--ino-switch-toggled-on-thumb-color`  | thumb color of the switch if toggled on   |\n| `--ino-switch-toggled-on-track-color`  | track color of the switch if toggled on   |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;"ino-switch"===el.tagName.toLowerCase()&&"custom-switch"===el.id&&el.setAttribute("checked",e.detail)};return document.addEventListener("checkedChange",eventHandler),function(){document.removeEventListener("checkedChange",eventHandler)}}(),story()}]};var ino_switch_stories_DefaultUsage=function DefaultUsage(){return"\n<div>\n<h4>Customizable ino-switch</h4>\n<div>\n  <style>\n      ino-switch.customizable-switch {\n        --switch-toggled-on-color: ".concat(Object(dist.text)("--switch-toggled-on-color","#3d40f5","Custom Properties"),";\n        --switch-toggled-on-thumb-color: ").concat(Object(dist.text)("--switch-toggled-on-thumb-color","#3d40f5","Custom Properties"),";\n        --switch-toggled-on-track-color: ").concat(Object(dist.text)("--switch-toggled-on-track-color","#5d60f7","Custom Properties"),";\n        --switch-toggled-off-color: ").concat(Object(dist.text)("--switch-toggled-off-color","#c1c1c1","Custom Properties"),";\n        --switch-toggled-off-thumb-color: ").concat(Object(dist.text)("--switch-toggled-off-thumb-color","#fff","Custom Properties"),";\n        --switch-toggled-off-track-color: ").concat(Object(dist.text)("--switch-toggled-off-track-color","#777777","Custom Properties"),";\n        --switch-hover-color: ").concat(Object(dist.text)("--switch-hover-color","#5d60f7","Custom Properties"),";\n        --switch-hover-thumb-color: ").concat(Object(dist.text)("--switch-hover-thumb-color","#fff","Custom Properties"),";\n        --switch-hover-track-color: ").concat(Object(dist.text)("--switch-hover-track-color","#5d60f7","Custom Properties"),";\n        --switch-active-color: ").concat(Object(dist.text)("--switch-active-color","#0d10f3","Custom Properties"),";\n        --switch-active-thumb-color: ").concat(Object(dist.text)("--switch-active-thumb-color","#fff","Custom Properties"),";\n        --switch-active-track-color: ").concat(Object(dist.text)("--switch-active-track-color","#0d10f3","Custom Properties"),";\n        --switch-disabled-color: ").concat(Object(dist.text)("--switch-disabled-color","#c1c1c1","Custom Properties"),";\n        --switch-disabled-thumb-color: ").concat(Object(dist.text)("--switch-disabled-thumb-color","#c1c1c1","Custom Properties"),";\n        --switch-disabled-track-color: ").concat(Object(dist.text)("--switch-disabled-track-color","#c1c1c1","Custom Properties"),';\n      }\n   </style>\n   <ino-switch\n     id="custom-switch"\n     class="customizable-switch"\n     ino-color-scheme="').concat(Object(dist.select)("ino-color-scheme",INO_COLOR_SCHEMES,"primary"),'"\n     checked="').concat(Object(dist.boolean)("checked",!1),'"\n     disabled="').concat(Object(dist.boolean)("disabled",!1),'"\n   >\n      ').concat(Object(dist.text)("<slot />","Customizable Switch"),'\n   </ino-switch>\n </div>\n\n <h4>Color Schemes</h4>\n <div class="ino-switch-colors">\n    ').concat(INO_COLOR_SCHEMES.map((function(color){return'<ino-switch ino-color-scheme="'.concat(color,'" checked>').concat(color,"</ino-switch>")})).join().replace(/,/g,""),'\n</div>\n\n<h4>States</h4>\n <div class="story-switch-states">\n    <ino-switch checked>Checked</ino-switch>\n    <ino-switch>Unchecked</ino-switch>\n    <ino-switch disabled checked>Checked and Disabled</ino-switch>\n    <ino-switch disabled>Disabled</ino-switch>\n  </div>\n</div>\n')}},1346:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_tab_bar_stories_DefaultUsage})),__webpack_require__.d(__webpack_exports__,"Tab",(function(){return ino_tab_bar_stories_Tab}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2),icons=__webpack_require__(23);__webpack_require__(1324);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, number, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport tabBarReadme from \'_local-elements/src/components/ino-tab-bar/readme.md\';\\nimport tabReadme from \'_local-elements/src/components/ino-tab/readme.md\';\\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\\n\\nimport \'./ino-tab-bar.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function(e) {\\n    const el = e.target;\\n\\n    if (!el) return;\\n\\n    el.setAttribute(\'ino-active-tab\', e.detail);\\n  };\\n\\n  document.addEventListener(\'activeTabChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'activeTabChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-tab-bar>\'\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-tab\\">\\n<h4>Customizable ino-tab-bar</h4>\\n  <div>\\n    <ino-tab-bar id=\\"tab-bar-1\\" ino-active-tab=\\"${number(\\n  \'ino-active-tab\',\\n  0\\n)}\\">\\n      <ino-tab ino-label=\\"Label1\\" ino-icon=\\"user\\" ino-stacked=\\"${boolean(\\n  \'ino-stacked\',\\n  false\\n)}\\" ino-indicator-content-width=\\"${boolean(\\n  \'ino-indicator-content-width\',\\n  false\\n)}\\"></ino-tab>\\n      <ino-tab ino-label=\\"Label2\\" ino-icon=\\"info\\" ino-stacked=\\"${boolean(\\n  \'ino-stacked\',\\n  false\\n)}\\" ino-indicator-content-width=\\"${boolean(\\n  \'ino-indicator-content-width\',\\n  false\\n)}\\"></ino-tab>\\n      <ino-tab ino-label=\\"Label3\\" ino-icon=\\"star\\" ino-stacked=\\"${boolean(\\n  \'ino-stacked\',\\n  false\\n)}\\" ino-indicator-content-width=\\"${boolean(\\n  \'ino-indicator-content-width\',\\n  false\\n)}\\"></ino-tab>\\n      <ino-tab ino-label=\\"Label4\\" ino-icon=\\"help\\" ino-stacked=\\"${boolean(\\n  \'ino-stacked\',\\n  false\\n)}\\" ino-indicator-content-width=\\"${boolean(\\n  \'ino-indicator-content-width\',\\n  false\\n)}\\"></ino-tab>\\n    </ino-tab-bar>\\n  </div>\\n  <h4>Stacked</h4>\\n  <ino-tab-bar>\\n    <ino-tab\\n            ino-label=\\"Label 1\\"\\n            ino-icon=\\"info\\"\\n            ino-stacked=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 2\\"\\n            ino-icon=\\"info\\"\\n            ino-stacked=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 3\\"\\n            ino-icon=\\"info\\"\\n            ino-stacked=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 4\\"\\n            ino-icon=\\"info\\"\\n            ino-stacked=\\"true\\">\\n    </ino-tab>\\n  </ino-tab-bar>\\n  <h4>Indicator Content Width</h4>\\n  <ino-tab-bar>\\n    <ino-tab\\n            ino-label=\\"Label 1\\"\\n            ino-icon=\\"info\\"\\n            ino-indicator-content-width=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 2\\"\\n            ino-icon=\\"info\\"\\n            ino-indicator-content-width=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 3\\"\\n            ino-icon=\\"info\\"\\n            ino-indicator-content-width=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 4\\"\\n            ino-icon=\\"info\\"\\n            ino-indicator-content-width=\\"true\\">\\n    </ino-tab>\\n  </ino-tab-bar>\\n</div>\\n`;\\n\\nDefaultUsage.parameters = {\\n  actions: {\\n    handles: [\'activeTabChange ino-tab-bar\']\\n  }\\n};\\nDefaultUsage.decorators = [\\n  withStencilReadme(tabBarReadme),\\n  story => {\\n    subscribeToComponentEvents();\\n    return story();\\n  }\\n];\\n\\nexport const Tab = () => /*html*/ `\\n<div class=\\"story-tab\\">\\n<h4>Customizable Tab</h4>\\n<div class=\\"customizable-tab\\">\\n  <ino-tab\\n    ino-label=\\"${text(\'ino-label\', \'Customizable Tab\')}\\"\\n    ino-icon=\\"${select(\'ino-icon\', ICONS, \'info\')}\\"\\n    ino-stacked=\\"${boolean(\'ino-stacked\', false)}\\">\\n  </ino-tab>\\n  </div>\\n  <h4>Variants</h4>\\n  <div class=\\"story-tab-variants\\">\\n    <ino-tab\\n        ino-label=\\"Default\\"\\n        ino-icon=\\"info\\"\\n        ino-stacked=\\"false\\">\\n    </ino-tab>\\n    <ino-tab\\n          ino-label=\\"Stacked\\"\\n          ino-icon=\\"info\\"\\n          ino-stacked=\\"true\\">\\n    </ino-tab>\\n    <ino-tab-bar ino-active-tab=\\"0\\">\\n      <ino-tab\\n            ino-label=\\"Default active Tab\\"\\n            ino-icon=\\"info\\"\\n            >\\n      </ino-tab>\\n    </ino-tab-bar>\\n    <ino-tab-bar ino-active-tab=\\"0\\">\\n      <ino-tab\\n            ino-label=\\"Active content width indicator\\"\\n            ino-icon=\\"info\\"\\n            ino-indicator-content-width=\\"true\\"\\n            >\\n      </ino-tab>\\n    </ino-tab-bar>\\n  </div>\\n</div>\\n`;\\n\\nTab.decorators = [\\n  withStencilReadme(tabReadme)\\n];\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":34},"endLoc":{"col":1,"line":119},"startBody":{"col":28,"line":34},"endBody":{"col":1,"line":119}},"Tab":{"startLoc":{"col":19,"line":134},"endLoc":{"col":1,"line":173},"startBody":{"col":19,"line":134},"endBody":{"col":1,"line":173}}};\n    \nimport { boolean, number, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport tabBarReadme from \'_local-elements/src/components/ino-tab-bar/readme.md\';\nimport tabReadme from \'_local-elements/src/components/ino-tab/readme.md\';\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\n\nimport \'./ino-tab-bar.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function(e) {\n    const el = e.target;\n\n    if (!el) return;\n\n    el.setAttribute(\'ino-active-tab\', e.detail);\n  };\n\n  document.addEventListener(\'activeTabChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'activeTabChange\', eventHandler);\n  };\n}\n\nexport default {parameters: {"storySource":{"source":"import { boolean, number, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport tabBarReadme from \'_local-elements/src/components/ino-tab-bar/readme.md\';\\nimport tabReadme from \'_local-elements/src/components/ino-tab/readme.md\';\\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\\n\\nimport \'./ino-tab-bar.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function(e) {\\n    const el = e.target;\\n\\n    if (!el) return;\\n\\n    el.setAttribute(\'ino-active-tab\', e.detail);\\n  };\\n\\n  document.addEventListener(\'activeTabChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'activeTabChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-tab-bar>\'\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-tab\\">\\n<h4>Customizable ino-tab-bar</h4>\\n  <div>\\n    <ino-tab-bar id=\\"tab-bar-1\\" ino-active-tab=\\"${number(\\n  \'ino-active-tab\',\\n  0\\n)}\\">\\n      <ino-tab ino-label=\\"Label1\\" ino-icon=\\"user\\" ino-stacked=\\"${boolean(\\n  \'ino-stacked\',\\n  false\\n)}\\" ino-indicator-content-width=\\"${boolean(\\n  \'ino-indicator-content-width\',\\n  false\\n)}\\"></ino-tab>\\n      <ino-tab ino-label=\\"Label2\\" ino-icon=\\"info\\" ino-stacked=\\"${boolean(\\n  \'ino-stacked\',\\n  false\\n)}\\" ino-indicator-content-width=\\"${boolean(\\n  \'ino-indicator-content-width\',\\n  false\\n)}\\"></ino-tab>\\n      <ino-tab ino-label=\\"Label3\\" ino-icon=\\"star\\" ino-stacked=\\"${boolean(\\n  \'ino-stacked\',\\n  false\\n)}\\" ino-indicator-content-width=\\"${boolean(\\n  \'ino-indicator-content-width\',\\n  false\\n)}\\"></ino-tab>\\n      <ino-tab ino-label=\\"Label4\\" ino-icon=\\"help\\" ino-stacked=\\"${boolean(\\n  \'ino-stacked\',\\n  false\\n)}\\" ino-indicator-content-width=\\"${boolean(\\n  \'ino-indicator-content-width\',\\n  false\\n)}\\"></ino-tab>\\n    </ino-tab-bar>\\n  </div>\\n  <h4>Stacked</h4>\\n  <ino-tab-bar>\\n    <ino-tab\\n            ino-label=\\"Label 1\\"\\n            ino-icon=\\"info\\"\\n            ino-stacked=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 2\\"\\n            ino-icon=\\"info\\"\\n            ino-stacked=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 3\\"\\n            ino-icon=\\"info\\"\\n            ino-stacked=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 4\\"\\n            ino-icon=\\"info\\"\\n            ino-stacked=\\"true\\">\\n    </ino-tab>\\n  </ino-tab-bar>\\n  <h4>Indicator Content Width</h4>\\n  <ino-tab-bar>\\n    <ino-tab\\n            ino-label=\\"Label 1\\"\\n            ino-icon=\\"info\\"\\n            ino-indicator-content-width=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 2\\"\\n            ino-icon=\\"info\\"\\n            ino-indicator-content-width=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 3\\"\\n            ino-icon=\\"info\\"\\n            ino-indicator-content-width=\\"true\\">\\n    </ino-tab>\\n    <ino-tab\\n            ino-label=\\"Label 4\\"\\n            ino-icon=\\"info\\"\\n            ino-indicator-content-width=\\"true\\">\\n    </ino-tab>\\n  </ino-tab-bar>\\n</div>\\n`;\\n\\nDefaultUsage.parameters = {\\n  actions: {\\n    handles: [\'activeTabChange ino-tab-bar\']\\n  }\\n};\\nDefaultUsage.decorators = [\\n  withStencilReadme(tabBarReadme),\\n  story => {\\n    subscribeToComponentEvents();\\n    return story();\\n  }\\n];\\n\\nexport const Tab = () => /*html*/ `\\n<div class=\\"story-tab\\">\\n<h4>Customizable Tab</h4>\\n<div class=\\"customizable-tab\\">\\n  <ino-tab\\n    ino-label=\\"${text(\'ino-label\', \'Customizable Tab\')}\\"\\n    ino-icon=\\"${select(\'ino-icon\', ICONS, \'info\')}\\"\\n    ino-stacked=\\"${boolean(\'ino-stacked\', false)}\\">\\n  </ino-tab>\\n  </div>\\n  <h4>Variants</h4>\\n  <div class=\\"story-tab-variants\\">\\n    <ino-tab\\n        ino-label=\\"Default\\"\\n        ino-icon=\\"info\\"\\n        ino-stacked=\\"false\\">\\n    </ino-tab>\\n    <ino-tab\\n          ino-label=\\"Stacked\\"\\n          ino-icon=\\"info\\"\\n          ino-stacked=\\"true\\">\\n    </ino-tab>\\n    <ino-tab-bar ino-active-tab=\\"0\\">\\n      <ino-tab\\n            ino-label=\\"Default active Tab\\"\\n            ino-icon=\\"info\\"\\n            >\\n      </ino-tab>\\n    </ino-tab-bar>\\n    <ino-tab-bar ino-active-tab=\\"0\\">\\n      <ino-tab\\n            ino-label=\\"Active content width indicator\\"\\n            ino-icon=\\"info\\"\\n            ino-indicator-content-width=\\"true\\"\\n            >\\n      </ino-tab>\\n    </ino-tab-bar>\\n  </div>\\n</div>\\n`;\\n\\nTab.decorators = [\\n  withStencilReadme(tabReadme)\\n];\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":34},"endLoc":{"col":1,"line":119},"startBody":{"col":28,"line":34},"endBody":{"col":1,"line":119}},"tab":{"startLoc":{"col":19,"line":134},"endLoc":{"col":1,"line":173},"startBody":{"col":19,"line":134},"endBody":{"col":1,"line":173}}}},},\n  title: \'Structure/<ino-tab-bar>\'\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-tab">\n<h4>Customizable ino-tab-bar</h4>\n  <div>\n    <ino-tab-bar id="tab-bar-1" ino-active-tab="${number(\n  \'ino-active-tab\',\n  0\n)}">\n      <ino-tab ino-label="Label1" ino-icon="user" ino-stacked="${boolean(\n  \'ino-stacked\',\n  false\n)}" ino-indicator-content-width="${boolean(\n  \'ino-indicator-content-width\',\n  false\n)}"></ino-tab>\n      <ino-tab ino-label="Label2" ino-icon="info" ino-stacked="${boolean(\n  \'ino-stacked\',\n  false\n)}" ino-indicator-content-width="${boolean(\n  \'ino-indicator-content-width\',\n  false\n)}"></ino-tab>\n      <ino-tab ino-label="Label3" ino-icon="star" ino-stacked="${boolean(\n  \'ino-stacked\',\n  false\n)}" ino-indicator-content-width="${boolean(\n  \'ino-indicator-content-width\',\n  false\n)}"></ino-tab>\n      <ino-tab ino-label="Label4" ino-icon="help" ino-stacked="${boolean(\n  \'ino-stacked\',\n  false\n)}" ino-indicator-content-width="${boolean(\n  \'ino-indicator-content-width\',\n  false\n)}"></ino-tab>\n    </ino-tab-bar>\n  </div>\n  <h4>Stacked</h4>\n  <ino-tab-bar>\n    <ino-tab\n            ino-label="Label 1"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 2"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 3"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 4"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n  </ino-tab-bar>\n  <h4>Indicator Content Width</h4>\n  <ino-tab-bar>\n    <ino-tab\n            ino-label="Label 1"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 2"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 3"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 4"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n  </ino-tab-bar>\n</div>\n`;;\n\nDefaultUsage.parameters = {\n  actions: {\n    handles: [\'activeTabChange ino-tab-bar\']\n  }\n};\nDefaultUsage.decorators = [\n  withStencilReadme(tabBarReadme),\n  story => {\n    subscribeToComponentEvents();\n    return story();\n  }\n];\n\nexport const Tab = () => /*html*/ `\n<div class="story-tab">\n<h4>Customizable Tab</h4>\n<div class="customizable-tab">\n  <ino-tab\n    ino-label="${text(\'ino-label\', \'Customizable Tab\')}"\n    ino-icon="${select(\'ino-icon\', ICONS, \'info\')}"\n    ino-stacked="${boolean(\'ino-stacked\', false)}">\n  </ino-tab>\n  </div>\n  <h4>Variants</h4>\n  <div class="story-tab-variants">\n    <ino-tab\n        ino-label="Default"\n        ino-icon="info"\n        ino-stacked="false">\n    </ino-tab>\n    <ino-tab\n          ino-label="Stacked"\n          ino-icon="info"\n          ino-stacked="true">\n    </ino-tab>\n    <ino-tab-bar ino-active-tab="0">\n      <ino-tab\n            ino-label="Default active Tab"\n            ino-icon="info"\n            >\n      </ino-tab>\n    </ino-tab-bar>\n    <ino-tab-bar ino-active-tab="0">\n      <ino-tab\n            ino-label="Active content width indicator"\n            ino-icon="info"\n            ino-indicator-content-width="true"\n            >\n      </ino-tab>\n    </ino-tab-bar>\n  </div>\n</div>\n`;\n\nTab.decorators = [\n  withStencilReadme(tabReadme)\n];\n',locationsMap:{"default-usage":{startLoc:{col:28,line:42},endLoc:{col:1,line:127},startBody:{col:28,line:42},endBody:{col:1,line:127}},tab:{startLoc:{col:19,line:142},endLoc:{col:1,line:181},startBody:{col:19,line:142},endBody:{col:1,line:181}}}}},"storySource",{source:'import { boolean, number, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport tabBarReadme from \'_local-elements/src/components/ino-tab-bar/readme.md\';\nimport tabReadme from \'_local-elements/src/components/ino-tab/readme.md\';\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\n\nimport \'./ino-tab-bar.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function(e) {\n    const el = e.target;\n\n    if (!el) return;\n\n    el.setAttribute(\'ino-active-tab\', e.detail);\n  };\n\n  document.addEventListener(\'activeTabChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'activeTabChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Structure/<ino-tab-bar>\'\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-tab">\n<h4>Customizable ino-tab-bar</h4>\n  <div>\n    <ino-tab-bar id="tab-bar-1" ino-active-tab="${number(\n  \'ino-active-tab\',\n  0\n)}">\n      <ino-tab ino-label="Label1" ino-icon="user" ino-stacked="${boolean(\n  \'ino-stacked\',\n  false\n)}" ino-indicator-content-width="${boolean(\n  \'ino-indicator-content-width\',\n  false\n)}"></ino-tab>\n      <ino-tab ino-label="Label2" ino-icon="info" ino-stacked="${boolean(\n  \'ino-stacked\',\n  false\n)}" ino-indicator-content-width="${boolean(\n  \'ino-indicator-content-width\',\n  false\n)}"></ino-tab>\n      <ino-tab ino-label="Label3" ino-icon="star" ino-stacked="${boolean(\n  \'ino-stacked\',\n  false\n)}" ino-indicator-content-width="${boolean(\n  \'ino-indicator-content-width\',\n  false\n)}"></ino-tab>\n      <ino-tab ino-label="Label4" ino-icon="help" ino-stacked="${boolean(\n  \'ino-stacked\',\n  false\n)}" ino-indicator-content-width="${boolean(\n  \'ino-indicator-content-width\',\n  false\n)}"></ino-tab>\n    </ino-tab-bar>\n  </div>\n  <h4>Stacked</h4>\n  <ino-tab-bar>\n    <ino-tab\n            ino-label="Label 1"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 2"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 3"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 4"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n  </ino-tab-bar>\n  <h4>Indicator Content Width</h4>\n  <ino-tab-bar>\n    <ino-tab\n            ino-label="Label 1"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 2"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 3"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 4"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n  </ino-tab-bar>\n</div>\n`;\n\nDefaultUsage.parameters = {\n  actions: {\n    handles: [\'activeTabChange ino-tab-bar\']\n  }\n};\nDefaultUsage.decorators = [\n  withStencilReadme(tabBarReadme),\n  story => {\n    subscribeToComponentEvents();\n    return story();\n  }\n];\n\nexport const Tab = () => /*html*/ `\n<div class="story-tab">\n<h4>Customizable Tab</h4>\n<div class="customizable-tab">\n  <ino-tab\n    ino-label="${text(\'ino-label\', \'Customizable Tab\')}"\n    ino-icon="${select(\'ino-icon\', ICONS, \'info\')}"\n    ino-stacked="${boolean(\'ino-stacked\', false)}">\n  </ino-tab>\n  </div>\n  <h4>Variants</h4>\n  <div class="story-tab-variants">\n    <ino-tab\n        ino-label="Default"\n        ino-icon="info"\n        ino-stacked="false">\n    </ino-tab>\n    <ino-tab\n          ino-label="Stacked"\n          ino-icon="info"\n          ino-stacked="true">\n    </ino-tab>\n    <ino-tab-bar ino-active-tab="0">\n      <ino-tab\n            ino-label="Default active Tab"\n            ino-icon="info"\n            >\n      </ino-tab>\n    </ino-tab-bar>\n    <ino-tab-bar ino-active-tab="0">\n      <ino-tab\n            ino-label="Active content width indicator"\n            ino-icon="info"\n            ino-indicator-content-width="true"\n            >\n      </ino-tab>\n    </ino-tab-bar>\n  </div>\n</div>\n`;\n\nTab.decorators = [\n  withStencilReadme(tabReadme)\n];\n',locationsMap:{"default-usage":{startLoc:{col:28,line:34},endLoc:{col:1,line:119},startBody:{col:28,line:34},endBody:{col:1,line:119}},tab:{startLoc:{col:19,line:134},endLoc:{col:1,line:173},startBody:{col:19,line:134},endBody:{col:1,line:173}}}}),title:"Structure/<ino-tab-bar>"};var ino_tab_bar_stories_DefaultUsage=function DefaultUsage(){return'\n<div class="story-tab">\n<h4>Customizable ino-tab-bar</h4>\n  <div>\n    <ino-tab-bar id="tab-bar-1" ino-active-tab="'.concat(Object(dist.number)("ino-active-tab",0),'">\n      <ino-tab ino-label="Label1" ino-icon="user" ino-stacked="').concat(Object(dist.boolean)("ino-stacked",!1),'" ino-indicator-content-width="').concat(Object(dist.boolean)("ino-indicator-content-width",!1),'"></ino-tab>\n      <ino-tab ino-label="Label2" ino-icon="info" ino-stacked="').concat(Object(dist.boolean)("ino-stacked",!1),'" ino-indicator-content-width="').concat(Object(dist.boolean)("ino-indicator-content-width",!1),'"></ino-tab>\n      <ino-tab ino-label="Label3" ino-icon="star" ino-stacked="').concat(Object(dist.boolean)("ino-stacked",!1),'" ino-indicator-content-width="').concat(Object(dist.boolean)("ino-indicator-content-width",!1),'"></ino-tab>\n      <ino-tab ino-label="Label4" ino-icon="help" ino-stacked="').concat(Object(dist.boolean)("ino-stacked",!1),'" ino-indicator-content-width="').concat(Object(dist.boolean)("ino-indicator-content-width",!1),'"></ino-tab>\n    </ino-tab-bar>\n  </div>\n  <h4>Stacked</h4>\n  <ino-tab-bar>\n    <ino-tab\n            ino-label="Label 1"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 2"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 3"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 4"\n            ino-icon="info"\n            ino-stacked="true">\n    </ino-tab>\n  </ino-tab-bar>\n  <h4>Indicator Content Width</h4>\n  <ino-tab-bar>\n    <ino-tab\n            ino-label="Label 1"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 2"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 3"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n    <ino-tab\n            ino-label="Label 4"\n            ino-icon="info"\n            ino-indicator-content-width="true">\n    </ino-tab>\n  </ino-tab-bar>\n</div>\n')};ino_tab_bar_stories_DefaultUsage.parameters={actions:{handles:["activeTabChange ino-tab-bar"]}},ino_tab_bar_stories_DefaultUsage.decorators=[Object(with_stencil_readme.a)('# ino-tab-bar\n\nTabs organize and allow navigation between groups of content that are related and at the same hierarchical level. The Tab Bar contains the Tab Scroller and Tab components. It functions as a wrapper around the material [Tab Bar](https://github.com/material-components/material-components-web/tree/master/packages/mdc-tab-bar) component.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector(\'ino-tab-bar\')\n  .addEventListener(\'activeTabChange\', e =>\n    console.log(`The index of the new tab is: ${e.detail}`)\n  );\n```\n\n```jsx\n<ino-tab-bar\n  ino-active-tab="<number>"\n  onactivetabchange="handleActiveTabChange()"\n>\n  <ino-tab ...></ino-tab>\n</ino-tab-bar>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoTab, InoTabBar } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoTabBar inoActiveTab={2}>\n        <InoTab inoLabel="Tab #1" />\n        <InoTab inoLabel="Tab #2" />\n        <InoTab inoLabel="Tab #3" />\n      </InoTabBar>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoTab, InoTabBar } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst TabBar: React.FunctionComponent<Components.InoTabBarAttributes> = props => {\n  const { inoActiveTab } = props;\n\n  return <InoTabBar inoActiveTab={inoActiveTab}>{props.children}</InoTabBar>;\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <TabBar inoActiveTab={2}>\n        <InoTab inoLabel="Tab #1" />\n        <InoTab inoLabel="Tab #2" />\n        <InoTab inoLabel="Tab #3" />\n      </TabBar>\n    );\n  }\n}\n```\n\n## Additional Hints\n\n### Control flow\n\nThe tab bar has a controlled (unmanaged) attribute `ino-active-tab`. For this reason, the tab doesn\'t change on user interactions but on updates of `ino-active-tab`. Listen to `activeTabChange`, sync it with your local state and pass the new index to the component again to activate the tab.\n\n```jsx\n<ino-tab-bar\n  ino-active-tab={this.state.index}\n  activeTabChange={e => (this.state.index = e.detail)}\n/>\n```\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property       | Attribute        | Description                                           | Type     | Default |\n| -------------- | ---------------- | ----------------------------------------------------- | -------- | ------- |\n| `inoActiveTab` | `ino-active-tab` | Activates the tab at the given index (**unmanaged**). | `number` | `0`     |\n\n\n## Events\n\n| Event             | Description                                                                         | Type               |\n| ----------------- | ----------------------------------------------------------------------------------- | ------------------ |\n| `activeTabChange` | Emits when a tab changes. Contains the index of the activated tab in `event.detail` | `CustomEvent<any>` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;el&&el.setAttribute("ino-active-tab",e.detail)};return document.addEventListener("activeTabChange",eventHandler),function(){document.removeEventListener("activeTabChange",eventHandler)}}(),story()}];var ino_tab_bar_stories_Tab=function Tab(){return'\n<div class="story-tab">\n<h4>Customizable Tab</h4>\n<div class="customizable-tab">\n  <ino-tab\n    ino-label="'.concat(Object(dist.text)("ino-label","Customizable Tab"),'"\n    ino-icon="').concat(Object(dist.select)("ino-icon",icons.a,"info"),'"\n    ino-stacked="').concat(Object(dist.boolean)("ino-stacked",!1),'">\n  </ino-tab>\n  </div>\n  <h4>Variants</h4>\n  <div class="story-tab-variants">\n    <ino-tab\n        ino-label="Default"\n        ino-icon="info"\n        ino-stacked="false">\n    </ino-tab>\n    <ino-tab\n          ino-label="Stacked"\n          ino-icon="info"\n          ino-stacked="true">\n    </ino-tab>\n    <ino-tab-bar ino-active-tab="0">\n      <ino-tab\n            ino-label="Default active Tab"\n            ino-icon="info"\n            >\n      </ino-tab>\n    </ino-tab-bar>\n    <ino-tab-bar ino-active-tab="0">\n      <ino-tab\n            ino-label="Active content width indicator"\n            ino-icon="info"\n            ino-indicator-content-width="true"\n            >\n      </ino-tab>\n    </ino-tab-bar>\n  </div>\n</div>\n')};ino_tab_bar_stories_Tab.decorators=[Object(with_stencil_readme.a)('# ino-tab\n\nTabs organize and allow navigation between groups of content that are related and at the same hierarchical level. Each Tab governs the visibility of one group of content. It functions as a wrapper around the material [Tab](https://github.com/material-components/material-components-web/tree/master/packages/mdc-tab) component.\n\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-tab\n  ino-label="<string>"\n  ino-icon="<string>"\n  ino-indicator-content-width\n  ino-stacked\n>\n</ino-tab>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoTab, InoTabBar } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoTabBar inoActiveTab={2}>\n        <InoTab inoLabel="Tab #1" />\n        <InoTab inoLabel="Tab #2" />\n        <InoTab inoLabel="Tab #3" />\n      </InoTabBar>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoTab, InoTabBar } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst TabBar: React.FunctionComponent<Components.InoTabBarAttributes> = props => {\n  const { inoActiveTab } = props;\n\n  return <InoTabBar inoActiveTab={inoActiveTab}>{props.children}</InoTabBar>;\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <TabBar inoActiveTab={2}>\n        <InoTab inoLabel="Tab #1" />\n        <InoTab inoLabel="Tab #2" />\n        <InoTab inoLabel="Tab #3" />\n      </TabBar>\n    );\n  }\n}\n```\n\n## Additional Hints\n\n**Content**: Provide the text of a Tab and, if desired, an icon of the tab in `ino-icon`.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                   | Attribute                     | Description                                                                           | Type      | Default     |\n| -------------------------- | ----------------------------- | ------------------------------------------------------------------------------------- | --------- | ----------- |\n| `inoIcon`                  | `ino-icon`                    | Indicates a leading icon in the tab.                                                  | `string`  | `undefined` |\n| `inoIndicatorContentWidth` | `ino-indicator-content-width` | Indicates that the tab only expands to the width of its content.                      | `boolean` | `false`     |\n| `inoLabel`                 | `ino-label`                   | Indicates a label text in the tab.                                                    | `string`  | `undefined` |\n| `inoStacked`               | `ino-stacked`                 | Indicates that the tab icon and label should flow vertically instead of horizontally. | `boolean` | `false`     |\n\n\n## Events\n\n| Event           | Description                                                                          | Type               |\n| --------------- | ------------------------------------------------------------------------------------ | ------------------ |\n| `inoInteracted` | Emitted when the user interacts with the tab. This event is used by the ino-tab-bar. | `CustomEvent<any>` |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-icon](../ino-icon)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-tab --\x3e ino-icon\n  style ino-tab fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')]},1347:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_button_stories_DefaultUsage})),__webpack_require__.d(__webpack_exports__,"Forms",(function(){return Forms}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2),icons=__webpack_require__(23);__webpack_require__(1261);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Buttons/<ino-button>",parameters:(_parameters={storySource:{source:"\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import { boolean, select, text } from '@storybook/addon-knobs';\\n\\nimport componentReadme from '_local-elements/src/components/ino-button/readme.md';\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\nimport ICONS from '_local-elements/src/components/ino-icon/icons';\\n\\nimport './ino-button.scss';\\n\\nexport default {\\n  title: 'Buttons/<ino-button>',\\n  parameters: {\\n    actions: {\\n      handles: ['click .customizable-button', 'reset .reset-form', 'submit .submit-form']\\n    }\\n  },\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /* html */ `\\n    <div class=\\\"story-button\\\">\\n      <style>\\n          ino-button.customizable-button {\\n            --button-color-primary: ${text(\\n              '--button-color-primary',\\n              '#3d40f5',\\n              'Custom Properties'\\n            )};\\n            --button-color-primary-light: ${text(\\n              '--button-color-primary-light',\\n              '#5d60f7',\\n              'Custom Properties'\\n            )};\\n            --button-color-primary-dark: ${text(\\n              '--button-color-primary-dark',\\n              '#0d10f3',\\n              'Custom Properties'\\n            )};\\n            --button-color-primary-contrast: ${text(\\n              '--button-color-primary-contrast',\\n              '#fff',\\n              'Custom Properties'\\n            )};\\n            --button-color-primary-shadow-light: ${text(\\n              '--button-color-primary-shadow-light',\\n              'rgba(61, 214, 245, 0.14)',\\n              'Custom Properties'\\n            )};\\n            --button-color-primary-shadow-dark: ${text(\\n              '--button-color-primary-shadow-light',\\n              'rgba(61, 64, 245, 0.3)',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary: ${text(\\n              '--button-color-secondary',\\n              '#9ccd00',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary-light: ${text(\\n              '--button-color-secondary-light',\\n              '#bbe962',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary-dark: ${text(\\n              '--button-color-secondary-dark',\\n              '#93bf00',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary-contrast: ${text(\\n              '--button-color-secondary-contrast',\\n              '#fff',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary-shadow-light: ${text(\\n              '--button-color-secondary-shadow-light',\\n              'rgba(156, 205, 0, 0.14)',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary-shadow-dark: ${text(\\n              '--button-color-secondary-shadow-light',\\n              'rgba(181, 230, 23, 0.30)',\\n              'Custom Properties'\\n            )};\\n          }\\n      </style>\\n      <ino-button\\n        class=\\\"customizable-button\\\"\\n        ino-color-scheme=\\\"${select(\\n          'ino-color-scheme',\\n          ['primary', 'secondary', 'white', 'grey'],\\n          'primary',\\n          'General'\\n        )}\\\"\\n        ino-fill=\\\"${select('ino-fill', ['solid', 'outline', 'inverse'], 'solid', 'General')}\\\"\\n        ino-icon-leading=\\\"${boolean('ino-icon-leading', false, 'Icon')}\\\"\\n        ino-icon-trailing=\\\"${boolean('ino-icon-trailing', false, 'Icon')}\\\"\\n        ino-dense=\\\"${boolean('ino-dense', false, 'General')}\\\"\\n        ino-full-width=\\\"${boolean('ino-full-width', false, 'General')}\\\"\\n        disabled=\\\"${boolean('disabled', false, 'General')}\\\"\\n        ino-loading=\\\"${boolean('ino-loading', false, 'General')}\\\"\\n        ino-edge-mirrored=\\\"${boolean('ino-edge-mirrored', false, 'General')}\\\"\\n      >\\n        <ino-icon slot=\\\"ino-icon-leading\\\" ino-icon=\\\"${select('ino-icon-leading-slot', ICONS, 'Add', 'Icon')}\\\"></ino-icon>\\n        ${text('<slot />', 'Customizable button', 'General')}\\n        <ino-icon slot=\\\"ino-icon-trailing\\\" ino-icon=\\\"${select('ino-icon-trailing-slot', ICONS, 'Add', 'Icon')}\\\"></ino-icon>\\n      </ino-button>\\n\\n      <h4>Variations</h4>\\n      <div class=\\\"button-row\\\">\\n        <ino-button ino-fill=\\\"solid\\\">Solid Primary</ino-button>\\n        <ino-button ino-fill=\\\"outline\\\">Outline Primary</ino-button>\\n        <ino-button ino-fill=\\\"inverse\\\">Inverse Primary</ino-button>\\n      </div>\\n      <div class=\\\"button-row\\\">\\n        <ino-button ino-fill=\\\"solid\\\" ino-color-scheme=\\\"secondary\\\">Solid Secondary </ino-button>\\n        <ino-button ino-fill=\\\"outline\\\" ino-color-scheme=\\\"secondary\\\">Outline Secondary</ino-button>\\n        <ino-button ino-fill=\\\"inverse\\\" ino-color-scheme=\\\"secondary\\\">Inverse Secondary</ino-button>\\n      </div>\\n      <div class=\\\"button-row\\\">\\n        <ino-button ino-fill=\\\"outline\\\" ino-color-scheme=\\\"grey\\\">Outline Grey</ino-button>\\n        <div style=\\\"background-color: blue; height: 100%; padding: 5px;\\\">\\n            <ino-button style=\\\"width: 50%; margin: 0 auto;\\\" ino-fill=\\\"outline\\\" ino-color-scheme=\\\"white\\\">Outline White</ino-button>\\n        </div>\\n      </div>\\n\\n      <h4>With icons</h4>\\n      <ino-button ino-icon-leading>\\n        <ino-icon ino-icon=\\\"info\\\" slot=\\\"ino-icon-leading\\\"></ino-icon>\\n        Button Icon left\\n      </ino-button>\\n      <ino-button ino-icon-trailing>\\n        <ino-icon ino-icon=\\\"info\\\" slot=\\\"ino-icon-trailing\\\"></ino-icon>\\n        Button Icon right\\n      </ino-button>\\n\\n      <h4>States</h4>\\n      <div class=\\\"button-row\\\">\\n        <ino-button disabled>Disabled</ino-button>\\n        <ino-button disabled ino-fill=\\\"outline\\\">Disabled outlined</ino-button>\\n        <ino-button ino-edge-mirrored=\\\"true\\\">With mirrored edge</ino-button>\\n        <ino-button ino-dense=\\\"true\\\">Dense</ino-button>\\n        <ino-button ino-loading=\\\"true\\\">Loading button</ino-button>\\n        <ino-button ino-loading=\\\"true\\\" ino-fill=\\\"outline\\\">Loading button</ino-button>\\n       </div>\\n       <ino-button ino-full-width>Full Width Button</ino-button>\\n    </div>\\n  `;\\n\\nexport const Forms = () => /*html*/ `\\n    <script>\\n      const form = querySelector('form');\\n      form.addEventListener('submit', e => e.preventDefault());\\n    <\/script>\\n\\n    <div class=\\\"story-button\\\">\\n      <h4>Form submit</h4>\\n      <form class=\\\"submit-form\\\" onsubmit=\\\"return false;\\\">\\n        <ino-button type=\\\"submit\\\">Button to submit parent form</ino-button>\\n        <ino-button type=\\\"submit\\\" disabled>Disabled button does not submit form</ino-button>\\n      </form>\\n\\n      <h4>Form reset</h4>\\n      <form class=\\\"reset-form\\\">\\n        <ino-input class=\\\"reset-input\\\" placeholder=\\\"Input in reset form\\\" value=\\\"Value\\\"></ino-input>\\n        <ino-button type=\\\"reset\\\">Reset form values on the left</ino-button>\\n      </form>\\n\\n      <h4>Button that submits external form with form attribute</h4>\\n      <form class=\\\"submit-form\\\" id=\\\"form1\\\" onsubmit=\\\"return false;\\\">\\n      <ino-button type=\\\"submit\\\" form=\\\"form1\\\">Button with form attribute</ino-button>\\n      </form>\\n    </div>\\n  `;\\n\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"DefaultUsage\":{\"startLoc\":{\"col\":28,\"line\":19},\"endLoc\":{\"col\":3,\"line\":146},\"startBody\":{\"col\":28,\"line\":19},\"endBody\":{\"col\":3,\"line\":146}},\"Forms\":{\"startLoc\":{\"col\":21,\"line\":148},\"endLoc\":{\"col\":3,\"line\":172},\"startBody\":{\"col\":21,\"line\":148},\"endBody\":{\"col\":3,\"line\":172}}};\n    \nimport { boolean, select, text } from '@storybook/addon-knobs';\n\nimport componentReadme from '_local-elements/src/components/ino-button/readme.md';\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\nimport ICONS from '_local-elements/src/components/ino-icon/icons';\n\nimport './ino-button.scss';\n\nexport default {\n  title: 'Buttons/<ino-button>',\n  parameters: {\"storySource\":{\"source\":\"import { boolean, select, text } from '@storybook/addon-knobs';\\n\\nimport componentReadme from '_local-elements/src/components/ino-button/readme.md';\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\nimport ICONS from '_local-elements/src/components/ino-icon/icons';\\n\\nimport './ino-button.scss';\\n\\nexport default {\\n  title: 'Buttons/<ino-button>',\\n  parameters: {\\n    actions: {\\n      handles: ['click .customizable-button', 'reset .reset-form', 'submit .submit-form']\\n    }\\n  },\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /* html */ `\\n    <div class=\\\"story-button\\\">\\n      <style>\\n          ino-button.customizable-button {\\n            --button-color-primary: ${text(\\n              '--button-color-primary',\\n              '#3d40f5',\\n              'Custom Properties'\\n            )};\\n            --button-color-primary-light: ${text(\\n              '--button-color-primary-light',\\n              '#5d60f7',\\n              'Custom Properties'\\n            )};\\n            --button-color-primary-dark: ${text(\\n              '--button-color-primary-dark',\\n              '#0d10f3',\\n              'Custom Properties'\\n            )};\\n            --button-color-primary-contrast: ${text(\\n              '--button-color-primary-contrast',\\n              '#fff',\\n              'Custom Properties'\\n            )};\\n            --button-color-primary-shadow-light: ${text(\\n              '--button-color-primary-shadow-light',\\n              'rgba(61, 214, 245, 0.14)',\\n              'Custom Properties'\\n            )};\\n            --button-color-primary-shadow-dark: ${text(\\n              '--button-color-primary-shadow-light',\\n              'rgba(61, 64, 245, 0.3)',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary: ${text(\\n              '--button-color-secondary',\\n              '#9ccd00',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary-light: ${text(\\n              '--button-color-secondary-light',\\n              '#bbe962',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary-dark: ${text(\\n              '--button-color-secondary-dark',\\n              '#93bf00',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary-contrast: ${text(\\n              '--button-color-secondary-contrast',\\n              '#fff',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary-shadow-light: ${text(\\n              '--button-color-secondary-shadow-light',\\n              'rgba(156, 205, 0, 0.14)',\\n              'Custom Properties'\\n            )};\\n            --button-color-secondary-shadow-dark: ${text(\\n              '--button-color-secondary-shadow-light',\\n              'rgba(181, 230, 23, 0.30)',\\n              'Custom Properties'\\n            )};\\n          }\\n      </style>\\n      <ino-button\\n        class=\\\"customizable-button\\\"\\n        ino-color-scheme=\\\"${select(\\n          'ino-color-scheme',\\n          ['primary', 'secondary', 'white', 'grey'],\\n          'primary',\\n          'General'\\n        )}\\\"\\n        ino-fill=\\\"${select('ino-fill', ['solid', 'outline', 'inverse'], 'solid', 'General')}\\\"\\n        ino-icon-leading=\\\"${boolean('ino-icon-leading', false, 'Icon')}\\\"\\n        ino-icon-trailing=\\\"${boolean('ino-icon-trailing', false, 'Icon')}\\\"\\n        ino-dense=\\\"${boolean('ino-dense', false, 'General')}\\\"\\n        ino-full-width=\\\"${boolean('ino-full-width', false, 'General')}\\\"\\n        disabled=\\\"${boolean('disabled', false, 'General')}\\\"\\n        ino-loading=\\\"${boolean('ino-loading', false, 'General')}\\\"\\n        ino-edge-mirrored=\\\"${boolean('ino-edge-mirrored', false, 'General')}\\\"\\n      >\\n        <ino-icon slot=\\\"ino-icon-leading\\\" ino-icon=\\\"${select('ino-icon-leading-slot', ICONS, 'Add', 'Icon')}\\\"></ino-icon>\\n        ${text('<slot />', 'Customizable button', 'General')}\\n        <ino-icon slot=\\\"ino-icon-trailing\\\" ino-icon=\\\"${select('ino-icon-trailing-slot', ICONS, 'Add', 'Icon')}\\\"></ino-icon>\\n      </ino-button>\\n\\n      <h4>Variations</h4>\\n      <div class=\\\"button-row\\\">\\n        <ino-button ino-fill=\\\"solid\\\">Solid Primary</ino-button>\\n        <ino-button ino-fill=\\\"outline\\\">Outline Primary</ino-button>\\n        <ino-button ino-fill=\\\"inverse\\\">Inverse Primary</ino-button>\\n      </div>\\n      <div class=\\\"button-row\\\">\\n        <ino-button ino-fill=\\\"solid\\\" ino-color-scheme=\\\"secondary\\\">Solid Secondary </ino-button>\\n        <ino-button ino-fill=\\\"outline\\\" ino-color-scheme=\\\"secondary\\\">Outline Secondary</ino-button>\\n        <ino-button ino-fill=\\\"inverse\\\" ino-color-scheme=\\\"secondary\\\">Inverse Secondary</ino-button>\\n      </div>\\n      <div class=\\\"button-row\\\">\\n        <ino-button ino-fill=\\\"outline\\\" ino-color-scheme=\\\"grey\\\">Outline Grey</ino-button>\\n        <div style=\\\"background-color: blue; height: 100%; padding: 5px;\\\">\\n            <ino-button style=\\\"width: 50%; margin: 0 auto;\\\" ino-fill=\\\"outline\\\" ino-color-scheme=\\\"white\\\">Outline White</ino-button>\\n        </div>\\n      </div>\\n\\n      <h4>With icons</h4>\\n      <ino-button ino-icon-leading>\\n        <ino-icon ino-icon=\\\"info\\\" slot=\\\"ino-icon-leading\\\"></ino-icon>\\n        Button Icon left\\n      </ino-button>\\n      <ino-button ino-icon-trailing>\\n        <ino-icon ino-icon=\\\"info\\\" slot=\\\"ino-icon-trailing\\\"></ino-icon>\\n        Button Icon right\\n      </ino-button>\\n\\n      <h4>States</h4>\\n      <div class=\\\"button-row\\\">\\n        <ino-button disabled>Disabled</ino-button>\\n        <ino-button disabled ino-fill=\\\"outline\\\">Disabled outlined</ino-button>\\n        <ino-button ino-edge-mirrored=\\\"true\\\">With mirrored edge</ino-button>\\n        <ino-button ino-dense=\\\"true\\\">Dense</ino-button>\\n        <ino-button ino-loading=\\\"true\\\">Loading button</ino-button>\\n        <ino-button ino-loading=\\\"true\\\" ino-fill=\\\"outline\\\">Loading button</ino-button>\\n       </div>\\n       <ino-button ino-full-width>Full Width Button</ino-button>\\n    </div>\\n  `;\\n\\nexport const Forms = () => /*html*/ `\\n    <script>\\n      const form = querySelector('form');\\n      form.addEventListener('submit', e => e.preventDefault());\\n    <\/script>\\n\\n    <div class=\\\"story-button\\\">\\n      <h4>Form submit</h4>\\n      <form class=\\\"submit-form\\\" onsubmit=\\\"return false;\\\">\\n        <ino-button type=\\\"submit\\\">Button to submit parent form</ino-button>\\n        <ino-button type=\\\"submit\\\" disabled>Disabled button does not submit form</ino-button>\\n      </form>\\n\\n      <h4>Form reset</h4>\\n      <form class=\\\"reset-form\\\">\\n        <ino-input class=\\\"reset-input\\\" placeholder=\\\"Input in reset form\\\" value=\\\"Value\\\"></ino-input>\\n        <ino-button type=\\\"reset\\\">Reset form values on the left</ino-button>\\n      </form>\\n\\n      <h4>Button that submits external form with form attribute</h4>\\n      <form class=\\\"submit-form\\\" id=\\\"form1\\\" onsubmit=\\\"return false;\\\">\\n      <ino-button type=\\\"submit\\\" form=\\\"form1\\\">Button with form attribute</ino-button>\\n      </form>\\n    </div>\\n  `;\\n\",\"locationsMap\":{\"default-usage\":{\"startLoc\":{\"col\":28,\"line\":19},\"endLoc\":{\"col\":3,\"line\":146},\"startBody\":{\"col\":28,\"line\":19},\"endBody\":{\"col\":3,\"line\":146}},\"forms\":{\"startLoc\":{\"col\":21,\"line\":148},\"endLoc\":{\"col\":3,\"line\":172},\"startBody\":{\"col\":21,\"line\":148},\"endBody\":{\"col\":3,\"line\":172}}}},\n    actions: {\n      handles: ['click .customizable-button', 'reset .reset-form', 'submit .submit-form']\n    }\n  },\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /* html */ `\n    <div class=\"story-button\">\n      <style>\n          ino-button.customizable-button {\n            --button-color-primary: ${text(\n              '--button-color-primary',\n              '#3d40f5',\n              'Custom Properties'\n            )};\n            --button-color-primary-light: ${text(\n              '--button-color-primary-light',\n              '#5d60f7',\n              'Custom Properties'\n            )};\n            --button-color-primary-dark: ${text(\n              '--button-color-primary-dark',\n              '#0d10f3',\n              'Custom Properties'\n            )};\n            --button-color-primary-contrast: ${text(\n              '--button-color-primary-contrast',\n              '#fff',\n              'Custom Properties'\n            )};\n            --button-color-primary-shadow-light: ${text(\n              '--button-color-primary-shadow-light',\n              'rgba(61, 214, 245, 0.14)',\n              'Custom Properties'\n            )};\n            --button-color-primary-shadow-dark: ${text(\n              '--button-color-primary-shadow-light',\n              'rgba(61, 64, 245, 0.3)',\n              'Custom Properties'\n            )};\n            --button-color-secondary: ${text(\n              '--button-color-secondary',\n              '#9ccd00',\n              'Custom Properties'\n            )};\n            --button-color-secondary-light: ${text(\n              '--button-color-secondary-light',\n              '#bbe962',\n              'Custom Properties'\n            )};\n            --button-color-secondary-dark: ${text(\n              '--button-color-secondary-dark',\n              '#93bf00',\n              'Custom Properties'\n            )};\n            --button-color-secondary-contrast: ${text(\n              '--button-color-secondary-contrast',\n              '#fff',\n              'Custom Properties'\n            )};\n            --button-color-secondary-shadow-light: ${text(\n              '--button-color-secondary-shadow-light',\n              'rgba(156, 205, 0, 0.14)',\n              'Custom Properties'\n            )};\n            --button-color-secondary-shadow-dark: ${text(\n              '--button-color-secondary-shadow-light',\n              'rgba(181, 230, 23, 0.30)',\n              'Custom Properties'\n            )};\n          }\n      </style>\n      <ino-button\n        class=\"customizable-button\"\n        ino-color-scheme=\"${select(\n          'ino-color-scheme',\n          ['primary', 'secondary', 'white', 'grey'],\n          'primary',\n          'General'\n        )}\"\n        ino-fill=\"${select('ino-fill', ['solid', 'outline', 'inverse'], 'solid', 'General')}\"\n        ino-icon-leading=\"${boolean('ino-icon-leading', false, 'Icon')}\"\n        ino-icon-trailing=\"${boolean('ino-icon-trailing', false, 'Icon')}\"\n        ino-dense=\"${boolean('ino-dense', false, 'General')}\"\n        ino-full-width=\"${boolean('ino-full-width', false, 'General')}\"\n        disabled=\"${boolean('disabled', false, 'General')}\"\n        ino-loading=\"${boolean('ino-loading', false, 'General')}\"\n        ino-edge-mirrored=\"${boolean('ino-edge-mirrored', false, 'General')}\"\n      >\n        <ino-icon slot=\"ino-icon-leading\" ino-icon=\"${select('ino-icon-leading-slot', ICONS, 'Add', 'Icon')}\"></ino-icon>\n        ${text('<slot />', 'Customizable button', 'General')}\n        <ino-icon slot=\"ino-icon-trailing\" ino-icon=\"${select('ino-icon-trailing-slot', ICONS, 'Add', 'Icon')}\"></ino-icon>\n      </ino-button>\n\n      <h4>Variations</h4>\n      <div class=\"button-row\">\n        <ino-button ino-fill=\"solid\">Solid Primary</ino-button>\n        <ino-button ino-fill=\"outline\">Outline Primary</ino-button>\n        <ino-button ino-fill=\"inverse\">Inverse Primary</ino-button>\n      </div>\n      <div class=\"button-row\">\n        <ino-button ino-fill=\"solid\" ino-color-scheme=\"secondary\">Solid Secondary </ino-button>\n        <ino-button ino-fill=\"outline\" ino-color-scheme=\"secondary\">Outline Secondary</ino-button>\n        <ino-button ino-fill=\"inverse\" ino-color-scheme=\"secondary\">Inverse Secondary</ino-button>\n      </div>\n      <div class=\"button-row\">\n        <ino-button ino-fill=\"outline\" ino-color-scheme=\"grey\">Outline Grey</ino-button>\n        <div style=\"background-color: blue; height: 100%; padding: 5px;\">\n            <ino-button style=\"width: 50%; margin: 0 auto;\" ino-fill=\"outline\" ino-color-scheme=\"white\">Outline White</ino-button>\n        </div>\n      </div>\n\n      <h4>With icons</h4>\n      <ino-button ino-icon-leading>\n        <ino-icon ino-icon=\"info\" slot=\"ino-icon-leading\"></ino-icon>\n        Button Icon left\n      </ino-button>\n      <ino-button ino-icon-trailing>\n        <ino-icon ino-icon=\"info\" slot=\"ino-icon-trailing\"></ino-icon>\n        Button Icon right\n      </ino-button>\n\n      <h4>States</h4>\n      <div class=\"button-row\">\n        <ino-button disabled>Disabled</ino-button>\n        <ino-button disabled ino-fill=\"outline\">Disabled outlined</ino-button>\n        <ino-button ino-edge-mirrored=\"true\">With mirrored edge</ino-button>\n        <ino-button ino-dense=\"true\">Dense</ino-button>\n        <ino-button ino-loading=\"true\">Loading button</ino-button>\n        <ino-button ino-loading=\"true\" ino-fill=\"outline\">Loading button</ino-button>\n       </div>\n       <ino-button ino-full-width>Full Width Button</ino-button>\n    </div>\n  `;;\n\nexport const Forms = () => /*html*/ `\n    <script>\n      const form = querySelector('form');\n      form.addEventListener('submit', e => e.preventDefault());\n    <\/script>\n\n    <div class=\"story-button\">\n      <h4>Form submit</h4>\n      <form class=\"submit-form\" onsubmit=\"return false;\">\n        <ino-button type=\"submit\">Button to submit parent form</ino-button>\n        <ino-button type=\"submit\" disabled>Disabled button does not submit form</ino-button>\n      </form>\n\n      <h4>Form reset</h4>\n      <form class=\"reset-form\">\n        <ino-input class=\"reset-input\" placeholder=\"Input in reset form\" value=\"Value\"></ino-input>\n        <ino-button type=\"reset\">Reset form values on the left</ino-button>\n      </form>\n\n      <h4>Button that submits external form with form attribute</h4>\n      <form class=\"submit-form\" id=\"form1\" onsubmit=\"return false;\">\n      <ino-button type=\"submit\" form=\"form1\">Button with form attribute</ino-button>\n      </form>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:27},endLoc:{col:3,line:154},startBody:{col:28,line:27},endBody:{col:3,line:154}},forms:{startLoc:{col:21,line:156},endLoc:{col:3,line:180},startBody:{col:21,line:156},endBody:{col:3,line:180}}}}},_defineProperty(_parameters,"storySource",{source:"import { boolean, select, text } from '@storybook/addon-knobs';\n\nimport componentReadme from '_local-elements/src/components/ino-button/readme.md';\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\nimport ICONS from '_local-elements/src/components/ino-icon/icons';\n\nimport './ino-button.scss';\n\nexport default {\n  title: 'Buttons/<ino-button>',\n  parameters: {\n    actions: {\n      handles: ['click .customizable-button', 'reset .reset-form', 'submit .submit-form']\n    }\n  },\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /* html */ `\n    <div class=\"story-button\">\n      <style>\n          ino-button.customizable-button {\n            --button-color-primary: ${text(\n              '--button-color-primary',\n              '#3d40f5',\n              'Custom Properties'\n            )};\n            --button-color-primary-light: ${text(\n              '--button-color-primary-light',\n              '#5d60f7',\n              'Custom Properties'\n            )};\n            --button-color-primary-dark: ${text(\n              '--button-color-primary-dark',\n              '#0d10f3',\n              'Custom Properties'\n            )};\n            --button-color-primary-contrast: ${text(\n              '--button-color-primary-contrast',\n              '#fff',\n              'Custom Properties'\n            )};\n            --button-color-primary-shadow-light: ${text(\n              '--button-color-primary-shadow-light',\n              'rgba(61, 214, 245, 0.14)',\n              'Custom Properties'\n            )};\n            --button-color-primary-shadow-dark: ${text(\n              '--button-color-primary-shadow-light',\n              'rgba(61, 64, 245, 0.3)',\n              'Custom Properties'\n            )};\n            --button-color-secondary: ${text(\n              '--button-color-secondary',\n              '#9ccd00',\n              'Custom Properties'\n            )};\n            --button-color-secondary-light: ${text(\n              '--button-color-secondary-light',\n              '#bbe962',\n              'Custom Properties'\n            )};\n            --button-color-secondary-dark: ${text(\n              '--button-color-secondary-dark',\n              '#93bf00',\n              'Custom Properties'\n            )};\n            --button-color-secondary-contrast: ${text(\n              '--button-color-secondary-contrast',\n              '#fff',\n              'Custom Properties'\n            )};\n            --button-color-secondary-shadow-light: ${text(\n              '--button-color-secondary-shadow-light',\n              'rgba(156, 205, 0, 0.14)',\n              'Custom Properties'\n            )};\n            --button-color-secondary-shadow-dark: ${text(\n              '--button-color-secondary-shadow-light',\n              'rgba(181, 230, 23, 0.30)',\n              'Custom Properties'\n            )};\n          }\n      </style>\n      <ino-button\n        class=\"customizable-button\"\n        ino-color-scheme=\"${select(\n          'ino-color-scheme',\n          ['primary', 'secondary', 'white', 'grey'],\n          'primary',\n          'General'\n        )}\"\n        ino-fill=\"${select('ino-fill', ['solid', 'outline', 'inverse'], 'solid', 'General')}\"\n        ino-icon-leading=\"${boolean('ino-icon-leading', false, 'Icon')}\"\n        ino-icon-trailing=\"${boolean('ino-icon-trailing', false, 'Icon')}\"\n        ino-dense=\"${boolean('ino-dense', false, 'General')}\"\n        ino-full-width=\"${boolean('ino-full-width', false, 'General')}\"\n        disabled=\"${boolean('disabled', false, 'General')}\"\n        ino-loading=\"${boolean('ino-loading', false, 'General')}\"\n        ino-edge-mirrored=\"${boolean('ino-edge-mirrored', false, 'General')}\"\n      >\n        <ino-icon slot=\"ino-icon-leading\" ino-icon=\"${select('ino-icon-leading-slot', ICONS, 'Add', 'Icon')}\"></ino-icon>\n        ${text('<slot />', 'Customizable button', 'General')}\n        <ino-icon slot=\"ino-icon-trailing\" ino-icon=\"${select('ino-icon-trailing-slot', ICONS, 'Add', 'Icon')}\"></ino-icon>\n      </ino-button>\n\n      <h4>Variations</h4>\n      <div class=\"button-row\">\n        <ino-button ino-fill=\"solid\">Solid Primary</ino-button>\n        <ino-button ino-fill=\"outline\">Outline Primary</ino-button>\n        <ino-button ino-fill=\"inverse\">Inverse Primary</ino-button>\n      </div>\n      <div class=\"button-row\">\n        <ino-button ino-fill=\"solid\" ino-color-scheme=\"secondary\">Solid Secondary </ino-button>\n        <ino-button ino-fill=\"outline\" ino-color-scheme=\"secondary\">Outline Secondary</ino-button>\n        <ino-button ino-fill=\"inverse\" ino-color-scheme=\"secondary\">Inverse Secondary</ino-button>\n      </div>\n      <div class=\"button-row\">\n        <ino-button ino-fill=\"outline\" ino-color-scheme=\"grey\">Outline Grey</ino-button>\n        <div style=\"background-color: blue; height: 100%; padding: 5px;\">\n            <ino-button style=\"width: 50%; margin: 0 auto;\" ino-fill=\"outline\" ino-color-scheme=\"white\">Outline White</ino-button>\n        </div>\n      </div>\n\n      <h4>With icons</h4>\n      <ino-button ino-icon-leading>\n        <ino-icon ino-icon=\"info\" slot=\"ino-icon-leading\"></ino-icon>\n        Button Icon left\n      </ino-button>\n      <ino-button ino-icon-trailing>\n        <ino-icon ino-icon=\"info\" slot=\"ino-icon-trailing\"></ino-icon>\n        Button Icon right\n      </ino-button>\n\n      <h4>States</h4>\n      <div class=\"button-row\">\n        <ino-button disabled>Disabled</ino-button>\n        <ino-button disabled ino-fill=\"outline\">Disabled outlined</ino-button>\n        <ino-button ino-edge-mirrored=\"true\">With mirrored edge</ino-button>\n        <ino-button ino-dense=\"true\">Dense</ino-button>\n        <ino-button ino-loading=\"true\">Loading button</ino-button>\n        <ino-button ino-loading=\"true\" ino-fill=\"outline\">Loading button</ino-button>\n       </div>\n       <ino-button ino-full-width>Full Width Button</ino-button>\n    </div>\n  `;\n\nexport const Forms = () => /*html*/ `\n    <script>\n      const form = querySelector('form');\n      form.addEventListener('submit', e => e.preventDefault());\n    <\/script>\n\n    <div class=\"story-button\">\n      <h4>Form submit</h4>\n      <form class=\"submit-form\" onsubmit=\"return false;\">\n        <ino-button type=\"submit\">Button to submit parent form</ino-button>\n        <ino-button type=\"submit\" disabled>Disabled button does not submit form</ino-button>\n      </form>\n\n      <h4>Form reset</h4>\n      <form class=\"reset-form\">\n        <ino-input class=\"reset-input\" placeholder=\"Input in reset form\" value=\"Value\"></ino-input>\n        <ino-button type=\"reset\">Reset form values on the left</ino-button>\n      </form>\n\n      <h4>Button that submits external form with form attribute</h4>\n      <form class=\"submit-form\" id=\"form1\" onsubmit=\"return false;\">\n      <ino-button type=\"submit\" form=\"form1\">Button with form attribute</ino-button>\n      </form>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:19},endLoc:{col:3,line:146},startBody:{col:28,line:19},endBody:{col:3,line:146}},forms:{startLoc:{col:21,line:148},endLoc:{col:3,line:172},startBody:{col:21,line:148},endBody:{col:3,line:172}}}}),_defineProperty(_parameters,"actions",{handles:["click .customizable-button","reset .reset-form","submit .submit-form"]}),_parameters),decorators:[Object(with_stencil_readme.a)('# ino-button\n\nA button component with different styles and icon capability.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n  .querySelector(\'ino-button\')\n  .addEventListener(\'click\', _ => alert(\'Button was clicked!\'));\n```\n\n```html\n<ino-button\n  autofocus\n  disabled\n  name="<string>"\n  form="<string>"\n  type="<string>"\n  ino-color-scheme="<string>"\n  ino-fill="<string>"\n  ino-icon-leading\n  ino-icon-trailing\n  ino-dense\n  onClick="handleClick()"\n>\n    <ino-icon ino-icon="add"></ino-icon>\n    Button Content\n</ino-button>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```jsx\nimport { Component } from \'react\';\nimport { InoButton, InoIcon } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoButton\n        inoColorScheme="dark"\n        inoIconLeading\n        onClick={_ => alert("Yeah, you clicked the button!")}\n      >\n        <InoIcon inoIcon="add" />\n        You can click me!\n      </InoButton>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoButton } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Button: React.FunctionComponent<Components.InoButtonAttributes> = props => {\n  const { inoColorScheme, onClick } = props;\n\n  return (\n    <InoButton\n      inoColorScheme={inoColorScheme}\n      inoIconLeading\n      onClick={onClick}\n    >\n        <InoIcon inoIcon={"add"} />\n        You can click me!\n      </InoButton>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <Button\n        inoColorScheme="dark"\n        onClick={_ => alert("Yeah, you clicked the button!")}\n      />\n    );\n  }\n}\n```\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property          | Attribute           | Description                                                                                                                                                                                                                                               | Type                                            | Default     |\n| ----------------- | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------- | ----------- |\n| `autoFocus`       | `autofocus`         | Sets the autofocus for this element.                                                                                                                                                                                                                      | `boolean`                                       | `undefined` |\n| `disabled`        | `disabled`          | Disables this element.                                                                                                                                                                                                                                    | `boolean`                                       | `undefined` |\n| `form`            | `form`              | The form id this element origins to.                                                                                                                                                                                                                      | `string`                                        | `undefined` |\n| `inoColorScheme`  | `ino-color-scheme`  | The name of the color scheme which is used to style the background and outline of this component. Possible values: `primary` (default),  `secondary`, `grey`, `white`. `white` and `grey` can only be used in combination with the `outline` fill-option! | `"grey" \\| "primary" \\| "secondary" \\| "white"` | `\'primary\'` |\n| `inoDense`        | `ino-dense`         | Makes the button text and container slightly smaller.                                                                                                                                                                                                     | `boolean`                                       | `false`     |\n| `inoEdgeMirrored` | `ino-edge-mirrored` | Styles the button to have the edge on the top-right instead of the top-left                                                                                                                                                                               | `boolean`                                       | `false`     |\n| `inoFill`         | `ino-fill`          | The fill type of this element. Possible values: `solid` (default), `outline`, `inverse`.                                                                                                                                                                  | `"inverse" \\| "outline" \\| "solid"`             | `\'solid\'`   |\n| `inoFullWidth`    | `ino-full-width`    | Styles the button in 100% width.                                                                                                                                                                                                                          | `boolean`                                       | `false`     |\n| `inoIconLeading`  | `ino-icon-leading`  | If enabled, prepends the slotted icon to the button label                                                                                                                                                                                                 | `boolean`                                       | `false`     |\n| `inoIconTrailing` | `ino-icon-trailing` | If enabled, appends the slotted icon to the button label                                                                                                                                                                                                  | `boolean`                                       | `false`     |\n| `inoLoading`      | `ino-loading`       | Shows an infinite loading spinner and prevents further clicks.                                                                                                                                                                                            | `boolean`                                       | `undefined` |\n| `name`            | `name`              | The name of the element.                                                                                                                                                                                                                                  | `string`                                        | `undefined` |\n| `type`            | `type`              | The type of this form.  Can either be `button`, `submit` or `reset`.                                                                                                                                                                                      | `"button" \\| "reset" \\| "submit"`               | `\'button\'`  |\n\n\n## CSS Custom Properties\n\n| Name                                        | Description                                                             |\n| ------------------------------------------- | ----------------------------------------------------------------------- |\n| `--ino-button-color-primary`                | Color of the primary button                                             |\n| `--ino-button-color-primary-contrast`       | Contrast color of the primary button. Will be used for the text color   |\n| `--ino-button-color-primary-dark`           | Dark color of the primary button. Will be used for the active effect    |\n| `--ino-button-color-primary-light`          | Light color of the primary button. Will be used for the hover effect    |\n| `--ino-button-color-primary-shadow-dark`    | Shadow color of the primary button used on active                       |\n| `--ino-button-color-primary-shadow-light`   | Shadow color of the primary button used on hover                        |\n| `--ino-button-color-secondary`              | Color of the primary button                                             |\n| `--ino-button-color-secondary-contrast`     | Contrast color of the secondary button. Will be used for the text color |\n| `--ino-button-color-secondary-dark`         | Dark color of the secondary button. Will be used for the active effect  |\n| `--ino-button-color-secondary-light`        | Light color of the secondary button. Will be used for the hover effect  |\n| `--ino-button-color-secondary-shadow-dark`  | Shadow color of the secondary button used on active                     |\n| `--ino-button-color-secondary-shadow-light` | Shadow color of the secondary button used on hover                      |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-input-file](../ino-input-file)\n - [ino-snackbar](../ino-snackbar)\n\n### Depends on\n\n- [ino-spinner](../ino-spinner)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-button --\x3e ino-spinner\n  ino-input-file --\x3e ino-button\n  ino-snackbar --\x3e ino-button\n  style ino-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')]};var ino_button_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-button">\n      <style>\n          ino-button.customizable-button {\n            --button-color-primary: '.concat(Object(dist.text)("--button-color-primary","#3d40f5","Custom Properties"),";\n            --button-color-primary-light: ").concat(Object(dist.text)("--button-color-primary-light","#5d60f7","Custom Properties"),";\n            --button-color-primary-dark: ").concat(Object(dist.text)("--button-color-primary-dark","#0d10f3","Custom Properties"),";\n            --button-color-primary-contrast: ").concat(Object(dist.text)("--button-color-primary-contrast","#fff","Custom Properties"),";\n            --button-color-primary-shadow-light: ").concat(Object(dist.text)("--button-color-primary-shadow-light","rgba(61, 214, 245, 0.14)","Custom Properties"),";\n            --button-color-primary-shadow-dark: ").concat(Object(dist.text)("--button-color-primary-shadow-light","rgba(61, 64, 245, 0.3)","Custom Properties"),";\n            --button-color-secondary: ").concat(Object(dist.text)("--button-color-secondary","#9ccd00","Custom Properties"),";\n            --button-color-secondary-light: ").concat(Object(dist.text)("--button-color-secondary-light","#bbe962","Custom Properties"),";\n            --button-color-secondary-dark: ").concat(Object(dist.text)("--button-color-secondary-dark","#93bf00","Custom Properties"),";\n            --button-color-secondary-contrast: ").concat(Object(dist.text)("--button-color-secondary-contrast","#fff","Custom Properties"),";\n            --button-color-secondary-shadow-light: ").concat(Object(dist.text)("--button-color-secondary-shadow-light","rgba(156, 205, 0, 0.14)","Custom Properties"),";\n            --button-color-secondary-shadow-dark: ").concat(Object(dist.text)("--button-color-secondary-shadow-light","rgba(181, 230, 23, 0.30)","Custom Properties"),';\n          }\n      </style>\n      <ino-button\n        class="customizable-button"\n        ino-color-scheme="').concat(Object(dist.select)("ino-color-scheme",["primary","secondary","white","grey"],"primary","General"),'"\n        ino-fill="').concat(Object(dist.select)("ino-fill",["solid","outline","inverse"],"solid","General"),'"\n        ino-icon-leading="').concat(Object(dist.boolean)("ino-icon-leading",!1,"Icon"),'"\n        ino-icon-trailing="').concat(Object(dist.boolean)("ino-icon-trailing",!1,"Icon"),'"\n        ino-dense="').concat(Object(dist.boolean)("ino-dense",!1,"General"),'"\n        ino-full-width="').concat(Object(dist.boolean)("ino-full-width",!1,"General"),'"\n        disabled="').concat(Object(dist.boolean)("disabled",!1,"General"),'"\n        ino-loading="').concat(Object(dist.boolean)("ino-loading",!1,"General"),'"\n        ino-edge-mirrored="').concat(Object(dist.boolean)("ino-edge-mirrored",!1,"General"),'"\n      >\n        <ino-icon slot="ino-icon-leading" ino-icon="').concat(Object(dist.select)("ino-icon-leading-slot",icons.a,"Add","Icon"),'"></ino-icon>\n        ').concat(Object(dist.text)("<slot />","Customizable button","General"),'\n        <ino-icon slot="ino-icon-trailing" ino-icon="').concat(Object(dist.select)("ino-icon-trailing-slot",icons.a,"Add","Icon"),'"></ino-icon>\n      </ino-button>\n\n      <h4>Variations</h4>\n      <div class="button-row">\n        <ino-button ino-fill="solid">Solid Primary</ino-button>\n        <ino-button ino-fill="outline">Outline Primary</ino-button>\n        <ino-button ino-fill="inverse">Inverse Primary</ino-button>\n      </div>\n      <div class="button-row">\n        <ino-button ino-fill="solid" ino-color-scheme="secondary">Solid Secondary </ino-button>\n        <ino-button ino-fill="outline" ino-color-scheme="secondary">Outline Secondary</ino-button>\n        <ino-button ino-fill="inverse" ino-color-scheme="secondary">Inverse Secondary</ino-button>\n      </div>\n      <div class="button-row">\n        <ino-button ino-fill="outline" ino-color-scheme="grey">Outline Grey</ino-button>\n        <div style="background-color: blue; height: 100%; padding: 5px;">\n            <ino-button style="width: 50%; margin: 0 auto;" ino-fill="outline" ino-color-scheme="white">Outline White</ino-button>\n        </div>\n      </div>\n\n      <h4>With icons</h4>\n      <ino-button ino-icon-leading>\n        <ino-icon ino-icon="info" slot="ino-icon-leading"></ino-icon>\n        Button Icon left\n      </ino-button>\n      <ino-button ino-icon-trailing>\n        <ino-icon ino-icon="info" slot="ino-icon-trailing"></ino-icon>\n        Button Icon right\n      </ino-button>\n\n      <h4>States</h4>\n      <div class="button-row">\n        <ino-button disabled>Disabled</ino-button>\n        <ino-button disabled ino-fill="outline">Disabled outlined</ino-button>\n        <ino-button ino-edge-mirrored="true">With mirrored edge</ino-button>\n        <ino-button ino-dense="true">Dense</ino-button>\n        <ino-button ino-loading="true">Loading button</ino-button>\n        <ino-button ino-loading="true" ino-fill="outline">Loading button</ino-button>\n       </div>\n       <ino-button ino-full-width>Full Width Button</ino-button>\n    </div>\n  ')},Forms=function Forms(){return'\n    <script>\n      const form = querySelector(\'form\');\n      form.addEventListener(\'submit\', e => e.preventDefault());\n    <\/script>\n\n    <div class="story-button">\n      <h4>Form submit</h4>\n      <form class="submit-form" onsubmit="return false;">\n        <ino-button type="submit">Button to submit parent form</ino-button>\n        <ino-button type="submit" disabled>Disabled button does not submit form</ino-button>\n      </form>\n\n      <h4>Form reset</h4>\n      <form class="reset-form">\n        <ino-input class="reset-input" placeholder="Input in reset form" value="Value"></ino-input>\n        <ino-button type="reset">Reset form values on the left</ino-button>\n      </form>\n\n      <h4>Button that submits external form with form attribute</h4>\n      <form class="submit-form" id="form1" onsubmit="return false;">\n      <ino-button type="submit" form="form1">Button with form attribute</ino-button>\n      </form>\n    </div>\n  '}},1348:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_card_stories_DefaultUsage}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1263);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, select } from \'@storybook/addon-knobs\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-card/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport \'./ino-card.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el === null) {\\n      return;\\n    }\\n    const card = el.closest(\'ino-card\');\\n    if (card === null) {\\n      return;\\n    }\\n    card.inoSelected = !card.inoSelected;\\n  };\\n\\n  document.addEventListener(\'click\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'click\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-card>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-card\\">\\n\\n      <h4>Customizable card</h4>\\n      <ino-card class=\\"customizable-card\\"\\n        ino-selected=\\"${boolean(\'ino-selected\', false)}\\"\\n        ino-color-scheme=\\"${select(\'ino-color-scheme\', [\'\', \'primary\', \'secondary\', \'dark\'], \'\')}\\">\\n        ${sampleCard}\\n      </ino-card>\\n\\n      <div class=\\"flex-cards\\">\\n        ${flexCard}\\n        ${flexCard}\\n        ${flexCard}\\n      </div>\\n    </div>\\n  `;\\n\\nconst sampleCard = `\\n  <div slot=\\"header\\" class=\\"card-header\\">\\n      <ino-icon ino-icon=\\"info\\" ino-clickable></ino-icon>\\n  </div>\\n  <div slot=\\"content\\" class=\\"card-content--vertical\\">\\n      <ino-img src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\"></ino-img>\\n  </div>\\n  <div slot=\\"footer\\" class=\\"sample-card-footer\\">\\n    <ino-segment-group>\\n        <ino-segment-button value=\\"1\\">Read</ino-segment-button>\\n        <ino-segment-button value=\\"2\\">Bookmark</ino-segment-button>\\n    </ino-segment-group>\\n  </div>\\n`;\\n\\nconst flexCard = `\\n  <ino-card>\\n      <div slot=\\"header\\" class=\\"card-header\\">\\n          <ino-icon ino-icon=\\"info\\" ino-clickable></ino-icon>\\n      </div>\\n      <div slot=\\"content\\" class=\\"card-content--vertical\\">\\n          <h3>Primary</h3>\\n      </div>\\n      <div slot=\\"footer\\" class=\\"card-footer\\">\\n          <p>Subtitle</p>\\n      </div>\\n  </ino-card>\\n`;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":43},"endLoc":{"col":3,"line":59},"startBody":{"col":28,"line":43},"endBody":{"col":3,"line":59}}};\n    \nimport { boolean, select } from \'@storybook/addon-knobs\';\n\nimport componentReadme from \'_local-elements/src/components/ino-card/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport \'./ino-card.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el === null) {\n      return;\n    }\n    const card = el.closest(\'ino-card\');\n    if (card === null) {\n      return;\n    }\n    card.inoSelected = !card.inoSelected;\n  };\n\n  document.addEventListener(\'click\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'click\', eventHandler);\n  };\n}\n\nexport default {parameters: {"storySource":{"source":"import { boolean, select } from \'@storybook/addon-knobs\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-card/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport \'./ino-card.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el === null) {\\n      return;\\n    }\\n    const card = el.closest(\'ino-card\');\\n    if (card === null) {\\n      return;\\n    }\\n    card.inoSelected = !card.inoSelected;\\n  };\\n\\n  document.addEventListener(\'click\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'click\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-card>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-card\\">\\n\\n      <h4>Customizable card</h4>\\n      <ino-card class=\\"customizable-card\\"\\n        ino-selected=\\"${boolean(\'ino-selected\', false)}\\"\\n        ino-color-scheme=\\"${select(\'ino-color-scheme\', [\'\', \'primary\', \'secondary\', \'dark\'], \'\')}\\">\\n        ${sampleCard}\\n      </ino-card>\\n\\n      <div class=\\"flex-cards\\">\\n        ${flexCard}\\n        ${flexCard}\\n        ${flexCard}\\n      </div>\\n    </div>\\n  `;\\n\\nconst sampleCard = `\\n  <div slot=\\"header\\" class=\\"card-header\\">\\n      <ino-icon ino-icon=\\"info\\" ino-clickable></ino-icon>\\n  </div>\\n  <div slot=\\"content\\" class=\\"card-content--vertical\\">\\n      <ino-img src=\\"https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png\\"></ino-img>\\n  </div>\\n  <div slot=\\"footer\\" class=\\"sample-card-footer\\">\\n    <ino-segment-group>\\n        <ino-segment-button value=\\"1\\">Read</ino-segment-button>\\n        <ino-segment-button value=\\"2\\">Bookmark</ino-segment-button>\\n    </ino-segment-group>\\n  </div>\\n`;\\n\\nconst flexCard = `\\n  <ino-card>\\n      <div slot=\\"header\\" class=\\"card-header\\">\\n          <ino-icon ino-icon=\\"info\\" ino-clickable></ino-icon>\\n      </div>\\n      <div slot=\\"content\\" class=\\"card-content--vertical\\">\\n          <h3>Primary</h3>\\n      </div>\\n      <div slot=\\"footer\\" class=\\"card-footer\\">\\n          <p>Subtitle</p>\\n      </div>\\n  </ino-card>\\n`;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":43},"endLoc":{"col":3,"line":59},"startBody":{"col":28,"line":43},"endBody":{"col":3,"line":59}}}},},\n  title: \'Structure/<ino-card>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-card">\n\n      <h4>Customizable card</h4>\n      <ino-card class="customizable-card"\n        ino-selected="${boolean(\'ino-selected\', false)}"\n        ino-color-scheme="${select(\'ino-color-scheme\', [\'\', \'primary\', \'secondary\', \'dark\'], \'\')}">\n        ${sampleCard}\n      </ino-card>\n\n      <div class="flex-cards">\n        ${flexCard}\n        ${flexCard}\n        ${flexCard}\n      </div>\n    </div>\n  `;\n\nconst sampleCard = `\n  <div slot="header" class="card-header">\n      <ino-icon ino-icon="info" ino-clickable></ino-icon>\n  </div>\n  <div slot="content" class="card-content--vertical">\n      <ino-img src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"></ino-img>\n  </div>\n  <div slot="footer" class="sample-card-footer">\n    <ino-segment-group>\n        <ino-segment-button value="1">Read</ino-segment-button>\n        <ino-segment-button value="2">Bookmark</ino-segment-button>\n    </ino-segment-group>\n  </div>\n`;\n\nconst flexCard = `\n  <ino-card>\n      <div slot="header" class="card-header">\n          <ino-icon ino-icon="info" ino-clickable></ino-icon>\n      </div>\n      <div slot="content" class="card-content--vertical">\n          <h3>Primary</h3>\n      </div>\n      <div slot="footer" class="card-footer">\n          <p>Subtitle</p>\n      </div>\n  </ino-card>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:51},endLoc:{col:3,line:67},startBody:{col:28,line:51},endBody:{col:3,line:67}}}}},"storySource",{source:'import { boolean, select } from \'@storybook/addon-knobs\';\n\nimport componentReadme from \'_local-elements/src/components/ino-card/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport \'./ino-card.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el === null) {\n      return;\n    }\n    const card = el.closest(\'ino-card\');\n    if (card === null) {\n      return;\n    }\n    card.inoSelected = !card.inoSelected;\n  };\n\n  document.addEventListener(\'click\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'click\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Structure/<ino-card>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-card">\n\n      <h4>Customizable card</h4>\n      <ino-card class="customizable-card"\n        ino-selected="${boolean(\'ino-selected\', false)}"\n        ino-color-scheme="${select(\'ino-color-scheme\', [\'\', \'primary\', \'secondary\', \'dark\'], \'\')}">\n        ${sampleCard}\n      </ino-card>\n\n      <div class="flex-cards">\n        ${flexCard}\n        ${flexCard}\n        ${flexCard}\n      </div>\n    </div>\n  `;\n\nconst sampleCard = `\n  <div slot="header" class="card-header">\n      <ino-icon ino-icon="info" ino-clickable></ino-icon>\n  </div>\n  <div slot="content" class="card-content--vertical">\n      <ino-img src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"></ino-img>\n  </div>\n  <div slot="footer" class="sample-card-footer">\n    <ino-segment-group>\n        <ino-segment-button value="1">Read</ino-segment-button>\n        <ino-segment-button value="2">Bookmark</ino-segment-button>\n    </ino-segment-group>\n  </div>\n`;\n\nconst flexCard = `\n  <ino-card>\n      <div slot="header" class="card-header">\n          <ino-icon ino-icon="info" ino-clickable></ino-icon>\n      </div>\n      <div slot="content" class="card-content--vertical">\n          <h3>Primary</h3>\n      </div>\n      <div slot="footer" class="card-footer">\n          <p>Subtitle</p>\n      </div>\n  </ino-card>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:43},endLoc:{col:3,line:59},startBody:{col:28,line:43},endBody:{col:3,line:59}}}}),title:"Structure/<ino-card>",decorators:[Object(with_stencil_readme.a)('# ino-card\n\nA card is as flexible and extensible content component. So far, the card is a simple content component with title and subtitle.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n  .querySelector(\'ino-card\')\n  .addEventListener(\'click\', _ => alert(\'Card was clicked!\'));\n```\n\n```html\n<ino-card\n  ino-subtitle="<string>"\n  ino-title="<string>"\n  ino-outline\n  ino-image="<string>"\n  ino-aspect-ratio="<string>"\n  ino-media-title\n  ino-color-scheme\n  onClick="handleClick()"\n>\n  <div slot="content">\x3c!-- Any content --\x3e</div>\n  <ino-button slot="action-buttons" ino-fill="transparent">Read</ino-button>\n  <ino-button slot="action-buttons" ...>Bookmark</ino-button>\n  <ino-icon-button slot="action-icons" ...></ino-icon-button>\n  <ino-icon-button slot="action-icons" ...></ino-icon-button>\n  <ino-icon-button slot="action-icons" ...></ino-icon-button>\n</ino-card>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoCard } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoCard inoTitle="The awesome card!">\n        <div slot="content">It\'s simple to use this component.</div>\n        <InoButton slot="action-buttons" ino-fill="transparent">\n          Accept\n        </InoButton>\n        <InoButton slot="action-buttons">Dismiss</InoButton>\n      </InoCard>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoButton, InoCard } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Card: React.FunctionComponent<Components.InoCardAttributes> = props => {\n  const { inoTitle, inoSubtitle } = props;\n\n  return (\n    <InoCard inoTitle={inoTitle} inoSubtitle={inoSubtitle}>\n      {props.children}\n    </InoCard>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <Card inoTitle="Eat apples!" inoSubtitle="They\'re so healthy">\n        <div slot="content">We should add an apple image here.</div>\n        <InoButton slot="action-buttons" ino-fill="transparent">\n          Accept\n        </InoButton>\n        <InoButton slot="action-buttons">Dismiss</InoButton>\n      </Card>\n    );\n  }\n}\n```\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property      | Attribute      | Description                                                        | Type      | Default |\n| ------------- | -------------- | ------------------------------------------------------------------ | --------- | ------- |\n| `inoSelected` | `ino-selected` | Selects the card and displays a check mark icon on top of the card | `boolean` | `false` |\n\n\n## CSS Custom Properties\n\n| Name                          | Description                        |\n| ----------------------------- | ---------------------------------- |\n| `--ino-card-background-color` | background color of the check mark |\n| `--ino-card-color`            | check mark color                   |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-icon](../ino-icon)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-card --\x3e ino-icon\n  style ino-card fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;if(null!==el){var card=el.closest("ino-card");null!==card&&(card.inoSelected=!card.inoSelected)}};return document.addEventListener("click",eventHandler),function(){document.removeEventListener("click",eventHandler)}}(),story()}]};var ino_card_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-card">\n\n      <h4>Customizable card</h4>\n      <ino-card class="customizable-card"\n        ino-selected="'.concat(Object(dist.boolean)("ino-selected",!1),'"\n        ino-color-scheme="').concat(Object(dist.select)("ino-color-scheme",["","primary","secondary","dark"],""),'">\n        ').concat(sampleCard,'\n      </ino-card>\n\n      <div class="flex-cards">\n        ').concat(flexCard,"\n        ").concat(flexCard,"\n        ").concat(flexCard,"\n      </div>\n    </div>\n  ")},sampleCard='\n  <div slot="header" class="card-header">\n      <ino-icon ino-icon="info" ino-clickable></ino-icon>\n  </div>\n  <div slot="content" class="card-content--vertical">\n      <ino-img src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"></ino-img>\n  </div>\n  <div slot="footer" class="sample-card-footer">\n    <ino-segment-group>\n        <ino-segment-button value="1">Read</ino-segment-button>\n        <ino-segment-button value="2">Bookmark</ino-segment-button>\n    </ino-segment-group>\n  </div>\n',flexCard='\n  <ino-card>\n      <div slot="header" class="card-header">\n          <ino-icon ino-icon="info" ino-clickable></ino-icon>\n      </div>\n      <div slot="content" class="card-content--vertical">\n          <h3>Primary</h3>\n      </div>\n      <div slot="footer" class="card-footer">\n          <p>Subtitle</p>\n      </div>\n  </ino-card>\n'},1349:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_checkbox_stories_DefaultUsage}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1265);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Input/<ino-checkbox>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, text } from \'@storybook/addon-knobs\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-checkbox/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport \'./ino-checkbox.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-checkbox\') {\\n      return;\\n    }\\n\\n    el.setAttribute(\'checked\', e.detail);\\n\\n    if (el.getAttribute(\'indeterminate\') === \'true\') {\\n      el.setAttribute(\'indeterminate\', \'false\');\\n    }\\n  };\\n\\n  document.addEventListener(\'checkedChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'checkedChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-checkbox>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'checkedChange .customizable-checkbox\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-checkbox\\">\\n  <ino-checkbox\\n    class=\\"customizable-checkbox\\"\\n    name=\\"customizable-checkbox\\"\\n    value=\\"placeholder-value\\"\\n    checked=\\"${boolean(\'checked\', false)}\\"\\n    disabled=\\"${boolean(\'disabled\', false)}\\"\\n    indeterminate=\\"${boolean(\'indeterminate\', false)}\\"\\n    ino-selection=\\"${boolean(\'ino-selection\', false)}\\"\\n  >\\n    ${text(\'<slot />\', \'Customizable checkbox\')}\\n  </ino-checkbox>\\n  <h4>Default</h4>\\n  <div class=\\"story-checkbox-states\\">\\n    <ino-checkbox checked>Checked</ino-checkbox>\\n    <ino-checkbox>Unchecked</ino-checkbox>\\n    <ino-checkbox indeterminate>Indeterminated</ino-checkbox>\\n    <ino-checkbox disabled checked>Checked and Disabled</ino-checkbox>\\n    <ino-checkbox disabled>Unchecked and Disabled</ino-checkbox>\\n    <ino-checkbox disabled indeterminate>Indeterminated and Disabled</ino-checkbox>\\n  </div>\\n\\n  <h4>Selection</h4>\\n  <div class=\\"story-selection-states\\">\\n       <ino-checkbox ino-selection checked>Checked</ino-checkbox>\\n       <ino-checkbox ino-selection>Unchecked</ino-checkbox>\\n       <ino-checkbox checked ino-selection disabled>Checked and disabled</ino-checkbox>\\n       <ino-checkbox ino-selection disabled>Unchecked and disabled</ino-checkbox>\\n  </div>\\n</div>\\n`;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":49},"endLoc":{"col":1,"line":80},"startBody":{"col":28,"line":49},"endBody":{"col":1,"line":80}}};\n    \nimport { boolean, text } from \'@storybook/addon-knobs\';\n\nimport componentReadme from \'_local-elements/src/components/ino-checkbox/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport \'./ino-checkbox.scss\';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-checkbox\') {\n      return;\n    }\n\n    el.setAttribute(\'checked\', e.detail);\n\n    if (el.getAttribute(\'indeterminate\') === \'true\') {\n      el.setAttribute(\'indeterminate\', \'false\');\n    }\n  };\n\n  document.addEventListener(\'checkedChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'checkedChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Input/<ino-checkbox>\',\n  parameters: {"storySource":{"source":"import { boolean, text } from \'@storybook/addon-knobs\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-checkbox/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport \'./ino-checkbox.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-checkbox\') {\\n      return;\\n    }\\n\\n    el.setAttribute(\'checked\', e.detail);\\n\\n    if (el.getAttribute(\'indeterminate\') === \'true\') {\\n      el.setAttribute(\'indeterminate\', \'false\');\\n    }\\n  };\\n\\n  document.addEventListener(\'checkedChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'checkedChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-checkbox>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'checkedChange .customizable-checkbox\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-checkbox\\">\\n  <ino-checkbox\\n    class=\\"customizable-checkbox\\"\\n    name=\\"customizable-checkbox\\"\\n    value=\\"placeholder-value\\"\\n    checked=\\"${boolean(\'checked\', false)}\\"\\n    disabled=\\"${boolean(\'disabled\', false)}\\"\\n    indeterminate=\\"${boolean(\'indeterminate\', false)}\\"\\n    ino-selection=\\"${boolean(\'ino-selection\', false)}\\"\\n  >\\n    ${text(\'<slot />\', \'Customizable checkbox\')}\\n  </ino-checkbox>\\n  <h4>Default</h4>\\n  <div class=\\"story-checkbox-states\\">\\n    <ino-checkbox checked>Checked</ino-checkbox>\\n    <ino-checkbox>Unchecked</ino-checkbox>\\n    <ino-checkbox indeterminate>Indeterminated</ino-checkbox>\\n    <ino-checkbox disabled checked>Checked and Disabled</ino-checkbox>\\n    <ino-checkbox disabled>Unchecked and Disabled</ino-checkbox>\\n    <ino-checkbox disabled indeterminate>Indeterminated and Disabled</ino-checkbox>\\n  </div>\\n\\n  <h4>Selection</h4>\\n  <div class=\\"story-selection-states\\">\\n       <ino-checkbox ino-selection checked>Checked</ino-checkbox>\\n       <ino-checkbox ino-selection>Unchecked</ino-checkbox>\\n       <ino-checkbox checked ino-selection disabled>Checked and disabled</ino-checkbox>\\n       <ino-checkbox ino-selection disabled>Unchecked and disabled</ino-checkbox>\\n  </div>\\n</div>\\n`;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":49},"endLoc":{"col":1,"line":80},"startBody":{"col":28,"line":49},"endBody":{"col":1,"line":80}}}},\n    actions: {\n      handles: [\'checkedChange .customizable-checkbox\']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-checkbox">\n  <ino-checkbox\n    class="customizable-checkbox"\n    name="customizable-checkbox"\n    value="placeholder-value"\n    checked="${boolean(\'checked\', false)}"\n    disabled="${boolean(\'disabled\', false)}"\n    indeterminate="${boolean(\'indeterminate\', false)}"\n    ino-selection="${boolean(\'ino-selection\', false)}"\n  >\n    ${text(\'<slot />\', \'Customizable checkbox\')}\n  </ino-checkbox>\n  <h4>Default</h4>\n  <div class="story-checkbox-states">\n    <ino-checkbox checked>Checked</ino-checkbox>\n    <ino-checkbox>Unchecked</ino-checkbox>\n    <ino-checkbox indeterminate>Indeterminated</ino-checkbox>\n    <ino-checkbox disabled checked>Checked and Disabled</ino-checkbox>\n    <ino-checkbox disabled>Unchecked and Disabled</ino-checkbox>\n    <ino-checkbox disabled indeterminate>Indeterminated and Disabled</ino-checkbox>\n  </div>\n\n  <h4>Selection</h4>\n  <div class="story-selection-states">\n       <ino-checkbox ino-selection checked>Checked</ino-checkbox>\n       <ino-checkbox ino-selection>Unchecked</ino-checkbox>\n       <ino-checkbox checked ino-selection disabled>Checked and disabled</ino-checkbox>\n       <ino-checkbox ino-selection disabled>Unchecked and disabled</ino-checkbox>\n  </div>\n</div>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:57},endLoc:{col:1,line:88},startBody:{col:28,line:57},endBody:{col:1,line:88}}}}},_defineProperty(_parameters,"storySource",{source:"import { boolean, text } from '@storybook/addon-knobs';\n\nimport componentReadme from '_local-elements/src/components/ino-checkbox/readme.md';\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport './ino-checkbox.scss';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== 'ino-checkbox') {\n      return;\n    }\n\n    el.setAttribute('checked', e.detail);\n\n    if (el.getAttribute('indeterminate') === 'true') {\n      el.setAttribute('indeterminate', 'false');\n    }\n  };\n\n  document.addEventListener('checkedChange', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('checkedChange', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Input/<ino-checkbox>',\n  parameters: {\n    actions: {\n      handles: ['checkedChange .customizable-checkbox']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class=\"story-checkbox\">\n  <ino-checkbox\n    class=\"customizable-checkbox\"\n    name=\"customizable-checkbox\"\n    value=\"placeholder-value\"\n    checked=\"${boolean('checked', false)}\"\n    disabled=\"${boolean('disabled', false)}\"\n    indeterminate=\"${boolean('indeterminate', false)}\"\n    ino-selection=\"${boolean('ino-selection', false)}\"\n  >\n    ${text('<slot />', 'Customizable checkbox')}\n  </ino-checkbox>\n  <h4>Default</h4>\n  <div class=\"story-checkbox-states\">\n    <ino-checkbox checked>Checked</ino-checkbox>\n    <ino-checkbox>Unchecked</ino-checkbox>\n    <ino-checkbox indeterminate>Indeterminated</ino-checkbox>\n    <ino-checkbox disabled checked>Checked and Disabled</ino-checkbox>\n    <ino-checkbox disabled>Unchecked and Disabled</ino-checkbox>\n    <ino-checkbox disabled indeterminate>Indeterminated and Disabled</ino-checkbox>\n  </div>\n\n  <h4>Selection</h4>\n  <div class=\"story-selection-states\">\n       <ino-checkbox ino-selection checked>Checked</ino-checkbox>\n       <ino-checkbox ino-selection>Unchecked</ino-checkbox>\n       <ino-checkbox checked ino-selection disabled>Checked and disabled</ino-checkbox>\n       <ino-checkbox ino-selection disabled>Unchecked and disabled</ino-checkbox>\n  </div>\n</div>\n`;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:49},endLoc:{col:1,line:80},startBody:{col:28,line:49},endBody:{col:1,line:80}}}}),_defineProperty(_parameters,"actions",{handles:["checkedChange .customizable-checkbox"]}),_parameters),decorators:[Object(with_stencil_readme.a)("# ino-checkbox\n\nA checkbox that allows the user to select one or more items from a set of options.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n  .querySelector('ino-checkbox')\n  .addEventListener('checkedChange', e =>\n    alert(`The checked state is: ${e.detail}`)\n  );\n```\n\n```html\n<ino-checkbox\n  checked\n  disabled\n  name=\"<string>\"\n  value=\"<string>\"\n  indeterminate\n  ino-id=\"<string>\"\n  ino-tab-index=\"<number>\"\n>\n  Label\n</ino-checkbox>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from 'react';\nimport { InoCheckbox } from '@inovex.de/elements/dist/react';\n\nclass MyComponent extends Component {\n  state = {\n    checked: false\n  };\n\n  handleCheckboxClick() {\n    this.setState({ checked: !this.state.checked });\n  }\n\n  render() {\n    return (\n      <InoCheckbox\n        value=\"Apple\"\n        onClick={_ => this.handleCheckboxClick()}\n        checked={this.state.checked}\n      >\n        Apple\n      </InoCheckbox>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from 'react';\nimport { InoCheckbox } from '@inovex.de/elements/dist/react';\nimport { Components } from '@inovex.de/elements/dist/types/components';\n\nconst Checkbox: React.FunctionComponent<Components.InoCheckboxAttributes> = props => {\n  const { value, onClick, checked } = props;\n\n  return (\n    <InoCheckbox value={value} onClick={onClick} checked={checked}>\n      {value}\n    </InoCheckbox>\n  );\n};\n\nclass MyComponent extends Component {\n  state = {\n    checked: false\n  };\n\n  handleCheckboxClick() {\n    this.setState({ checked: !this.state.checked });\n  }\n\n  render() {\n    return (\n      <Checkbox\n        value=\"Apple\"\n        onClick={_ => this.handleCheckboxClick()}\n        checked={this.state.checked}\n      >\n        Apple\n      </Checkbox>\n    );\n  }\n}\n```\n\n## Additional Hints\n\nBy default, the label is always shown on the right side of the checkbox.\n\n**Indeterminate:** The indeterminate status is set by the user. It indicates that a user is indeterminate without changing the checked state. If a checkbox is unchecked and indeterminate then it will lose the indeterminate state on click and change to checked. [Documentation on MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes)\n\n**Selection:** Checkboxes are mainly used in lists. Selection should be used as single, stand-alone UI element. The indeterminate state is not supported.\n\n## Control flow\n\nThe input has a controlled (unmanaged) attribute `checked` and `indeterminate`. For this reason, listen to `checkedChange`, sync it with your local state and pass the new value to the component again to change value and indeterminate state of input:\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property        | Attribute       | Description                                                                                                                                                                                                                      | Type      | Default     |\n| --------------- | --------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `checked`       | `checked`       | Marks this element as checked. (**unmanaged**)                                                                                                                                                                                   | `boolean` | `false`     |\n| `disabled`      | `disabled`      | Disables this element.                                                                                                                                                                                                           | `boolean` | `undefined` |\n| `indeterminate` | `indeterminate` | Marks this element as indeterminate (**unmanaged**)                                                                                                                                                                              | `boolean` | `undefined` |\n| `inoSelection`  | `ino-selection` | Styles the checkbox as a selection variant that has a larger radius. While checkboxes are mainly used in lists, the selection should be used as a single, independent UI element. The indeterminate state is not supported here. | `boolean` | `undefined` |\n| `name`          | `name`          | The name of this element.                                                                                                                                                                                                        | `string`  | `undefined` |\n| `value`         | `value`         | The value of this element.                                                                                                                                                                                                       | `string`  | `undefined` |\n\n\n## Events\n\n| Event           | Description                                                                                                    | Type               |\n| --------------- | -------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `checkedChange` | Emits when the user clicks on the checkbox to change the checked state. Contains the status in `event.detail`. | `CustomEvent<any>` |\n\n\n## CSS Custom Properties\n\n| Name                                       | Description                                  |\n| ------------------------------------------ | -------------------------------------------- |\n| `--checkbox-container-color-unchecked`     | color of the checkbox container if unchecked |\n| `--ino-checkbox-background-color-disabled` | color of the checkbox background if disabled |\n| `--ino-checkbox-checkmark-color`           | primary color of the check mark              |\n| `--ino-checkbox-checkmark-color-disabled`  | color of the check mark if disabled          |\n| `--ino-checkbox-color`                     | primary color of the checkbox                |\n| `--ino-checkbox-color-active`              | color of the checkbox if active              |\n| `--ino-checkbox-color-hover`               | color of the checkbox on hover               |\n| `--ino-checkbox-text-color-disabled`       | color of the checkbox text if disabled       |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-control-item](../ino-control-item)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-control-item --\x3e ino-checkbox\n  style ino-checkbox fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;"ino-checkbox"===el.tagName.toLowerCase()&&(el.setAttribute("checked",e.detail),"true"===el.getAttribute("indeterminate")&&el.setAttribute("indeterminate","false"))};return document.addEventListener("checkedChange",eventHandler),function(){document.removeEventListener("checkedChange",eventHandler)}}(),story()}]};var ino_checkbox_stories_DefaultUsage=function DefaultUsage(){return'\n<div class="story-checkbox">\n  <ino-checkbox\n    class="customizable-checkbox"\n    name="customizable-checkbox"\n    value="placeholder-value"\n    checked="'.concat(Object(dist.boolean)("checked",!1),'"\n    disabled="').concat(Object(dist.boolean)("disabled",!1),'"\n    indeterminate="').concat(Object(dist.boolean)("indeterminate",!1),'"\n    ino-selection="').concat(Object(dist.boolean)("ino-selection",!1),'"\n  >\n    ').concat(Object(dist.text)("<slot />","Customizable checkbox"),'\n  </ino-checkbox>\n  <h4>Default</h4>\n  <div class="story-checkbox-states">\n    <ino-checkbox checked>Checked</ino-checkbox>\n    <ino-checkbox>Unchecked</ino-checkbox>\n    <ino-checkbox indeterminate>Indeterminated</ino-checkbox>\n    <ino-checkbox disabled checked>Checked and Disabled</ino-checkbox>\n    <ino-checkbox disabled>Unchecked and Disabled</ino-checkbox>\n    <ino-checkbox disabled indeterminate>Indeterminated and Disabled</ino-checkbox>\n  </div>\n\n  <h4>Selection</h4>\n  <div class="story-selection-states">\n       <ino-checkbox ino-selection checked>Checked</ino-checkbox>\n       <ino-checkbox ino-selection>Unchecked</ino-checkbox>\n       <ino-checkbox checked ino-selection disabled>Checked and disabled</ino-checkbox>\n       <ino-checkbox ino-selection disabled>Unchecked and disabled</ino-checkbox>\n  </div>\n</div>\n')}},1350:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_datepicker_stories_DefaultUsage})),__webpack_require__.d(__webpack_exports__,"Forms",(function(){return Forms}));var _parameters,moment=__webpack_require__(1),moment_default=__webpack_require__.n(moment),dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1270);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var defaultDate=moment_default()().format("YYYY-MM-DD"),minDate=moment_default()().subtract(5,"days").format("YYYY-MM-DD"),maxDate=moment_default()().add(5,"days").format("YYYY-MM-DD");__webpack_exports__.default={title:"Input/<ino-datepicker>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import moment from \'moment\';\\nimport { boolean, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-datepicker/readme.md\';\\nimport \'./ino-datepicker.scss\';\\n\\nlet defaultDate = moment().format(\'YYYY-MM-DD\');\\nconst minDate = moment().subtract(5, \'days\').format(\'YYYY-MM-DD\');\\nconst maxDate = moment().add(5, \'days\').format(\'YYYY-MM-DD\');\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-datepicker\') {\\n      return;\\n    }\\n    e.target.setAttribute(\'value\', e.detail);\\n  };\\n\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-datepicker>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'valueChange .customizable-picker\', \'submit .form\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n\\n    <div class=\\"story-datepicker\\">\\n      <ino-datepicker class=\\"customizable-picker\\"\\n        value=\\"${text(\'value\', defaultDate, \'DATE CONFIG\')}\\"\\n        ino-type=\\"${select(\\n          \'ino-type\',\\n          [\'datetime\', \'month\', \'date\', \'time\'],\\n          \'datetime\',\\n          \'STANDARD\'\\n        )}\\"\\n        ino-label=\\"${text(\'ino-label\', \'Label\', \'STANDARD\')}\\"\\n        ino-outline=\\"${boolean(\'ino-outline\', false, \'STANDARD\')}\\"\\n        min=\\"${text(\'min\', minDate, \'STANDARD\')}\\"\\n        max=\\"${text(\'max\', maxDate, \'STANDARD\')}\\"\\n        ino-pattern=\\"${text(\'ino-pattern\', \'\', \'STANDARD\')}\\"\\n        disabled=\\"${boolean(\'disabled\', false, \'STANDARD\')}\\"\\n        required=\\"${boolean(\'required\', false, \'STANDARD\')}\\"\\n        ino-show-label-hint=\\"${boolean(\'ino-show-label-hint\', false, \'STANDARD\')}\\"\\n        ino-date-format=\\"${text(\'ino-date-format\', \'Y-m-d H:i\', \'DATE CONFIG\')}\\"\\n        ino-range=\\"${boolean(\'ino-range\', false, \'DATE CONFIG\')}\\"\\n        ino-default-date=\\"${text(\'ino-default-date\', defaultDate, \'DATE CONFIG\')}\\"\\n        ino-twelve-hour-time=\\"${boolean(\'ino-twelve-hour-time\', false, \'DATE CONFIG\')}\\"\\n        ino-helper=\\"${text(\'ino-helper\', \'Helper message\', \'HELPER TEXT\')}\\"\\n        ino-helper-persistent=\\"${boolean(\'ino-helper-persistent\', false, \'HELPER TEXT\')}\\"\\n        ino-helper-validation=\\"${boolean(\'ino-helper-validation\', false, \'HELPER TEXT\')}\\"\\n       >\\n      </ino-datepicker>\\n\\n\\n      <h4>Formats</h4>\\n      <ino-datepicker ino-type=\\"datetime\\" ino-date-format=\\"H:i d.m.Y\\" ino-label=\\"Datetime\\"></ino-datepicker>\\n      <ino-datepicker ino-type=\\"date\\" ino-date-format=\\"d.m.Y\\" ino-label=\\"Date\\"></ino-datepicker>\\n      <ino-datepicker ino-type=\\"time\\" ino-date-format=\\"H:i\\" ino-label=\\"Time\\"></ino-datepicker>\\n      <ino-datepicker ino-date-format=\\"d.m.Y\\" ino-range ino-label=\\"Range\\"></ino-datepicker>\\n      <ino-datepicker ino-type=\\"month\\" ino-label=\\"Month\\"></ino-datepicker>\\n\\n      <h4>Restrictions</h4>\\n      <ino-datepicker ino-label=\\"Custom default date\\" ino-date-format=\\"Y-m-d\\" ino-default-date=\\"${defaultDate}\\" ino-date-format=\\"Y-m-d\\"></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Min date\\" ino-date-format=\\"Y-m-d\\" min=\\"${minDate}\\"></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Max date\\" ino-date-format=\\"Y-m-d\\" max=\\"${maxDate}\\"></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Min and Max date\\" ino-date-format=\\"Y-m-d\\" min=\\"${minDate}\\" max=\\"${maxDate}\\"></ino-datepicker>\\n      <ino-datepicker ino-type=\\"time\\" ino-label=\\"hour step and minute step\\" hour-step=\\"2\\" minute-step=\\"5\\" ino-date-format=\\"H:i\\"></ino-datepicker>\\n      <ino-datepicker ino-type=\\"time\\" ino-label=\\"Default hour and minute\\" ino-date-format=\\"H:i\\" ino-default-hour=\\"14\\" ino-default-minute=\\"49\\"></ino-datepicker>\\n\\n      <h4>Variations</h4>\\n      <ino-datepicker ino-type=\\"time\\" ino-date-format=\\"h:i K\\" ino-label=\\"Twelve hour time\\" ino-twelve-hour-time></ino-datepicker>\\n\\n      <h4>States</h4>\\n      <ino-datepicker ino-label=\\"Pattern numbers from 1 - 6\\" ino-pattern=\\"[1-6]+\\"></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Disabled\\" disabled></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Required\\" required ino-show-label-hint></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Optional\\" ino-show-label-hint></ino-datepicker>\\n    </div>\\n  `;\\n\\nexport const Forms = () => /*html*/ `\\n    <div class=\\"story-datepicker\\">\\n      <h4>Required</h4>\\n      <p>The form should not submit as long as the date field is empty.</p>\\n      <form class=\\"form\\" onSubmit=\\"return false;\\">\\n        <ino-datepicker ino-label=\\"Required\\" required></ino-datepicker>\\n        <ino-button type=\\"submit\\">Submit</ino-button>\\n      </form>\\n    </div>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":49},"endLoc":{"col":3,"line":103},"startBody":{"col":28,"line":49},"endBody":{"col":3,"line":103}},"Forms":{"startLoc":{"col":21,"line":105},"endLoc":{"col":3,"line":114},"startBody":{"col":21,"line":105},"endBody":{"col":3,"line":114}}};\n    \nimport moment from \'moment\';\nimport { boolean, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-datepicker/readme.md\';\nimport \'./ino-datepicker.scss\';\n\nlet defaultDate = moment().format(\'YYYY-MM-DD\');\nconst minDate = moment().subtract(5, \'days\').format(\'YYYY-MM-DD\');\nconst maxDate = moment().add(5, \'days\').format(\'YYYY-MM-DD\');\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-datepicker\') {\n      return;\n    }\n    e.target.setAttribute(\'value\', e.detail);\n  };\n\n  document.addEventListener(\'valueChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'valueChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Input/<ino-datepicker>\',\n  parameters: {"storySource":{"source":"import moment from \'moment\';\\nimport { boolean, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-datepicker/readme.md\';\\nimport \'./ino-datepicker.scss\';\\n\\nlet defaultDate = moment().format(\'YYYY-MM-DD\');\\nconst minDate = moment().subtract(5, \'days\').format(\'YYYY-MM-DD\');\\nconst maxDate = moment().add(5, \'days\').format(\'YYYY-MM-DD\');\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-datepicker\') {\\n      return;\\n    }\\n    e.target.setAttribute(\'value\', e.detail);\\n  };\\n\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-datepicker>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'valueChange .customizable-picker\', \'submit .form\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n\\n    <div class=\\"story-datepicker\\">\\n      <ino-datepicker class=\\"customizable-picker\\"\\n        value=\\"${text(\'value\', defaultDate, \'DATE CONFIG\')}\\"\\n        ino-type=\\"${select(\\n          \'ino-type\',\\n          [\'datetime\', \'month\', \'date\', \'time\'],\\n          \'datetime\',\\n          \'STANDARD\'\\n        )}\\"\\n        ino-label=\\"${text(\'ino-label\', \'Label\', \'STANDARD\')}\\"\\n        ino-outline=\\"${boolean(\'ino-outline\', false, \'STANDARD\')}\\"\\n        min=\\"${text(\'min\', minDate, \'STANDARD\')}\\"\\n        max=\\"${text(\'max\', maxDate, \'STANDARD\')}\\"\\n        ino-pattern=\\"${text(\'ino-pattern\', \'\', \'STANDARD\')}\\"\\n        disabled=\\"${boolean(\'disabled\', false, \'STANDARD\')}\\"\\n        required=\\"${boolean(\'required\', false, \'STANDARD\')}\\"\\n        ino-show-label-hint=\\"${boolean(\'ino-show-label-hint\', false, \'STANDARD\')}\\"\\n        ino-date-format=\\"${text(\'ino-date-format\', \'Y-m-d H:i\', \'DATE CONFIG\')}\\"\\n        ino-range=\\"${boolean(\'ino-range\', false, \'DATE CONFIG\')}\\"\\n        ino-default-date=\\"${text(\'ino-default-date\', defaultDate, \'DATE CONFIG\')}\\"\\n        ino-twelve-hour-time=\\"${boolean(\'ino-twelve-hour-time\', false, \'DATE CONFIG\')}\\"\\n        ino-helper=\\"${text(\'ino-helper\', \'Helper message\', \'HELPER TEXT\')}\\"\\n        ino-helper-persistent=\\"${boolean(\'ino-helper-persistent\', false, \'HELPER TEXT\')}\\"\\n        ino-helper-validation=\\"${boolean(\'ino-helper-validation\', false, \'HELPER TEXT\')}\\"\\n       >\\n      </ino-datepicker>\\n\\n\\n      <h4>Formats</h4>\\n      <ino-datepicker ino-type=\\"datetime\\" ino-date-format=\\"H:i d.m.Y\\" ino-label=\\"Datetime\\"></ino-datepicker>\\n      <ino-datepicker ino-type=\\"date\\" ino-date-format=\\"d.m.Y\\" ino-label=\\"Date\\"></ino-datepicker>\\n      <ino-datepicker ino-type=\\"time\\" ino-date-format=\\"H:i\\" ino-label=\\"Time\\"></ino-datepicker>\\n      <ino-datepicker ino-date-format=\\"d.m.Y\\" ino-range ino-label=\\"Range\\"></ino-datepicker>\\n      <ino-datepicker ino-type=\\"month\\" ino-label=\\"Month\\"></ino-datepicker>\\n\\n      <h4>Restrictions</h4>\\n      <ino-datepicker ino-label=\\"Custom default date\\" ino-date-format=\\"Y-m-d\\" ino-default-date=\\"${defaultDate}\\" ino-date-format=\\"Y-m-d\\"></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Min date\\" ino-date-format=\\"Y-m-d\\" min=\\"${minDate}\\"></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Max date\\" ino-date-format=\\"Y-m-d\\" max=\\"${maxDate}\\"></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Min and Max date\\" ino-date-format=\\"Y-m-d\\" min=\\"${minDate}\\" max=\\"${maxDate}\\"></ino-datepicker>\\n      <ino-datepicker ino-type=\\"time\\" ino-label=\\"hour step and minute step\\" hour-step=\\"2\\" minute-step=\\"5\\" ino-date-format=\\"H:i\\"></ino-datepicker>\\n      <ino-datepicker ino-type=\\"time\\" ino-label=\\"Default hour and minute\\" ino-date-format=\\"H:i\\" ino-default-hour=\\"14\\" ino-default-minute=\\"49\\"></ino-datepicker>\\n\\n      <h4>Variations</h4>\\n      <ino-datepicker ino-type=\\"time\\" ino-date-format=\\"h:i K\\" ino-label=\\"Twelve hour time\\" ino-twelve-hour-time></ino-datepicker>\\n\\n      <h4>States</h4>\\n      <ino-datepicker ino-label=\\"Pattern numbers from 1 - 6\\" ino-pattern=\\"[1-6]+\\"></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Disabled\\" disabled></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Required\\" required ino-show-label-hint></ino-datepicker>\\n      <ino-datepicker ino-label=\\"Optional\\" ino-show-label-hint></ino-datepicker>\\n    </div>\\n  `;\\n\\nexport const Forms = () => /*html*/ `\\n    <div class=\\"story-datepicker\\">\\n      <h4>Required</h4>\\n      <p>The form should not submit as long as the date field is empty.</p>\\n      <form class=\\"form\\" onSubmit=\\"return false;\\">\\n        <ino-datepicker ino-label=\\"Required\\" required></ino-datepicker>\\n        <ino-button type=\\"submit\\">Submit</ino-button>\\n      </form>\\n    </div>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":49},"endLoc":{"col":3,"line":103},"startBody":{"col":28,"line":49},"endBody":{"col":3,"line":103}},"forms":{"startLoc":{"col":21,"line":105},"endLoc":{"col":3,"line":114},"startBody":{"col":21,"line":105},"endBody":{"col":3,"line":114}}}},\n    actions: {\n      handles: [\'valueChange .customizable-picker\', \'submit .form\']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n\n    <div class="story-datepicker">\n      <ino-datepicker class="customizable-picker"\n        value="${text(\'value\', defaultDate, \'DATE CONFIG\')}"\n        ino-type="${select(\n          \'ino-type\',\n          [\'datetime\', \'month\', \'date\', \'time\'],\n          \'datetime\',\n          \'STANDARD\'\n        )}"\n        ino-label="${text(\'ino-label\', \'Label\', \'STANDARD\')}"\n        ino-outline="${boolean(\'ino-outline\', false, \'STANDARD\')}"\n        min="${text(\'min\', minDate, \'STANDARD\')}"\n        max="${text(\'max\', maxDate, \'STANDARD\')}"\n        ino-pattern="${text(\'ino-pattern\', \'\', \'STANDARD\')}"\n        disabled="${boolean(\'disabled\', false, \'STANDARD\')}"\n        required="${boolean(\'required\', false, \'STANDARD\')}"\n        ino-show-label-hint="${boolean(\'ino-show-label-hint\', false, \'STANDARD\')}"\n        ino-date-format="${text(\'ino-date-format\', \'Y-m-d H:i\', \'DATE CONFIG\')}"\n        ino-range="${boolean(\'ino-range\', false, \'DATE CONFIG\')}"\n        ino-default-date="${text(\'ino-default-date\', defaultDate, \'DATE CONFIG\')}"\n        ino-twelve-hour-time="${boolean(\'ino-twelve-hour-time\', false, \'DATE CONFIG\')}"\n        ino-helper="${text(\'ino-helper\', \'Helper message\', \'HELPER TEXT\')}"\n        ino-helper-persistent="${boolean(\'ino-helper-persistent\', false, \'HELPER TEXT\')}"\n        ino-helper-validation="${boolean(\'ino-helper-validation\', false, \'HELPER TEXT\')}"\n       >\n      </ino-datepicker>\n\n\n      <h4>Formats</h4>\n      <ino-datepicker ino-type="datetime" ino-date-format="H:i d.m.Y" ino-label="Datetime"></ino-datepicker>\n      <ino-datepicker ino-type="date" ino-date-format="d.m.Y" ino-label="Date"></ino-datepicker>\n      <ino-datepicker ino-type="time" ino-date-format="H:i" ino-label="Time"></ino-datepicker>\n      <ino-datepicker ino-date-format="d.m.Y" ino-range ino-label="Range"></ino-datepicker>\n      <ino-datepicker ino-type="month" ino-label="Month"></ino-datepicker>\n\n      <h4>Restrictions</h4>\n      <ino-datepicker ino-label="Custom default date" ino-date-format="Y-m-d" ino-default-date="${defaultDate}" ino-date-format="Y-m-d"></ino-datepicker>\n      <ino-datepicker ino-label="Min date" ino-date-format="Y-m-d" min="${minDate}"></ino-datepicker>\n      <ino-datepicker ino-label="Max date" ino-date-format="Y-m-d" max="${maxDate}"></ino-datepicker>\n      <ino-datepicker ino-label="Min and Max date" ino-date-format="Y-m-d" min="${minDate}" max="${maxDate}"></ino-datepicker>\n      <ino-datepicker ino-type="time" ino-label="hour step and minute step" hour-step="2" minute-step="5" ino-date-format="H:i"></ino-datepicker>\n      <ino-datepicker ino-type="time" ino-label="Default hour and minute" ino-date-format="H:i" ino-default-hour="14" ino-default-minute="49"></ino-datepicker>\n\n      <h4>Variations</h4>\n      <ino-datepicker ino-type="time" ino-date-format="h:i K" ino-label="Twelve hour time" ino-twelve-hour-time></ino-datepicker>\n\n      <h4>States</h4>\n      <ino-datepicker ino-label="Pattern numbers from 1 - 6" ino-pattern="[1-6]+"></ino-datepicker>\n      <ino-datepicker ino-label="Disabled" disabled></ino-datepicker>\n      <ino-datepicker ino-label="Required" required ino-show-label-hint></ino-datepicker>\n      <ino-datepicker ino-label="Optional" ino-show-label-hint></ino-datepicker>\n    </div>\n  `;;\n\nexport const Forms = () => /*html*/ `\n    <div class="story-datepicker">\n      <h4>Required</h4>\n      <p>The form should not submit as long as the date field is empty.</p>\n      <form class="form" onSubmit="return false;">\n        <ino-datepicker ino-label="Required" required></ino-datepicker>\n        <ino-button type="submit">Submit</ino-button>\n      </form>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:57},endLoc:{col:3,line:111},startBody:{col:28,line:57},endBody:{col:3,line:111}},forms:{startLoc:{col:21,line:113},endLoc:{col:3,line:122},startBody:{col:21,line:113},endBody:{col:3,line:122}}}}},_defineProperty(_parameters,"storySource",{source:'import moment from \'moment\';\nimport { boolean, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-datepicker/readme.md\';\nimport \'./ino-datepicker.scss\';\n\nlet defaultDate = moment().format(\'YYYY-MM-DD\');\nconst minDate = moment().subtract(5, \'days\').format(\'YYYY-MM-DD\');\nconst maxDate = moment().add(5, \'days\').format(\'YYYY-MM-DD\');\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-datepicker\') {\n      return;\n    }\n    e.target.setAttribute(\'value\', e.detail);\n  };\n\n  document.addEventListener(\'valueChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'valueChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Input/<ino-datepicker>\',\n  parameters: {\n    actions: {\n      handles: [\'valueChange .customizable-picker\', \'submit .form\']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n\n    <div class="story-datepicker">\n      <ino-datepicker class="customizable-picker"\n        value="${text(\'value\', defaultDate, \'DATE CONFIG\')}"\n        ino-type="${select(\n          \'ino-type\',\n          [\'datetime\', \'month\', \'date\', \'time\'],\n          \'datetime\',\n          \'STANDARD\'\n        )}"\n        ino-label="${text(\'ino-label\', \'Label\', \'STANDARD\')}"\n        ino-outline="${boolean(\'ino-outline\', false, \'STANDARD\')}"\n        min="${text(\'min\', minDate, \'STANDARD\')}"\n        max="${text(\'max\', maxDate, \'STANDARD\')}"\n        ino-pattern="${text(\'ino-pattern\', \'\', \'STANDARD\')}"\n        disabled="${boolean(\'disabled\', false, \'STANDARD\')}"\n        required="${boolean(\'required\', false, \'STANDARD\')}"\n        ino-show-label-hint="${boolean(\'ino-show-label-hint\', false, \'STANDARD\')}"\n        ino-date-format="${text(\'ino-date-format\', \'Y-m-d H:i\', \'DATE CONFIG\')}"\n        ino-range="${boolean(\'ino-range\', false, \'DATE CONFIG\')}"\n        ino-default-date="${text(\'ino-default-date\', defaultDate, \'DATE CONFIG\')}"\n        ino-twelve-hour-time="${boolean(\'ino-twelve-hour-time\', false, \'DATE CONFIG\')}"\n        ino-helper="${text(\'ino-helper\', \'Helper message\', \'HELPER TEXT\')}"\n        ino-helper-persistent="${boolean(\'ino-helper-persistent\', false, \'HELPER TEXT\')}"\n        ino-helper-validation="${boolean(\'ino-helper-validation\', false, \'HELPER TEXT\')}"\n       >\n      </ino-datepicker>\n\n\n      <h4>Formats</h4>\n      <ino-datepicker ino-type="datetime" ino-date-format="H:i d.m.Y" ino-label="Datetime"></ino-datepicker>\n      <ino-datepicker ino-type="date" ino-date-format="d.m.Y" ino-label="Date"></ino-datepicker>\n      <ino-datepicker ino-type="time" ino-date-format="H:i" ino-label="Time"></ino-datepicker>\n      <ino-datepicker ino-date-format="d.m.Y" ino-range ino-label="Range"></ino-datepicker>\n      <ino-datepicker ino-type="month" ino-label="Month"></ino-datepicker>\n\n      <h4>Restrictions</h4>\n      <ino-datepicker ino-label="Custom default date" ino-date-format="Y-m-d" ino-default-date="${defaultDate}" ino-date-format="Y-m-d"></ino-datepicker>\n      <ino-datepicker ino-label="Min date" ino-date-format="Y-m-d" min="${minDate}"></ino-datepicker>\n      <ino-datepicker ino-label="Max date" ino-date-format="Y-m-d" max="${maxDate}"></ino-datepicker>\n      <ino-datepicker ino-label="Min and Max date" ino-date-format="Y-m-d" min="${minDate}" max="${maxDate}"></ino-datepicker>\n      <ino-datepicker ino-type="time" ino-label="hour step and minute step" hour-step="2" minute-step="5" ino-date-format="H:i"></ino-datepicker>\n      <ino-datepicker ino-type="time" ino-label="Default hour and minute" ino-date-format="H:i" ino-default-hour="14" ino-default-minute="49"></ino-datepicker>\n\n      <h4>Variations</h4>\n      <ino-datepicker ino-type="time" ino-date-format="h:i K" ino-label="Twelve hour time" ino-twelve-hour-time></ino-datepicker>\n\n      <h4>States</h4>\n      <ino-datepicker ino-label="Pattern numbers from 1 - 6" ino-pattern="[1-6]+"></ino-datepicker>\n      <ino-datepicker ino-label="Disabled" disabled></ino-datepicker>\n      <ino-datepicker ino-label="Required" required ino-show-label-hint></ino-datepicker>\n      <ino-datepicker ino-label="Optional" ino-show-label-hint></ino-datepicker>\n    </div>\n  `;\n\nexport const Forms = () => /*html*/ `\n    <div class="story-datepicker">\n      <h4>Required</h4>\n      <p>The form should not submit as long as the date field is empty.</p>\n      <form class="form" onSubmit="return false;">\n        <ino-datepicker ino-label="Required" required></ino-datepicker>\n        <ino-button type="submit">Submit</ino-button>\n      </form>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:49},endLoc:{col:3,line:103},startBody:{col:28,line:49},endBody:{col:3,line:103}},forms:{startLoc:{col:21,line:105},endLoc:{col:3,line:114},startBody:{col:21,line:105},endBody:{col:3,line:114}}}}),_defineProperty(_parameters,"actions",{handles:["valueChange .customizable-picker","submit .form"]}),_parameters),decorators:[Object(with_stencil_readme.a)('# ino-datepicker\n\nA datepicker is a ui component to select dates and times. It behaves like a native `input` but uses the [flatpickr](https://github.com/flatpickr/flatpickr) library for a better ui experience.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n  .querySelector(\'ino-datepicker\')\n  .addEventListener(\'valueChange\', e =>\n    alert(`The new datepicker value is: ${e.detail}`)\n  );\n```\n\n```html\n<ino-datepicker\n  autofocus\n  disabled\n  name="<string>"\n  required\n  value="<string>"\n  min="<string>"\n  max="<string>"\n  minute-step="<number>"\n  hour-step="<number>"\n  ino-range\n  ino-outline\n  ino-label="<string>"\n  ino-pattern="<string>"\n  ino-date-format="<string>"\n  ino-default-date="<string>"\n  ino-default-hour="<number>"\n  ino-default-minute="<number>"\n  ino-twelf-hour-time\n  ino-helper="<string>"\n  ino-helper-persistent\n  ino-helper-validation\n>\n</ino-datepicker>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoDatepicker } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  valueChange(e: any) {\n    alert(`The new value is ${e.detail}`);\n  }\n\n  render() {\n    return (\n      <InoDatepicker\n        inoLabel="Select a date"\n        inoHelper="Choose a date"\n        onValueChange={valueChange}\n      />\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoDatepicker } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Datepicker: React.FunctionComponent<Components.InoDatepickerAttributes> = props => {\n  const { inoLabel, inoHelper } = props;\n\n  const valueChange = (e: any) => {\n    alert(`The new value is ${e.detail}`);\n  };\n\n  return (\n    <InoDatepicker\n      inoLabel={inoLabel}\n      inoHelper={inoHelper}\n      onValueChange={valueChange}\n    />\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return <Datepicker inoLabel="Select a date" inoHelper="Choose a date" />;\n  }\n}\n```\n\n## Additional Hints\n\n### Examples\n\nThe correct picker is automatically chosen based on the `ino-date-format`.\n\nThe picker can be used as date picker\n\n```html\n<ino-datepicker ino-date-format="d-m-Y" ino-label="Date"></ino-datepicker>\n```\n\nor as time picker\n\n```html\n<ino-datepicker ino-date-format="H:i" ino-label="Time"></ino-datepicker>\n```\n\nor as datetime picker\n\n```html\n<ino-datepicker\n  ino-date-format="d-m-Y H:i"\n  ino-label="Datetime"\n></ino-datepicker>\n```\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property              | Attribute               | Description                                                                                                                                                                       | Type                                        | Default     |\n| --------------------- | ----------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------- | ----------- |\n| `autoFocus`           | `autofocus`             | Autofocuses this element.                                                                                                                                                         | `boolean`                                   | `undefined` |\n| `disabled`            | `disabled`              | Disables this element.                                                                                                                                                            | `boolean`                                   | `undefined` |\n| `hourStep`            | `hour-step`             | Adjusts the step for the hour input (incl. scrolling) Default is 1                                                                                                                | `number`                                    | `1`         |\n| `inoDateFormat`       | `ino-date-format`       | A string to change the date format. Possible values are listed [here](https://flatpickr.js.org/formatting/). The default value is `d-m-Y` which accepts values like `01.01.2019`. | `string`                                    | `\'d-m-Y\'`   |\n| `inoDefaultDate`      | `ino-default-date`      | A string/array containing the initial date of the datepicker overlay. If you\'re using `inoRange = true` provide an array.                                                         | `string \\| string[]`                        | `undefined` |\n| `inoDefaultHour`      | `ino-default-hour`      | A number containing the initial hour in the date-time picker overlay. The default is `12`                                                                                         | `number`                                    | `12`        |\n| `inoDefaultMinute`    | `ino-default-minute`    | A number containing the initial minute in the date-time picker overlay. The default is `0`                                                                                        | `number`                                    | `0`         |\n| `inoHelper`           | `ino-helper`            | The helper text.                                                                                                                                                                  | `string`                                    | `undefined` |\n| `inoHelperPersistent` | `ino-helper-persistent` | Displays the helper permanently.                                                                                                                                                  | `boolean`                                   | `undefined` |\n| `inoHelperValidation` | `ino-helper-validation` | Styles the helper text as a validation message.                                                                                                                                   | `boolean`                                   | `undefined` |\n| `inoLabel`            | `ino-label`             | Defines the label for this element.                                                                                                                                               | `string`                                    | `undefined` |\n| `inoOutline`          | `ino-outline`           | Styles the datepicker as outlined element.                                                                                                                                        | `boolean`                                   | `undefined` |\n| `inoRange`            | `ino-range`             | If true, enables the user to choose two dates as an interval. Only works with inoType="date"                                                                                      | `boolean`                                   | `undefined` |\n| `inoShowLabelHint`    | `ino-show-label-hint`   | If true, an *optional* message is displayed if not required, otherwise a * marker is displayed if required                                                                        | `boolean`                                   | `undefined` |\n| `inoTwelveHourTime`   | `ino-twelve-hour-time`  | If true, displays time picker in 12 hour mode with AM/PM selection.                                                                                                               | `boolean`                                   | `undefined` |\n| `inoType`             | `ino-type`              | Selects the correct picker corresponding to the given type.                                                                                                                       | `"date" \\| "datetime" \\| "month" \\| "time"` | `\'date\'`    |\n| `max`                 | `max`                   | The maximum date that a user can pick to (inclusive).                                                                                                                             | `string`                                    | `undefined` |\n| `min`                 | `min`                   | The minimum date that a user can start picking from (inclusive).                                                                                                                  | `string`                                    | `undefined` |\n| `minuteStep`          | `minute-step`           | Adjusts the step for the minute input (incl. scrolling) Default is 5                                                                                                              | `number`                                    | `5`         |\n| `name`                | `name`                  | The input name of this element.                                                                                                                                                   | `string`                                    | `undefined` |\n| `required`            | `required`              | Marks this element as required.                                                                                                                                                   | `boolean`                                   | `undefined` |\n| `value`               | `value`                 | The currently selected date shown in the input field **unmanaged**. The given value will not be formatted as date.                                                                | `string`                                    | `\'\'`        |\n\n\n## Events\n\n| Event         | Description                                                                              | Type                  |\n| ------------- | ---------------------------------------------------------------------------------------- | --------------------- |\n| `valueChange` | Emits when the value of the datepicker changes. The value can be found in `event.detail` | `CustomEvent<string>` |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-input](../ino-input)\n- [ino-icon](../ino-icon)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-datepicker --\x3e ino-input\n  ino-datepicker --\x3e ino-icon\n  ino-input --\x3e ino-icon\n  ino-input --\x3e ino-label\n  style ino-datepicker fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){"ino-datepicker"===e.target.tagName.toLowerCase()&&e.target.setAttribute("value",e.detail)};return document.addEventListener("valueChange",eventHandler),function(){document.removeEventListener("valueChange",eventHandler)}}(),story()}]};var ino_datepicker_stories_DefaultUsage=function DefaultUsage(){return'\n\n    <div class="story-datepicker">\n      <ino-datepicker class="customizable-picker"\n        value="'.concat(Object(dist.text)("value",defaultDate,"DATE CONFIG"),'"\n        ino-type="').concat(Object(dist.select)("ino-type",["datetime","month","date","time"],"datetime","STANDARD"),'"\n        ino-label="').concat(Object(dist.text)("ino-label","Label","STANDARD"),'"\n        ino-outline="').concat(Object(dist.boolean)("ino-outline",!1,"STANDARD"),'"\n        min="').concat(Object(dist.text)("min",minDate,"STANDARD"),'"\n        max="').concat(Object(dist.text)("max",maxDate,"STANDARD"),'"\n        ino-pattern="').concat(Object(dist.text)("ino-pattern","","STANDARD"),'"\n        disabled="').concat(Object(dist.boolean)("disabled",!1,"STANDARD"),'"\n        required="').concat(Object(dist.boolean)("required",!1,"STANDARD"),'"\n        ino-show-label-hint="').concat(Object(dist.boolean)("ino-show-label-hint",!1,"STANDARD"),'"\n        ino-date-format="').concat(Object(dist.text)("ino-date-format","Y-m-d H:i","DATE CONFIG"),'"\n        ino-range="').concat(Object(dist.boolean)("ino-range",!1,"DATE CONFIG"),'"\n        ino-default-date="').concat(Object(dist.text)("ino-default-date",defaultDate,"DATE CONFIG"),'"\n        ino-twelve-hour-time="').concat(Object(dist.boolean)("ino-twelve-hour-time",!1,"DATE CONFIG"),'"\n        ino-helper="').concat(Object(dist.text)("ino-helper","Helper message","HELPER TEXT"),'"\n        ino-helper-persistent="').concat(Object(dist.boolean)("ino-helper-persistent",!1,"HELPER TEXT"),'"\n        ino-helper-validation="').concat(Object(dist.boolean)("ino-helper-validation",!1,"HELPER TEXT"),'"\n       >\n      </ino-datepicker>\n\n\n      <h4>Formats</h4>\n      <ino-datepicker ino-type="datetime" ino-date-format="H:i d.m.Y" ino-label="Datetime"></ino-datepicker>\n      <ino-datepicker ino-type="date" ino-date-format="d.m.Y" ino-label="Date"></ino-datepicker>\n      <ino-datepicker ino-type="time" ino-date-format="H:i" ino-label="Time"></ino-datepicker>\n      <ino-datepicker ino-date-format="d.m.Y" ino-range ino-label="Range"></ino-datepicker>\n      <ino-datepicker ino-type="month" ino-label="Month"></ino-datepicker>\n\n      <h4>Restrictions</h4>\n      <ino-datepicker ino-label="Custom default date" ino-date-format="Y-m-d" ino-default-date="').concat(defaultDate,'" ino-date-format="Y-m-d"></ino-datepicker>\n      <ino-datepicker ino-label="Min date" ino-date-format="Y-m-d" min="').concat(minDate,'"></ino-datepicker>\n      <ino-datepicker ino-label="Max date" ino-date-format="Y-m-d" max="').concat(maxDate,'"></ino-datepicker>\n      <ino-datepicker ino-label="Min and Max date" ino-date-format="Y-m-d" min="').concat(minDate,'" max="').concat(maxDate,'"></ino-datepicker>\n      <ino-datepicker ino-type="time" ino-label="hour step and minute step" hour-step="2" minute-step="5" ino-date-format="H:i"></ino-datepicker>\n      <ino-datepicker ino-type="time" ino-label="Default hour and minute" ino-date-format="H:i" ino-default-hour="14" ino-default-minute="49"></ino-datepicker>\n\n      <h4>Variations</h4>\n      <ino-datepicker ino-type="time" ino-date-format="h:i K" ino-label="Twelve hour time" ino-twelve-hour-time></ino-datepicker>\n\n      <h4>States</h4>\n      <ino-datepicker ino-label="Pattern numbers from 1 - 6" ino-pattern="[1-6]+"></ino-datepicker>\n      <ino-datepicker ino-label="Disabled" disabled></ino-datepicker>\n      <ino-datepicker ino-label="Required" required ino-show-label-hint></ino-datepicker>\n      <ino-datepicker ino-label="Optional" ino-show-label-hint></ino-datepicker>\n    </div>\n  ')},Forms=function Forms(){return'\n    <div class="story-datepicker">\n      <h4>Required</h4>\n      <p>The form should not submit as long as the date field is empty.</p>\n      <form class="form" onSubmit="return false;">\n        <ino-datepicker ino-label="Required" required></ino-datepicker>\n        <ino-button type="submit">Submit</ino-button>\n      </form>\n    </div>\n  '}},1351:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return DefaultUsage}));var with_stencil_readme=__webpack_require__(2);__webpack_require__(1272);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import componentReadme from \'_local-elements/src/components/ino-dialog/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport \'./ino-dialog.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.id === \'open-dialog-btn\') {\\n      const dialog = document.getElementById(\'demo-dialog-1\');\\n      dialog.inoOpen = true;\\n    }\\n    if (el.id === \'close-dialog-btn\') {\\n      const dialog = document.getElementById(\'demo-dialog-1\');\\n      dialog.inoOpen = false;\\n    }\\n  };\\n\\n  const checkedChangeHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-segment-button\') {\\n      return;\\n    }\\n    const group = el.closest(\'ino-segment-group\');\\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\\n  };\\n\\n  document.addEventListener(\'checkedChange\', checkedChangeHandler);\\n\\n  document.addEventListener(\'click\', eventHandler);\\n  document.addEventListener(\'clickEl\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'click\', eventHandler);\\n    document.removeEventListener(\'clickEl\', eventHandler);\\n    document.removeEventListener(\'checkedChange\', checkedChangeHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'structure/<ino-dialog>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n\\n     <ino-button id=\\"open-dialog-btn\\">Open Dialog</ino-button>\\n     <ino-dialog id=\\"demo-dialog-1\\">\\n        <div class=\\"ino-dialog-header\\" slot=\\"header\\">\\n            <div class=\\"ino-dialog-title\\">\\n                <h3>Select your favourite characters:</h3>\\n            </div>\\n            <ino-icon-button ino-icon=\\"close\\" id=\\"close-dialog-btn\\"></ino-icon-button>\\n        </div>\\n        <div class=\\"ino-dialog-content\\">\\n            <ino-segment-group value=\\"2\\" id=\\"dense-segment-grp\\">\\n              <ino-segment-button ino-dense value=\\"1\\">Morty</ino-segment-button>\\n              <ino-segment-button ino-dense value=\\"2\\">Pickle Rick</ino-segment-button>\\n              <ino-segment-button ino-dense value=\\"3\\">Squanchy</ino-segment-button>\\n              <ino-segment-button ino-dense value=\\"4\\">Beth</ino-segment-button>\\n              <ino-segment-button ino-dense value=\\"5\\">Jerry</ino-segment-button>\\n              <ino-segment-button ino-dense value=\\"6\\">Summer</ino-segment-button>\\n          </ino-segment-group>\\n        </div>\\n        <div class=\\"ino-dialog-footer\\" slot=\\"footer\\">\\n          <ino-button ino-icon=\\"remove\\" id=\\"close-dialog-btn\\" style=\\"--button-color-primary: red; --button-color-primary-light: rgba(255, 0, 0, 0.7); --button-color-primary-dark: red\\">Cancel</ino-button>\\n          <ino-button ino-icon=\\"mail\\" id=\\"close-dialog-btn\\">Submit</ino-button>\\n        </div>\\n     </ino-dialog>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":54},"endLoc":{"col":3,"line":79},"startBody":{"col":28,"line":54},"endBody":{"col":3,"line":79}}};\n    \nimport componentReadme from \'_local-elements/src/components/ino-dialog/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport \'./ino-dialog.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.id === \'open-dialog-btn\') {\n      const dialog = document.getElementById(\'demo-dialog-1\');\n      dialog.inoOpen = true;\n    }\n    if (el.id === \'close-dialog-btn\') {\n      const dialog = document.getElementById(\'demo-dialog-1\');\n      dialog.inoOpen = false;\n    }\n  };\n\n  const checkedChangeHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-segment-button\') {\n      return;\n    }\n    const group = el.closest(\'ino-segment-group\');\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\n  };\n\n  document.addEventListener(\'checkedChange\', checkedChangeHandler);\n\n  document.addEventListener(\'click\', eventHandler);\n  document.addEventListener(\'clickEl\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'click\', eventHandler);\n    document.removeEventListener(\'clickEl\', eventHandler);\n    document.removeEventListener(\'checkedChange\', checkedChangeHandler);\n  };\n}\n\nexport default {parameters: {"storySource":{"source":"import componentReadme from \'_local-elements/src/components/ino-dialog/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport \'./ino-dialog.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.id === \'open-dialog-btn\') {\\n      const dialog = document.getElementById(\'demo-dialog-1\');\\n      dialog.inoOpen = true;\\n    }\\n    if (el.id === \'close-dialog-btn\') {\\n      const dialog = document.getElementById(\'demo-dialog-1\');\\n      dialog.inoOpen = false;\\n    }\\n  };\\n\\n  const checkedChangeHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-segment-button\') {\\n      return;\\n    }\\n    const group = el.closest(\'ino-segment-group\');\\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\\n  };\\n\\n  document.addEventListener(\'checkedChange\', checkedChangeHandler);\\n\\n  document.addEventListener(\'click\', eventHandler);\\n  document.addEventListener(\'clickEl\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'click\', eventHandler);\\n    document.removeEventListener(\'clickEl\', eventHandler);\\n    document.removeEventListener(\'checkedChange\', checkedChangeHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'structure/<ino-dialog>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n\\n     <ino-button id=\\"open-dialog-btn\\">Open Dialog</ino-button>\\n     <ino-dialog id=\\"demo-dialog-1\\">\\n        <div class=\\"ino-dialog-header\\" slot=\\"header\\">\\n            <div class=\\"ino-dialog-title\\">\\n                <h3>Select your favourite characters:</h3>\\n            </div>\\n            <ino-icon-button ino-icon=\\"close\\" id=\\"close-dialog-btn\\"></ino-icon-button>\\n        </div>\\n        <div class=\\"ino-dialog-content\\">\\n            <ino-segment-group value=\\"2\\" id=\\"dense-segment-grp\\">\\n              <ino-segment-button ino-dense value=\\"1\\">Morty</ino-segment-button>\\n              <ino-segment-button ino-dense value=\\"2\\">Pickle Rick</ino-segment-button>\\n              <ino-segment-button ino-dense value=\\"3\\">Squanchy</ino-segment-button>\\n              <ino-segment-button ino-dense value=\\"4\\">Beth</ino-segment-button>\\n              <ino-segment-button ino-dense value=\\"5\\">Jerry</ino-segment-button>\\n              <ino-segment-button ino-dense value=\\"6\\">Summer</ino-segment-button>\\n          </ino-segment-group>\\n        </div>\\n        <div class=\\"ino-dialog-footer\\" slot=\\"footer\\">\\n          <ino-button ino-icon=\\"remove\\" id=\\"close-dialog-btn\\" style=\\"--button-color-primary: red; --button-color-primary-light: rgba(255, 0, 0, 0.7); --button-color-primary-dark: red\\">Cancel</ino-button>\\n          <ino-button ino-icon=\\"mail\\" id=\\"close-dialog-btn\\">Submit</ino-button>\\n        </div>\\n     </ino-dialog>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":54},"endLoc":{"col":3,"line":79},"startBody":{"col":28,"line":54},"endBody":{"col":3,"line":79}}}},},\n  title: \'structure/<ino-dialog>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n\n     <ino-button id="open-dialog-btn">Open Dialog</ino-button>\n     <ino-dialog id="demo-dialog-1">\n        <div class="ino-dialog-header" slot="header">\n            <div class="ino-dialog-title">\n                <h3>Select your favourite characters:</h3>\n            </div>\n            <ino-icon-button ino-icon="close" id="close-dialog-btn"></ino-icon-button>\n        </div>\n        <div class="ino-dialog-content">\n            <ino-segment-group value="2" id="dense-segment-grp">\n              <ino-segment-button ino-dense value="1">Morty</ino-segment-button>\n              <ino-segment-button ino-dense value="2">Pickle Rick</ino-segment-button>\n              <ino-segment-button ino-dense value="3">Squanchy</ino-segment-button>\n              <ino-segment-button ino-dense value="4">Beth</ino-segment-button>\n              <ino-segment-button ino-dense value="5">Jerry</ino-segment-button>\n              <ino-segment-button ino-dense value="6">Summer</ino-segment-button>\n          </ino-segment-group>\n        </div>\n        <div class="ino-dialog-footer" slot="footer">\n          <ino-button ino-icon="remove" id="close-dialog-btn" style="--button-color-primary: red; --button-color-primary-light: rgba(255, 0, 0, 0.7); --button-color-primary-dark: red">Cancel</ino-button>\n          <ino-button ino-icon="mail" id="close-dialog-btn">Submit</ino-button>\n        </div>\n     </ino-dialog>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:62},endLoc:{col:3,line:87},startBody:{col:28,line:62},endBody:{col:3,line:87}}}}},"storySource",{source:'import componentReadme from \'_local-elements/src/components/ino-dialog/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport \'./ino-dialog.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.id === \'open-dialog-btn\') {\n      const dialog = document.getElementById(\'demo-dialog-1\');\n      dialog.inoOpen = true;\n    }\n    if (el.id === \'close-dialog-btn\') {\n      const dialog = document.getElementById(\'demo-dialog-1\');\n      dialog.inoOpen = false;\n    }\n  };\n\n  const checkedChangeHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-segment-button\') {\n      return;\n    }\n    const group = el.closest(\'ino-segment-group\');\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\n  };\n\n  document.addEventListener(\'checkedChange\', checkedChangeHandler);\n\n  document.addEventListener(\'click\', eventHandler);\n  document.addEventListener(\'clickEl\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'click\', eventHandler);\n    document.removeEventListener(\'clickEl\', eventHandler);\n    document.removeEventListener(\'checkedChange\', checkedChangeHandler);\n  };\n}\n\nexport default {\n  title: \'structure/<ino-dialog>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n\n     <ino-button id="open-dialog-btn">Open Dialog</ino-button>\n     <ino-dialog id="demo-dialog-1">\n        <div class="ino-dialog-header" slot="header">\n            <div class="ino-dialog-title">\n                <h3>Select your favourite characters:</h3>\n            </div>\n            <ino-icon-button ino-icon="close" id="close-dialog-btn"></ino-icon-button>\n        </div>\n        <div class="ino-dialog-content">\n            <ino-segment-group value="2" id="dense-segment-grp">\n              <ino-segment-button ino-dense value="1">Morty</ino-segment-button>\n              <ino-segment-button ino-dense value="2">Pickle Rick</ino-segment-button>\n              <ino-segment-button ino-dense value="3">Squanchy</ino-segment-button>\n              <ino-segment-button ino-dense value="4">Beth</ino-segment-button>\n              <ino-segment-button ino-dense value="5">Jerry</ino-segment-button>\n              <ino-segment-button ino-dense value="6">Summer</ino-segment-button>\n          </ino-segment-group>\n        </div>\n        <div class="ino-dialog-footer" slot="footer">\n          <ino-button ino-icon="remove" id="close-dialog-btn" style="--button-color-primary: red; --button-color-primary-light: rgba(255, 0, 0, 0.7); --button-color-primary-dark: red">Cancel</ino-button>\n          <ino-button ino-icon="mail" id="close-dialog-btn">Submit</ino-button>\n        </div>\n     </ino-dialog>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:54},endLoc:{col:3,line:79},startBody:{col:28,line:54},endBody:{col:3,line:79}}}}),title:"structure/<ino-dialog>",decorators:[Object(with_stencil_readme.a)('# ino-dialog\n\nThe ino-dialog component displays a modal window that can be used to display additional information or \nnotify the user. It is based on the mdc-drawer and is composed of a header, content, and footer section \nwhich are fully customizable.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n  .querySelector(\'ino-dialog\')\n  .addEventListener(\'openChanged\', (e) => alert(`inoOpen has been set to ${e.detail}`));\n```\n\n```html\n<ino-dialog\n    ino-open="true"\n    ino-permanent="false"\n>\n    <div class="awesome-header" slot="header"/>\n    <div class="awesome-content"/>\n    <div class="awesome-footer" slot="footer"/>\n</ino-dialog>\n```\n\n### React\n\n```jsx harmony\nimport React from \'react\';\nimport { Component } from \'react\';\nimport { InoButton, InoDialog } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n\n  state = {\n    inoOpen: false\n  };\n\n  handleEvent = () => {\n    this.setState((inoOpen) => ({\n      inoOpen: !inoOpen;\n    }))\n  };\n\n  render() {\n      return (\n        <InoButton onClick={() => this.handleEvent()}>Open Dialog</InoButton>\n        <InoDialog inoOpen={this.state.inoOpen}>\n          <div class="awesome-content"/>\n        </InoDialog>\n      );\n  }\n}\n```\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property  | Attribute  | Description                     | Type      | Default |\n| --------- | ---------- | ------------------------------- | --------- | ------- |\n| `inoOpen` | `ino-open` | Opens the dialog if set to true | `boolean` | `false` |\n\n\n## Events\n\n| Event        | Description                                       | Type               |\n| ------------ | ------------------------------------------------- | ------------------ |\n| `openChange` | Emits an event upon opening or closing the dialog | `CustomEvent<any>` |\n\n\n## CSS Custom Properties\n\n| Name                            | Description                    |\n| ------------------------------- | ------------------------------ |\n| `--ino-dialog-background-color` | background color of the dialog |\n| `--ino-dialog-content-height`   | height of the content section  |\n| `--ino-dialog-footer-height`    | height of the footer section   |\n| `--ino-dialog-header-height`    | height of the header section   |\n| `--ino-dialog-height`           | height of the dialog           |\n| `--ino-dialog-width`            | width of the dialog            |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;"open-dialog-btn"===el.id&&(document.getElementById("demo-dialog-1").inoOpen=!0);"close-dialog-btn"===el.id&&(document.getElementById("demo-dialog-1").inoOpen=!1)},checkedChangeHandler=function checkedChangeHandler(e){var el=e.target;"ino-segment-button"===el.tagName.toLowerCase()&&el.closest("ino-segment-group").setAttribute("value",el.getAttribute("value"))};return document.addEventListener("checkedChange",checkedChangeHandler),document.addEventListener("click",eventHandler),document.addEventListener("clickEl",eventHandler),function(){document.removeEventListener("click",eventHandler),document.removeEventListener("clickEl",eventHandler),document.removeEventListener("checkedChange",checkedChangeHandler)}}(),story()}]};var DefaultUsage=function DefaultUsage(){return'\n\n     <ino-button id="open-dialog-btn">Open Dialog</ino-button>\n     <ino-dialog id="demo-dialog-1">\n        <div class="ino-dialog-header" slot="header">\n            <div class="ino-dialog-title">\n                <h3>Select your favourite characters:</h3>\n            </div>\n            <ino-icon-button ino-icon="close" id="close-dialog-btn"></ino-icon-button>\n        </div>\n        <div class="ino-dialog-content">\n            <ino-segment-group value="2" id="dense-segment-grp">\n              <ino-segment-button ino-dense value="1">Morty</ino-segment-button>\n              <ino-segment-button ino-dense value="2">Pickle Rick</ino-segment-button>\n              <ino-segment-button ino-dense value="3">Squanchy</ino-segment-button>\n              <ino-segment-button ino-dense value="4">Beth</ino-segment-button>\n              <ino-segment-button ino-dense value="5">Jerry</ino-segment-button>\n              <ino-segment-button ino-dense value="6">Summer</ino-segment-button>\n          </ino-segment-group>\n        </div>\n        <div class="ino-dialog-footer" slot="footer">\n          <ino-button ino-icon="remove" id="close-dialog-btn" style="--button-color-primary: red; --button-color-primary-light: rgba(255, 0, 0, 0.7); --button-color-primary-dark: red">Cancel</ino-button>\n          <ino-button ino-icon="mail" id="close-dialog-btn">Submit</ino-button>\n        </div>\n     </ino-dialog>\n  '}},1352:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_fab_set_stories_DefaultUsage}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2),icons=__webpack_require__(23);__webpack_require__(1274);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Buttons/<ino-fab-set>",parameters:(_parameters={storySource:{source:"\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import { boolean, select, text } from '@storybook/addon-knobs';\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\n\\nimport componentReadme from '_local-elements/src/components/ino-fab-set/readme.md';\\n\\nimport ICONS from '_local-elements/src/components/ino-icon/icons';\\nimport './ino-fab-set.scss';\\n\\nconst tooltipPlacementOptions = [\\n  'top',\\n  'top-start',\\n  'top-end',\\n  'right',\\n  'right-start',\\n  'right-end',\\n  'bottom',\\n  'bottom-start',\\n  'bottom-end',\\n  'left',\\n  'left-start',\\n  'left-end',\\n  'none',\\n];\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n\\n    if (el.tagName !== 'INO-FAB-SET') return;\\n\\n    const newState = el.getAttribute('ino-open-dial') === 'false' ? 'true' : 'false';\\n    el.setAttribute('ino-open-dial', newState);\\n  };\\n\\n  document.addEventListener('click', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener('click', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: 'Buttons/<ino-fab-set>',\\n  parameters: {\\n    actions: {\\n      handles: ['click ino-fab']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\\"story-fab-set\\\">\\n      <ino-fab-set\\n      ino-open-dial=\\\"${boolean('ino-open-dial', false)}\\\"\\n      ino-top-bottom-location=\\\"${select(\\n        'ino-top-bottom-location',\\n        ['top', 'bottom'],\\n        'bottom',\\n        'FAB-set'\\n      )}\\\"\\n      ino-left-right-location=\\\"${select(\\n        'in-left-right-location',\\n        ['left', 'right'],\\n        'left',\\n        'FAB-set'\\n      )}\\\"\\n      ino-dial-direction=\\\"${select(\\n        'ino-dial-direction',\\n        ['top', 'bottom', 'left', 'right'],\\n        'top',\\n        'FAB-set'\\n      )}\\\">\\n\\n        <ino-fab\\n          ino-color-scheme=\\\"${select(\\n            'ino-color-scheme-fab-1',\\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\\n            'primary',\\n            'First FAB'\\n          )}\\\"\\n          ino-icon=\\\"${select('ino-icon-fab1', ICONS, 'star', 'First FAB')}\\\"\\n          ino-label=\\\"${text('ino-label-fab1', 'Label 1', 'First FAB')}\\\"\\n          ino-mini=\\\"${boolean('ino-mini-fab1', true, 'First FAB')}\\\"\\n        ></ino-fab>\\n        <ino-fab\\n          ino-color-scheme=\\\"${select(\\n            'ino-color-scheme-fab-2',\\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\\n            'primary',\\n            'Second FAB'\\n          )}\\\"\\n          ino-icon=\\\"${select('ino-icon-fab2', ICONS, 'favorite', 'Second FAB')}\\\"\\n          ino-label=\\\"${text('ino-label-fab2', 'Label 2', 'Second FAB')}\\\"\\n          ino-mini=\\\"${boolean('ino-mini-fab2', true, 'Second FAB')}\\\"\\n        ></ino-fab>\\n        <ino-fab\\n          ino-color-scheme=\\\"${select(\\n            'ino-color-scheme-fab-3',\\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\\n            'primary',\\n            'Third FAB'\\n          )}\\\"\\n          ino-icon=\\\"${select('ino-icon-fab3', ICONS, 'info', 'Third FAB')}\\\"\\n          ino-label=\\\"${text('ino-label-fab3', 'Label 3', 'Third FAB')}\\\"\\n          ino-mini=\\\"${boolean('ino-mini-fab3', true, 'Third FAB')}\\\"\\n        ></ino-fab>\\n      </ino-fab-set>\\n    </div>\\n  `;\\n\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"DefaultUsage\":{\"startLoc\":{\"col\":28,\"line\":62},\"endLoc\":{\"col\":3,\"line\":120},\"startBody\":{\"col\":28,\"line\":62},\"endBody\":{\"col\":3,\"line\":120}}};\n    \nimport { boolean, select, text } from '@storybook/addon-knobs';\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-fab-set/readme.md';\n\nimport ICONS from '_local-elements/src/components/ino-icon/icons';\nimport './ino-fab-set.scss';\n\nconst tooltipPlacementOptions = [\n  'top',\n  'top-start',\n  'top-end',\n  'right',\n  'right-start',\n  'right-end',\n  'bottom',\n  'bottom-start',\n  'bottom-end',\n  'left',\n  'left-start',\n  'left-end',\n  'none',\n];\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n\n    if (el.tagName !== 'INO-FAB-SET') return;\n\n    const newState = el.getAttribute('ino-open-dial') === 'false' ? 'true' : 'false';\n    el.setAttribute('ino-open-dial', newState);\n  };\n\n  document.addEventListener('click', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('click', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Buttons/<ino-fab-set>',\n  parameters: {\"storySource\":{\"source\":\"import { boolean, select, text } from '@storybook/addon-knobs';\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\n\\nimport componentReadme from '_local-elements/src/components/ino-fab-set/readme.md';\\n\\nimport ICONS from '_local-elements/src/components/ino-icon/icons';\\nimport './ino-fab-set.scss';\\n\\nconst tooltipPlacementOptions = [\\n  'top',\\n  'top-start',\\n  'top-end',\\n  'right',\\n  'right-start',\\n  'right-end',\\n  'bottom',\\n  'bottom-start',\\n  'bottom-end',\\n  'left',\\n  'left-start',\\n  'left-end',\\n  'none',\\n];\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n\\n    if (el.tagName !== 'INO-FAB-SET') return;\\n\\n    const newState = el.getAttribute('ino-open-dial') === 'false' ? 'true' : 'false';\\n    el.setAttribute('ino-open-dial', newState);\\n  };\\n\\n  document.addEventListener('click', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener('click', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: 'Buttons/<ino-fab-set>',\\n  parameters: {\\n    actions: {\\n      handles: ['click ino-fab']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\\"story-fab-set\\\">\\n      <ino-fab-set\\n      ino-open-dial=\\\"${boolean('ino-open-dial', false)}\\\"\\n      ino-top-bottom-location=\\\"${select(\\n        'ino-top-bottom-location',\\n        ['top', 'bottom'],\\n        'bottom',\\n        'FAB-set'\\n      )}\\\"\\n      ino-left-right-location=\\\"${select(\\n        'in-left-right-location',\\n        ['left', 'right'],\\n        'left',\\n        'FAB-set'\\n      )}\\\"\\n      ino-dial-direction=\\\"${select(\\n        'ino-dial-direction',\\n        ['top', 'bottom', 'left', 'right'],\\n        'top',\\n        'FAB-set'\\n      )}\\\">\\n\\n        <ino-fab\\n          ino-color-scheme=\\\"${select(\\n            'ino-color-scheme-fab-1',\\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\\n            'primary',\\n            'First FAB'\\n          )}\\\"\\n          ino-icon=\\\"${select('ino-icon-fab1', ICONS, 'star', 'First FAB')}\\\"\\n          ino-label=\\\"${text('ino-label-fab1', 'Label 1', 'First FAB')}\\\"\\n          ino-mini=\\\"${boolean('ino-mini-fab1', true, 'First FAB')}\\\"\\n        ></ino-fab>\\n        <ino-fab\\n          ino-color-scheme=\\\"${select(\\n            'ino-color-scheme-fab-2',\\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\\n            'primary',\\n            'Second FAB'\\n          )}\\\"\\n          ino-icon=\\\"${select('ino-icon-fab2', ICONS, 'favorite', 'Second FAB')}\\\"\\n          ino-label=\\\"${text('ino-label-fab2', 'Label 2', 'Second FAB')}\\\"\\n          ino-mini=\\\"${boolean('ino-mini-fab2', true, 'Second FAB')}\\\"\\n        ></ino-fab>\\n        <ino-fab\\n          ino-color-scheme=\\\"${select(\\n            'ino-color-scheme-fab-3',\\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\\n            'primary',\\n            'Third FAB'\\n          )}\\\"\\n          ino-icon=\\\"${select('ino-icon-fab3', ICONS, 'info', 'Third FAB')}\\\"\\n          ino-label=\\\"${text('ino-label-fab3', 'Label 3', 'Third FAB')}\\\"\\n          ino-mini=\\\"${boolean('ino-mini-fab3', true, 'Third FAB')}\\\"\\n        ></ino-fab>\\n      </ino-fab-set>\\n    </div>\\n  `;\\n\",\"locationsMap\":{\"default-usage\":{\"startLoc\":{\"col\":28,\"line\":62},\"endLoc\":{\"col\":3,\"line\":120},\"startBody\":{\"col\":28,\"line\":62},\"endBody\":{\"col\":3,\"line\":120}}}},\n    actions: {\n      handles: ['click ino-fab']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class=\"story-fab-set\">\n      <ino-fab-set\n      ino-open-dial=\"${boolean('ino-open-dial', false)}\"\n      ino-top-bottom-location=\"${select(\n        'ino-top-bottom-location',\n        ['top', 'bottom'],\n        'bottom',\n        'FAB-set'\n      )}\"\n      ino-left-right-location=\"${select(\n        'in-left-right-location',\n        ['left', 'right'],\n        'left',\n        'FAB-set'\n      )}\"\n      ino-dial-direction=\"${select(\n        'ino-dial-direction',\n        ['top', 'bottom', 'left', 'right'],\n        'top',\n        'FAB-set'\n      )}\">\n\n        <ino-fab\n          ino-color-scheme=\"${select(\n            'ino-color-scheme-fab-1',\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\n            'primary',\n            'First FAB'\n          )}\"\n          ino-icon=\"${select('ino-icon-fab1', ICONS, 'star', 'First FAB')}\"\n          ino-label=\"${text('ino-label-fab1', 'Label 1', 'First FAB')}\"\n          ino-mini=\"${boolean('ino-mini-fab1', true, 'First FAB')}\"\n        ></ino-fab>\n        <ino-fab\n          ino-color-scheme=\"${select(\n            'ino-color-scheme-fab-2',\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\n            'primary',\n            'Second FAB'\n          )}\"\n          ino-icon=\"${select('ino-icon-fab2', ICONS, 'favorite', 'Second FAB')}\"\n          ino-label=\"${text('ino-label-fab2', 'Label 2', 'Second FAB')}\"\n          ino-mini=\"${boolean('ino-mini-fab2', true, 'Second FAB')}\"\n        ></ino-fab>\n        <ino-fab\n          ino-color-scheme=\"${select(\n            'ino-color-scheme-fab-3',\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\n            'primary',\n            'Third FAB'\n          )}\"\n          ino-icon=\"${select('ino-icon-fab3', ICONS, 'info', 'Third FAB')}\"\n          ino-label=\"${text('ino-label-fab3', 'Label 3', 'Third FAB')}\"\n          ino-mini=\"${boolean('ino-mini-fab3', true, 'Third FAB')}\"\n        ></ino-fab>\n      </ino-fab-set>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:70},endLoc:{col:3,line:128},startBody:{col:28,line:70},endBody:{col:3,line:128}}}}},_defineProperty(_parameters,"storySource",{source:"import { boolean, select, text } from '@storybook/addon-knobs';\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-fab-set/readme.md';\n\nimport ICONS from '_local-elements/src/components/ino-icon/icons';\nimport './ino-fab-set.scss';\n\nconst tooltipPlacementOptions = [\n  'top',\n  'top-start',\n  'top-end',\n  'right',\n  'right-start',\n  'right-end',\n  'bottom',\n  'bottom-start',\n  'bottom-end',\n  'left',\n  'left-start',\n  'left-end',\n  'none',\n];\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n\n    if (el.tagName !== 'INO-FAB-SET') return;\n\n    const newState = el.getAttribute('ino-open-dial') === 'false' ? 'true' : 'false';\n    el.setAttribute('ino-open-dial', newState);\n  };\n\n  document.addEventListener('click', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('click', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Buttons/<ino-fab-set>',\n  parameters: {\n    actions: {\n      handles: ['click ino-fab']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class=\"story-fab-set\">\n      <ino-fab-set\n      ino-open-dial=\"${boolean('ino-open-dial', false)}\"\n      ino-top-bottom-location=\"${select(\n        'ino-top-bottom-location',\n        ['top', 'bottom'],\n        'bottom',\n        'FAB-set'\n      )}\"\n      ino-left-right-location=\"${select(\n        'in-left-right-location',\n        ['left', 'right'],\n        'left',\n        'FAB-set'\n      )}\"\n      ino-dial-direction=\"${select(\n        'ino-dial-direction',\n        ['top', 'bottom', 'left', 'right'],\n        'top',\n        'FAB-set'\n      )}\">\n\n        <ino-fab\n          ino-color-scheme=\"${select(\n            'ino-color-scheme-fab-1',\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\n            'primary',\n            'First FAB'\n          )}\"\n          ino-icon=\"${select('ino-icon-fab1', ICONS, 'star', 'First FAB')}\"\n          ino-label=\"${text('ino-label-fab1', 'Label 1', 'First FAB')}\"\n          ino-mini=\"${boolean('ino-mini-fab1', true, 'First FAB')}\"\n        ></ino-fab>\n        <ino-fab\n          ino-color-scheme=\"${select(\n            'ino-color-scheme-fab-2',\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\n            'primary',\n            'Second FAB'\n          )}\"\n          ino-icon=\"${select('ino-icon-fab2', ICONS, 'favorite', 'Second FAB')}\"\n          ino-label=\"${text('ino-label-fab2', 'Label 2', 'Second FAB')}\"\n          ino-mini=\"${boolean('ino-mini-fab2', true, 'Second FAB')}\"\n        ></ino-fab>\n        <ino-fab\n          ino-color-scheme=\"${select(\n            'ino-color-scheme-fab-3',\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\n            'primary',\n            'Third FAB'\n          )}\"\n          ino-icon=\"${select('ino-icon-fab3', ICONS, 'info', 'Third FAB')}\"\n          ino-label=\"${text('ino-label-fab3', 'Label 3', 'Third FAB')}\"\n          ino-mini=\"${boolean('ino-mini-fab3', true, 'Third FAB')}\"\n        ></ino-fab>\n      </ino-fab-set>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:62},endLoc:{col:3,line:120},startBody:{col:28,line:62},endBody:{col:3,line:120}}}}),_defineProperty(_parameters,"actions",{handles:["click ino-fab"]}),_parameters),decorators:[Object(with_stencil_readme.a)('# ino-fab-set\n\nThe ino-fab-set component serves as a container for multiple fab buttons. It contains actions related to the main fab button.\nUpon interacting with the fab button, a FAB-Set can display three to six related actions in the form of a speed dial.\n\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-fab-set\n  ino-top-bottom-location="<string>"\n  ino-left-right-location="<string>"\n  ino-dial-direction="<string>"\n  ino-open-dial\n>\n  <ino-fab ...></ino-fab>\n  <ino-fab ...></ino-fab>\n  ...\n</ino-fab-set>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoFab, InoFabSet } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n\n  state = {\n    open: false\n  }\n\n  handleClick = (e: any) => {\n    alert(`Fab-Set was clicked`);\n    this.setState({open: !this.state.open})\n  };\n\n  render() {\n    return (\n      <FabSet inoOpenDial={this.state.open} inoDialDirection="top" onClick={handleClick}>\n        <InoFab\n          inoMini\n          inoLabel="Profile"\n          inoIcon="person"\n        />\n        <InoFab\n          inoMini\n          inoLabel="Search"\n          inoIcon="search"\n        />\n        <InoFab inoMini inoLabel="Help" inoIcon="help" />\n      </FabSet>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoFab, InoFabSet } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst FabSet: React.FunctionComponent<Components.InoFabSetAttributes> = props => {\n  const { inoDialDirection } = props;\n\n  return (\n    <InoFabSet inoDialDirection={inoDialDirection}>{props.children}</InoFabSet>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <FabSet inoDialDirection="top">\n        <InoFab inoMini inoLabel="Profile" inoIcon="person" />\n        <InoFab inoMini inoLabel="Search" inoIcon="search" />\n        <InoFab inoMini inoLabel="Help" inoIcon="help" />\n      </FabSet>\n    );\n  }\n}\n```\n\n## Additional Hints\n\n**Content**: Put the the FABs for the speed dial inside of `ino-fab-set` as `ino-fab`.\n\n### Manage icons\n\n> **Note:** To use the provided icons in your consumer project, you need to copy all contents of\n> `node_modules/@inovex.de/elements/dist/inovex-elements/icon-assets` into your `dist/icon-assets` folder. All icons are expected\n> at runtime to be located in `icon-assets/`. Please refer to the Storybook documentation to get detailed instructions\n> on how to integrate the icons with Angular, React or plain JavaScript.\n\n## Control flow\n\nThe ino-fab-set has a controlled (unmanaged) attribute `inoOpenDial`. For this reason, listen to `click` events, sync to your local state and pass the state to the component again to open/close the fab-set.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property               | Attribute                 | Description                                                                                   | Type                                     | Default    |\n| ---------------------- | ------------------------- | --------------------------------------------------------------------------------------------- | ---------------------------------------- | ---------- |\n| `inoDialDirection`     | `ino-dial-direction`      | The direction of the speed dial. Possible values: `top` (default), `bottom`, `right`, `left`. | `"bottom" \\| "left" \\| "right" \\| "top"` | `\'top\'`    |\n| `inoLeftRightLocation` | `ino-left-right-location` | The side where the Fab is displayed. Possible values: `right`, `left` (default).              | `"left" \\| "right"`                      | `\'left\'`   |\n| `inoOpenDial`          | `ino-open-dial`           | Opens the dial (**uncontrolled**)                                                             | `boolean`                                | `false`    |\n| `inoTopBottomLocation` | `ino-top-bottom-location` | The side where the Fab is displayed. Possible values: `top`, `bottom` (default).              | `"bottom" \\| "top"`                      | `\'bottom\'` |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-fab](../ino-fab)\n- [ino-icon](../ino-icon)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-fab-set --\x3e ino-fab\n  ino-fab-set --\x3e ino-icon\n  ino-fab --\x3e ino-icon\n  ino-fab --\x3e ino-tooltip\n  style ino-fab-set fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;if("INO-FAB-SET"===el.tagName){var newState="false"===el.getAttribute("ino-open-dial")?"true":"false";el.setAttribute("ino-open-dial",newState)}};return document.addEventListener("click",eventHandler),function(){document.removeEventListener("click",eventHandler)}}(),story()}]};var ino_fab_set_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-fab-set">\n      <ino-fab-set\n      ino-open-dial="'.concat(Object(dist.boolean)("ino-open-dial",!1),'"\n      ino-top-bottom-location="').concat(Object(dist.select)("ino-top-bottom-location",["top","bottom"],"bottom","FAB-set"),'"\n      ino-left-right-location="').concat(Object(dist.select)("in-left-right-location",["left","right"],"left","FAB-set"),'"\n      ino-dial-direction="').concat(Object(dist.select)("ino-dial-direction",["top","bottom","left","right"],"top","FAB-set"),'">\n\n        <ino-fab\n          ino-color-scheme="').concat(Object(dist.select)("ino-color-scheme-fab-1",["","primary","secondary","success","warning","error","light","dark"],"primary","First FAB"),'"\n          ino-icon="').concat(Object(dist.select)("ino-icon-fab1",icons.a,"star","First FAB"),'"\n          ino-label="').concat(Object(dist.text)("ino-label-fab1","Label 1","First FAB"),'"\n          ino-mini="').concat(Object(dist.boolean)("ino-mini-fab1",!0,"First FAB"),'"\n        ></ino-fab>\n        <ino-fab\n          ino-color-scheme="').concat(Object(dist.select)("ino-color-scheme-fab-2",["","primary","secondary","success","warning","error","light","dark"],"primary","Second FAB"),'"\n          ino-icon="').concat(Object(dist.select)("ino-icon-fab2",icons.a,"favorite","Second FAB"),'"\n          ino-label="').concat(Object(dist.text)("ino-label-fab2","Label 2","Second FAB"),'"\n          ino-mini="').concat(Object(dist.boolean)("ino-mini-fab2",!0,"Second FAB"),'"\n        ></ino-fab>\n        <ino-fab\n          ino-color-scheme="').concat(Object(dist.select)("ino-color-scheme-fab-3",["","primary","secondary","success","warning","error","light","dark"],"primary","Third FAB"),'"\n          ino-icon="').concat(Object(dist.select)("ino-icon-fab3",icons.a,"info","Third FAB"),'"\n          ino-label="').concat(Object(dist.text)("ino-label-fab3","Label 3","Third FAB"),'"\n          ino-mini="').concat(Object(dist.boolean)("ino-mini-fab3",!0,"Third FAB"),'"\n        ></ino-fab>\n      </ino-fab-set>\n    </div>\n  ')}},1353:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_fab_stories_DefaultUsage}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2),icons=__webpack_require__(23);__webpack_require__(1276);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-fab/readme.md\';\\n\\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\\nimport \'./ino-fab.scss\';\\n\\nexport default {\\n  title: \'Buttons/<ino-fab>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-fab\\">\\n    <h4>Customizable Fab</h4>\\n     <style>\\n          ino-fab.customizable-fab {\\n            --ino-fab-color: ${text(\'--ino-fab-color\', \'#ffffff\', \'Custom Properties\')};\\n            --ino-fab-background-color: ${text(\'--ino-fab-background-color\', \'#3d40f5\', \'Custom Properties\')};\\n            --ino-fab-background-color-hover: ${text(\'--ino-fab-background-color-hover\', \'#5d60f7\', \'Custom Properties\')};\\n            --ino-fab-background-color-active: ${text(\'--ino-fab-background-color-active\', \'#0d10f3\', \'Custom Properties\')};\\n            --ino-fab-icon-color: ${text(\'--ino-fab-icon-color\', \'#ffffff\', \'Custom Properties\')};\\n            --ino-fab-color-disabled: ${text(\'--ino-fab-color-disabled\', \'#ffffff\', \'Custom Properties\')};\\n            --ino-fab-background-color-disabled: ${text(\'--ino-fab-background-color-disabled\', \'#9d9d9d\', \'Custom Properties\')};\\n            --ino-fab-icon-color-disabled: ${text(\'--ino-fab-icon-color-disabled\', \'#ffffff\', \'Custom Properties\')};\\n          }\\n      </style>\\n      <ino-fab\\n        class=\\"customizable-fab\\"\\n      ino-edge-position=\\"${select(\\n        \'ino-edge-position\',\\n        [\'top-left\', \'top-right\', \'bottom-right\', \'bottom-left\', \'none\'],\\n        \'top-left\'\\n      )}\\"\\n      ino-icon=\\"${select(\'ino-leading-icon\', ICONS, \'add\')}\\"\\n      ino-label=\\"${text(\'ino-label\', \'Label\')}\\"\\n      ino-extended=\\"${boolean(\'ino-extended\', false)}\\"\\n      ino-disabled=\\"${boolean(\'ino-disabled\', false)}\\"\\n      ino-mini=\\"${boolean(\'ino-mini\', false)}\\"></ino-fab>\\n\\n    <h4>Variants</h4>\\n      <div class=\\"ino-fab-variants\\">\\n        <ino-fab ino-tooltip-placement=\\"none\\" ino-label=\\"Default Fab\\" ino-icon=\\"add\\"></ino-fab>\\n        <ino-fab ino-mini ino-label=\\"Mini Fab\\" ino-icon=\\"add\\"></ino-fab>\\n        <ino-fab ino-extended ino-label=\\"Extended Button\\" ino-icon=\\"add\\"></ino-fab>\\n        <ino-fab ino-disabled ino-label=\\"Disabled Button\\" ino-icon=\\"add\\"></ino-fab>\\n      </div>\\n    </div>\\n    <h4>Different Edge Positions</h4>\\n    <div class=\\"ino-fab-variants\\">\\n       <ino-fab ino-label=\\"top-left\\" ino-icon=\\"add\\" ino-edge-position=\\"top-left\\"></ino-fab>\\n       <ino-fab ino-label=\\"top-right\\" ino-icon=\\"add\\" ino-edge-position=\\"top-right\\"></ino-fab>\\n       <ino-fab ino-label=\\"bottom-right\\" ino-icon=\\"add\\" ino-edge-position=\\"bottom-right\\"></ino-fab>\\n       <ino-fab ino-label=\\"bottom-left\\" ino-icon=\\"add\\" ino-edge-position=\\"bottom-left\\"></ino-fab>\\n       <ino-fab ino-label=\\"none\\" ino-icon=\\"add\\" ino-edge-position=\\"none\\"></ino-fab>\\n    </div>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":15},"endLoc":{"col":3,"line":59},"startBody":{"col":28,"line":15},"endBody":{"col":3,"line":59}}};\n    \nimport { boolean, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-fab/readme.md\';\n\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\nimport \'./ino-fab.scss\';\n\nexport default {parameters: {"storySource":{"source":"import { boolean, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-fab/readme.md\';\\n\\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\\nimport \'./ino-fab.scss\';\\n\\nexport default {\\n  title: \'Buttons/<ino-fab>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-fab\\">\\n    <h4>Customizable Fab</h4>\\n     <style>\\n          ino-fab.customizable-fab {\\n            --ino-fab-color: ${text(\'--ino-fab-color\', \'#ffffff\', \'Custom Properties\')};\\n            --ino-fab-background-color: ${text(\'--ino-fab-background-color\', \'#3d40f5\', \'Custom Properties\')};\\n            --ino-fab-background-color-hover: ${text(\'--ino-fab-background-color-hover\', \'#5d60f7\', \'Custom Properties\')};\\n            --ino-fab-background-color-active: ${text(\'--ino-fab-background-color-active\', \'#0d10f3\', \'Custom Properties\')};\\n            --ino-fab-icon-color: ${text(\'--ino-fab-icon-color\', \'#ffffff\', \'Custom Properties\')};\\n            --ino-fab-color-disabled: ${text(\'--ino-fab-color-disabled\', \'#ffffff\', \'Custom Properties\')};\\n            --ino-fab-background-color-disabled: ${text(\'--ino-fab-background-color-disabled\', \'#9d9d9d\', \'Custom Properties\')};\\n            --ino-fab-icon-color-disabled: ${text(\'--ino-fab-icon-color-disabled\', \'#ffffff\', \'Custom Properties\')};\\n          }\\n      </style>\\n      <ino-fab\\n        class=\\"customizable-fab\\"\\n      ino-edge-position=\\"${select(\\n        \'ino-edge-position\',\\n        [\'top-left\', \'top-right\', \'bottom-right\', \'bottom-left\', \'none\'],\\n        \'top-left\'\\n      )}\\"\\n      ino-icon=\\"${select(\'ino-leading-icon\', ICONS, \'add\')}\\"\\n      ino-label=\\"${text(\'ino-label\', \'Label\')}\\"\\n      ino-extended=\\"${boolean(\'ino-extended\', false)}\\"\\n      ino-disabled=\\"${boolean(\'ino-disabled\', false)}\\"\\n      ino-mini=\\"${boolean(\'ino-mini\', false)}\\"></ino-fab>\\n\\n    <h4>Variants</h4>\\n      <div class=\\"ino-fab-variants\\">\\n        <ino-fab ino-tooltip-placement=\\"none\\" ino-label=\\"Default Fab\\" ino-icon=\\"add\\"></ino-fab>\\n        <ino-fab ino-mini ino-label=\\"Mini Fab\\" ino-icon=\\"add\\"></ino-fab>\\n        <ino-fab ino-extended ino-label=\\"Extended Button\\" ino-icon=\\"add\\"></ino-fab>\\n        <ino-fab ino-disabled ino-label=\\"Disabled Button\\" ino-icon=\\"add\\"></ino-fab>\\n      </div>\\n    </div>\\n    <h4>Different Edge Positions</h4>\\n    <div class=\\"ino-fab-variants\\">\\n       <ino-fab ino-label=\\"top-left\\" ino-icon=\\"add\\" ino-edge-position=\\"top-left\\"></ino-fab>\\n       <ino-fab ino-label=\\"top-right\\" ino-icon=\\"add\\" ino-edge-position=\\"top-right\\"></ino-fab>\\n       <ino-fab ino-label=\\"bottom-right\\" ino-icon=\\"add\\" ino-edge-position=\\"bottom-right\\"></ino-fab>\\n       <ino-fab ino-label=\\"bottom-left\\" ino-icon=\\"add\\" ino-edge-position=\\"bottom-left\\"></ino-fab>\\n       <ino-fab ino-label=\\"none\\" ino-icon=\\"add\\" ino-edge-position=\\"none\\"></ino-fab>\\n    </div>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":15},"endLoc":{"col":3,"line":59},"startBody":{"col":28,"line":15},"endBody":{"col":3,"line":59}}}},},\n  title: \'Buttons/<ino-fab>\',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-fab">\n    <h4>Customizable Fab</h4>\n     <style>\n          ino-fab.customizable-fab {\n            --ino-fab-color: ${text(\'--ino-fab-color\', \'#ffffff\', \'Custom Properties\')};\n            --ino-fab-background-color: ${text(\'--ino-fab-background-color\', \'#3d40f5\', \'Custom Properties\')};\n            --ino-fab-background-color-hover: ${text(\'--ino-fab-background-color-hover\', \'#5d60f7\', \'Custom Properties\')};\n            --ino-fab-background-color-active: ${text(\'--ino-fab-background-color-active\', \'#0d10f3\', \'Custom Properties\')};\n            --ino-fab-icon-color: ${text(\'--ino-fab-icon-color\', \'#ffffff\', \'Custom Properties\')};\n            --ino-fab-color-disabled: ${text(\'--ino-fab-color-disabled\', \'#ffffff\', \'Custom Properties\')};\n            --ino-fab-background-color-disabled: ${text(\'--ino-fab-background-color-disabled\', \'#9d9d9d\', \'Custom Properties\')};\n            --ino-fab-icon-color-disabled: ${text(\'--ino-fab-icon-color-disabled\', \'#ffffff\', \'Custom Properties\')};\n          }\n      </style>\n      <ino-fab\n        class="customizable-fab"\n      ino-edge-position="${select(\n        \'ino-edge-position\',\n        [\'top-left\', \'top-right\', \'bottom-right\', \'bottom-left\', \'none\'],\n        \'top-left\'\n      )}"\n      ino-icon="${select(\'ino-leading-icon\', ICONS, \'add\')}"\n      ino-label="${text(\'ino-label\', \'Label\')}"\n      ino-extended="${boolean(\'ino-extended\', false)}"\n      ino-disabled="${boolean(\'ino-disabled\', false)}"\n      ino-mini="${boolean(\'ino-mini\', false)}"></ino-fab>\n\n    <h4>Variants</h4>\n      <div class="ino-fab-variants">\n        <ino-fab ino-tooltip-placement="none" ino-label="Default Fab" ino-icon="add"></ino-fab>\n        <ino-fab ino-mini ino-label="Mini Fab" ino-icon="add"></ino-fab>\n        <ino-fab ino-extended ino-label="Extended Button" ino-icon="add"></ino-fab>\n        <ino-fab ino-disabled ino-label="Disabled Button" ino-icon="add"></ino-fab>\n      </div>\n    </div>\n    <h4>Different Edge Positions</h4>\n    <div class="ino-fab-variants">\n       <ino-fab ino-label="top-left" ino-icon="add" ino-edge-position="top-left"></ino-fab>\n       <ino-fab ino-label="top-right" ino-icon="add" ino-edge-position="top-right"></ino-fab>\n       <ino-fab ino-label="bottom-right" ino-icon="add" ino-edge-position="bottom-right"></ino-fab>\n       <ino-fab ino-label="bottom-left" ino-icon="add" ino-edge-position="bottom-left"></ino-fab>\n       <ino-fab ino-label="none" ino-icon="add" ino-edge-position="none"></ino-fab>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:23},endLoc:{col:3,line:67},startBody:{col:28,line:23},endBody:{col:3,line:67}}}}},"storySource",{source:"import { boolean, select, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-fab/readme.md';\n\nimport ICONS from '_local-elements/src/components/ino-icon/icons';\nimport './ino-fab.scss';\n\nexport default {\n  title: 'Buttons/<ino-fab>',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class=\"story-fab\">\n    <h4>Customizable Fab</h4>\n     <style>\n          ino-fab.customizable-fab {\n            --ino-fab-color: ${text('--ino-fab-color', '#ffffff', 'Custom Properties')};\n            --ino-fab-background-color: ${text('--ino-fab-background-color', '#3d40f5', 'Custom Properties')};\n            --ino-fab-background-color-hover: ${text('--ino-fab-background-color-hover', '#5d60f7', 'Custom Properties')};\n            --ino-fab-background-color-active: ${text('--ino-fab-background-color-active', '#0d10f3', 'Custom Properties')};\n            --ino-fab-icon-color: ${text('--ino-fab-icon-color', '#ffffff', 'Custom Properties')};\n            --ino-fab-color-disabled: ${text('--ino-fab-color-disabled', '#ffffff', 'Custom Properties')};\n            --ino-fab-background-color-disabled: ${text('--ino-fab-background-color-disabled', '#9d9d9d', 'Custom Properties')};\n            --ino-fab-icon-color-disabled: ${text('--ino-fab-icon-color-disabled', '#ffffff', 'Custom Properties')};\n          }\n      </style>\n      <ino-fab\n        class=\"customizable-fab\"\n      ino-edge-position=\"${select(\n        'ino-edge-position',\n        ['top-left', 'top-right', 'bottom-right', 'bottom-left', 'none'],\n        'top-left'\n      )}\"\n      ino-icon=\"${select('ino-leading-icon', ICONS, 'add')}\"\n      ino-label=\"${text('ino-label', 'Label')}\"\n      ino-extended=\"${boolean('ino-extended', false)}\"\n      ino-disabled=\"${boolean('ino-disabled', false)}\"\n      ino-mini=\"${boolean('ino-mini', false)}\"></ino-fab>\n\n    <h4>Variants</h4>\n      <div class=\"ino-fab-variants\">\n        <ino-fab ino-tooltip-placement=\"none\" ino-label=\"Default Fab\" ino-icon=\"add\"></ino-fab>\n        <ino-fab ino-mini ino-label=\"Mini Fab\" ino-icon=\"add\"></ino-fab>\n        <ino-fab ino-extended ino-label=\"Extended Button\" ino-icon=\"add\"></ino-fab>\n        <ino-fab ino-disabled ino-label=\"Disabled Button\" ino-icon=\"add\"></ino-fab>\n      </div>\n    </div>\n    <h4>Different Edge Positions</h4>\n    <div class=\"ino-fab-variants\">\n       <ino-fab ino-label=\"top-left\" ino-icon=\"add\" ino-edge-position=\"top-left\"></ino-fab>\n       <ino-fab ino-label=\"top-right\" ino-icon=\"add\" ino-edge-position=\"top-right\"></ino-fab>\n       <ino-fab ino-label=\"bottom-right\" ino-icon=\"add\" ino-edge-position=\"bottom-right\"></ino-fab>\n       <ino-fab ino-label=\"bottom-left\" ino-icon=\"add\" ino-edge-position=\"bottom-left\"></ino-fab>\n       <ino-fab ino-label=\"none\" ino-icon=\"add\" ino-edge-position=\"none\"></ino-fab>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:15},endLoc:{col:3,line:59},startBody:{col:28,line:15},endBody:{col:3,line:59}}}}),title:"Buttons/<ino-fab>",decorators:[Object(with_stencil_readme.a)('# ino-fab\n\nA floating action button represents the primary action in an application. [Floating Action Button](https://github.com/material-components/material-components-web/tree/master/packages/mdc-fab) component.\nIt appears in front of all screen content, typically as a circular shape with an icon in its center.\n\nFABs come in three types: regular, mini, and extended.\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-fab\n  ino-color-scheme="<string>"\n  ino-icon="<string>"\n  ino-label="<string>"\n  ino-extended\n  ino-mini\n  ino-tooltip-placement="<string>"\n  ino-disabled\n>\n</ino-fab>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoFab } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  handleClick = (e: any) => {\n    alert(`Fab was clicked`);\n  };\n\n  render() {\n    return (\n      <InoFab\n        inoIcon="star"\n        inoLabel="This is a fab"\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoFab } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Fab: React.FunctionComponent<Components.InoFabAttributes> = props => {\n  const { inoLabel, inoIcon } = props;\n\n  const handleClick = (e: any) => {\n    alert(`Fab was clicked`);\n  };\n\n  return <InoFab inoIcon={inoIcon} inoLabel={inoLabel} onClick={handleClick} />;\n};\n\nclass MyComponent extends Component {\n  render() {\n    return <Fab inoLabel="This is a fab" inoIcon="star" />;\n  }\n}\n```\n\n## Additional Hints\n\n**Content**: Use the `ino-label` attribute to set the text of a fab. To add an icon, use the `ino-icon` attribute.\n\n**Styling**: The fab can be styled in many different ways using the `ino-color-scheme` attribute. See the attribute documentation below for additional information.\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property              | Attribute               | Description                                                                                                                                    | Type                                                                                                                                                                                                                   | Default     |\n| --------------------- | ----------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------- |\n| `inoDisabled`         | `ino-disabled`          | Disables the button.                                                                                                                           | `boolean`                                                                                                                                                                                                              | `false`     |\n| `inoEdgePosition`     | `ino-edge-position`     | The position of the edge.                                                                                                                      | `"bottom-left" \\| "bottom-right" \\| "none" \\| "top-left" \\| "top-right"`                                                                                                                                               | `undefined` |\n| `inoExtended`         | `ino-extended`          | Optional, modifies the FAB to wider size which includes a text label.                                                                          | `boolean`                                                                                                                                                                                                              | `false`     |\n| `inoIcon`             | `ino-icon`              | Adds an icon to the Fab.                                                                                                                       | `string`                                                                                                                                                                                                               | `undefined` |\n| `inoLabel`            | `ino-label`             | Optional, for the text label. Applicable only for Extended FAB.                                                                                | `string`                                                                                                                                                                                                               | `undefined` |\n| `inoMini`             | `ino-mini`              | Optional, modifies the FAB to a smaller size                                                                                                   | `boolean`                                                                                                                                                                                                              | `false`     |\n| `inoTooltipPlacement` | `ino-tooltip-placement` | The placement of the tooltip which will be displayed when the button is not extended. Use `none`, if you don\'t want a tooltip to be displayed. | `"auto" \\| "auto-end" \\| "auto-start" \\| "bottom" \\| "bottom-end" \\| "bottom-start" \\| "left" \\| "left-end" \\| "left-start" \\| "none" \\| "right" \\| "right-end" \\| "right-start" \\| "top" \\| "top-end" \\| "top-start"` | `\'left\'`    |\n\n\n## CSS Custom Properties\n\n| Name                              | Description                           |\n| --------------------------------- | ------------------------------------- |\n| `--fab-background-color`          | Background color                      |\n| `--fab-background-color-active`   | Background color if active            |\n| `--fab-background-color-disabled` | Background color if disabled          |\n| `--fab-background-color-hover`    | Background color on hover             |\n| `--fab-color-disabled`            | Text color if disabled                |\n| `--fab-icon-color`                | Color of the slotted icon             |\n| `--fab-icon-color-disabled`       | Color of the slotted icon if disabled |\n| `--ino-fab-color`                 | Text color                            |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-fab-set](../ino-fab-set)\n\n### Depends on\n\n- [ino-icon](../ino-icon)\n- [ino-tooltip](../ino-tooltip)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-fab --\x3e ino-icon\n  ino-fab --\x3e ino-tooltip\n  ino-fab-set --\x3e ino-fab\n  style ino-fab fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')]};var ino_fab_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-fab">\n    <h4>Customizable Fab</h4>\n     <style>\n          ino-fab.customizable-fab {\n            --ino-fab-color: '.concat(Object(dist.text)("--ino-fab-color","#ffffff","Custom Properties"),";\n            --ino-fab-background-color: ").concat(Object(dist.text)("--ino-fab-background-color","#3d40f5","Custom Properties"),";\n            --ino-fab-background-color-hover: ").concat(Object(dist.text)("--ino-fab-background-color-hover","#5d60f7","Custom Properties"),";\n            --ino-fab-background-color-active: ").concat(Object(dist.text)("--ino-fab-background-color-active","#0d10f3","Custom Properties"),";\n            --ino-fab-icon-color: ").concat(Object(dist.text)("--ino-fab-icon-color","#ffffff","Custom Properties"),";\n            --ino-fab-color-disabled: ").concat(Object(dist.text)("--ino-fab-color-disabled","#ffffff","Custom Properties"),";\n            --ino-fab-background-color-disabled: ").concat(Object(dist.text)("--ino-fab-background-color-disabled","#9d9d9d","Custom Properties"),";\n            --ino-fab-icon-color-disabled: ").concat(Object(dist.text)("--ino-fab-icon-color-disabled","#ffffff","Custom Properties"),';\n          }\n      </style>\n      <ino-fab\n        class="customizable-fab"\n      ino-edge-position="').concat(Object(dist.select)("ino-edge-position",["top-left","top-right","bottom-right","bottom-left","none"],"top-left"),'"\n      ino-icon="').concat(Object(dist.select)("ino-leading-icon",icons.a,"add"),'"\n      ino-label="').concat(Object(dist.text)("ino-label","Label"),'"\n      ino-extended="').concat(Object(dist.boolean)("ino-extended",!1),'"\n      ino-disabled="').concat(Object(dist.boolean)("ino-disabled",!1),'"\n      ino-mini="').concat(Object(dist.boolean)("ino-mini",!1),'"></ino-fab>\n\n    <h4>Variants</h4>\n      <div class="ino-fab-variants">\n        <ino-fab ino-tooltip-placement="none" ino-label="Default Fab" ino-icon="add"></ino-fab>\n        <ino-fab ino-mini ino-label="Mini Fab" ino-icon="add"></ino-fab>\n        <ino-fab ino-extended ino-label="Extended Button" ino-icon="add"></ino-fab>\n        <ino-fab ino-disabled ino-label="Disabled Button" ino-icon="add"></ino-fab>\n      </div>\n    </div>\n    <h4>Different Edge Positions</h4>\n    <div class="ino-fab-variants">\n       <ino-fab ino-label="top-left" ino-icon="add" ino-edge-position="top-left"></ino-fab>\n       <ino-fab ino-label="top-right" ino-icon="add" ino-edge-position="top-right"></ino-fab>\n       <ino-fab ino-label="bottom-right" ino-icon="add" ino-edge-position="bottom-right"></ino-fab>\n       <ino-fab ino-label="bottom-left" ino-icon="add" ino-edge-position="bottom-left"></ino-fab>\n       <ino-fab ino-label="none" ino-icon="add" ino-edge-position="none"></ino-fab>\n    </div>\n  ')}},1354:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_form_row_stories_DefaultUsage}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1278);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Input/<ino-form-row>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-form-row/readme.md\';\\nimport \'./ino-form-row.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-input\') {\\n      return;\\n    }\\n\\n    e.target.setAttribute(\'value\', e.detail);\\n  };\\n\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-form-row>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'valueChange .customizable-form-row\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-form-row\\">\\n      <div>\\n        <h4>Customizable Form Row</h4>\\n        <ino-form-row\\n          class=\\"customizable-form-row\\"\\n          ino-label=\\"${text(\'ino-label\', \'inovex-elements\')}\\"\\n          ino-mandatory=\\"${boolean(\'ino-mandatory\', true)}\\"\\n        >\\n          <ino-input></ino-input>\\n        </ino-form-row>\\n      </div>\\n    </div>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":45},"endLoc":{"col":3,"line":58},"startBody":{"col":28,"line":45},"endBody":{"col":3,"line":58}}};\n    \nimport { boolean, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-form-row/readme.md\';\nimport \'./ino-form-row.scss\';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-input\') {\n      return;\n    }\n\n    e.target.setAttribute(\'value\', e.detail);\n  };\n\n  document.addEventListener(\'valueChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'valueChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Input/<ino-form-row>\',\n  parameters: {"storySource":{"source":"import { boolean, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-form-row/readme.md\';\\nimport \'./ino-form-row.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-input\') {\\n      return;\\n    }\\n\\n    e.target.setAttribute(\'value\', e.detail);\\n  };\\n\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-form-row>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'valueChange .customizable-form-row\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-form-row\\">\\n      <div>\\n        <h4>Customizable Form Row</h4>\\n        <ino-form-row\\n          class=\\"customizable-form-row\\"\\n          ino-label=\\"${text(\'ino-label\', \'inovex-elements\')}\\"\\n          ino-mandatory=\\"${boolean(\'ino-mandatory\', true)}\\"\\n        >\\n          <ino-input></ino-input>\\n        </ino-form-row>\\n      </div>\\n    </div>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":45},"endLoc":{"col":3,"line":58},"startBody":{"col":28,"line":45},"endBody":{"col":3,"line":58}}}},\n    actions: {\n      handles: [\'valueChange .customizable-form-row\']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-form-row">\n      <div>\n        <h4>Customizable Form Row</h4>\n        <ino-form-row\n          class="customizable-form-row"\n          ino-label="${text(\'ino-label\', \'inovex-elements\')}"\n          ino-mandatory="${boolean(\'ino-mandatory\', true)}"\n        >\n          <ino-input></ino-input>\n        </ino-form-row>\n      </div>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:53},endLoc:{col:3,line:66},startBody:{col:28,line:53},endBody:{col:3,line:66}}}}},_defineProperty(_parameters,"storySource",{source:"import { boolean, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-form-row/readme.md';\nimport './ino-form-row.scss';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== 'ino-input') {\n      return;\n    }\n\n    e.target.setAttribute('value', e.detail);\n  };\n\n  document.addEventListener('valueChange', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('valueChange', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Input/<ino-form-row>',\n  parameters: {\n    actions: {\n      handles: ['valueChange .customizable-form-row']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class=\"story-form-row\">\n      <div>\n        <h4>Customizable Form Row</h4>\n        <ino-form-row\n          class=\"customizable-form-row\"\n          ino-label=\"${text('ino-label', 'inovex-elements')}\"\n          ino-mandatory=\"${boolean('ino-mandatory', true)}\"\n        >\n          <ino-input></ino-input>\n        </ino-form-row>\n      </div>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:45},endLoc:{col:3,line:58},startBody:{col:28,line:45},endBody:{col:3,line:58}}}}),_defineProperty(_parameters,"actions",{handles:["valueChange .customizable-form-row"]}),_parameters),decorators:[Object(with_stencil_readme.a)('# ino-form-row\n\nA component that styles a form element as a row with a leading label.\n\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-form-row ino-label="<string>" ino-mandatory>\n  Any desired form element\n</ino-form-row>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```jsx harmony\nimport { Component } from \'react\';\nimport { InoFormRow, InoInput } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoFormRow inoLabel="This is a form row" inoMandatory>\n        <InoInput></InoInput>\n      </InoFormRow>\n      <InoFormRow inoLabel="This is another form row" inoMandatory>\n        <InoInput></InoInput>\n      </InoFormRow>\n      <InoFormRow inoLabel="This is one more form row without mandatory field">\n        <InoInput></InoInput>\n      </InoFormRow>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```jsx harmony\nimport React, { Component } from \'react\';\nimport { InoFormRow, InoInput } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst FormRow: React.FunctionComponent<Components.InoFormRowAttributes> = props => {\n  const { inoLabel, inoMandatory } = props;\n\n  return <InoFormRow inoLabel={inoLabel} inoMandatory={inoMandatory}>{props.children}</InoFormRow>\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (<FormRow inoLabel="This is a form row" inoMandatory>\n      <InoInput></InoInput>\n    </FormRow>\n    <FormRow inoLabel="This is another form row" inoMandatory>\n      <InoInput></InoInput>\n    </FormRow>\n    <FormRow inoLabel="This is one more form row without mandatory field">\n      <InoInput></InoInput>\n    </FormRow>);\n  }\n}\n```\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property       | Attribute       | Description                                                                                                                                            | Type      | Default     |\n| -------------- | --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ | --------- | ----------- |\n| `inoLabel`     | `ino-label`     | The label for this form row which describes the form element.                                                                                          | `string`  | `undefined` |\n| `inoMandatory` | `ino-mandatory` | An indicator which marks the contents of the form row as mandatory. If you use this make sure you also check for the values in your application logic. | `boolean` | `undefined` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){"ino-input"===e.target.tagName.toLowerCase()&&e.target.setAttribute("value",e.detail)};return document.addEventListener("valueChange",eventHandler),function(){document.removeEventListener("valueChange",eventHandler)}}(),story()}]};var ino_form_row_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-form-row">\n      <div>\n        <h4>Customizable Form Row</h4>\n        <ino-form-row\n          class="customizable-form-row"\n          ino-label="'.concat(Object(dist.text)("ino-label","inovex-elements"),'"\n          ino-mandatory="').concat(Object(dist.boolean)("ino-mandatory",!0),'"\n        >\n          <ino-input></ino-input>\n        </ino-form-row>\n      </div>\n    </div>\n  ')}},1355:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_header_stories_DefaultUsage}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1280);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { text } from \'@storybook/addon-knobs\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-header/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport \'./ino-header.scss\';\\n\\nexport default {\\n  title: \'Structure/<ino-header>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-header\\">\\n      <ino-header ino-title=\\"${text(\'ino-title\', \'TEAM\')}\\"></ino-header>\\n    </div>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":13},"endLoc":{"col":3,"line":17},"startBody":{"col":28,"line":13},"endBody":{"col":3,"line":17}}};\n    \nimport { text } from \'@storybook/addon-knobs\';\n\nimport componentReadme from \'_local-elements/src/components/ino-header/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport \'./ino-header.scss\';\n\nexport default {parameters: {"storySource":{"source":"import { text } from \'@storybook/addon-knobs\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-header/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport \'./ino-header.scss\';\\n\\nexport default {\\n  title: \'Structure/<ino-header>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-header\\">\\n      <ino-header ino-title=\\"${text(\'ino-title\', \'TEAM\')}\\"></ino-header>\\n    </div>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":13},"endLoc":{"col":3,"line":17},"startBody":{"col":28,"line":13},"endBody":{"col":3,"line":17}}}},},\n  title: \'Structure/<ino-header>\',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-header">\n      <ino-header ino-title="${text(\'ino-title\', \'TEAM\')}"></ino-header>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:21},endLoc:{col:3,line:25},startBody:{col:28,line:21},endBody:{col:3,line:25}}}}},"storySource",{source:"import { text } from '@storybook/addon-knobs';\n\nimport componentReadme from '_local-elements/src/components/ino-header/readme.md';\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport './ino-header.scss';\n\nexport default {\n  title: 'Structure/<ino-header>',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class=\"story-header\">\n      <ino-header ino-title=\"${text('ino-title', 'TEAM')}\"></ino-header>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:13},endLoc:{col:3,line:17},startBody:{col:28,line:13},endBody:{col:3,line:17}}}}),title:"Structure/<ino-header>",decorators:[Object(with_stencil_readme.a)("# ino-header\n\nA header component with a separator.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```html\n<ino-header ino-title=\"<string>\"></ino-header>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from 'react';\nimport { InoHeader } from '@inovex.de/elements-react/';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoCard inoTitle=\"My awesome header!\"></InoCard>\n    );\n  }\n}\n```\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                | Attribute   | Description             | Type     | Default     |\n| ----------------------- | ----------- | ----------------------- | -------- | ----------- |\n| `inoTitle` _(required)_ | `ino-title` | The text of this header | `string` | `undefined` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n")]};var ino_header_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-header">\n      <ino-header ino-title="'.concat(Object(dist.text)("ino-title","TEAM"),'"></ino-header>\n    </div>\n  ')}},1356:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_icon_button_stories_DefaultUsage}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2),findElementUpwards=__webpack_require__(168),icons=(__webpack_require__(1282),__webpack_require__(23));function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}icons.a.push("");__webpack_exports__.default={title:"Buttons/<ino-icon-button>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, select } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport findElementUpwards from \'../../core/helpers/findElementUpwards\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-icon-button/readme.md\';\\nimport \'./ino-icon-button.scss\';\\n\\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\\n\\nICONS.push(\'\'); // additionally: allow no icon\\n\\nconst eventToListen = \'click\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = findElementUpwards(e.target, \'ino-icon-button\', \'custom\');\\n\\n    if (!el) {\\n      return;\\n    }\\n\\n    const checkedIcons = [\'star\', \'favorite\'];\\n    const uncheckedIcons = checkedIcons.map((icon) => `${icon}`);\\n\\n    const elementIcon = el.getAttribute(\'ino-icon\');\\n\\n    const newIcon = checkedIcons.includes(elementIcon)\\n      ? `${elementIcon}`\\n      : uncheckedIcons.includes(elementIcon)\\n      ? elementIcon.substring(0, elementIcon.indexOf(\'_\'))\\n      : elementIcon;\\n\\n    el.setAttribute(\'ino-icon\', newIcon);\\n  };\\n  // == event block\\n\\n  document.addEventListener(eventToListen, eventHandler);\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(eventToListen, eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Buttons/<ino-icon-button>\',\\n  parameters: {\\n    actions: {\\n      handles: [`${eventToListen} .customizable-icon-button ino-icon-button`]\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-icon-button\\">\\n      <div class=\\"customizable-icon-button\\">\\n        <h4>Customizable icon button</h4>\\n        <ino-icon-button\\n          class=\\"custom\\"\\n          ino-icon=\\"${select(\'ino-icon\', ICONS, \'star\')}\\"\\n          ino-color-scheme=\\"${select(\\n            \'ino-color-scheme\',\\n            [\'\', \'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\\n            \'\'\\n          )}\\"\\n          disabled=\\"${boolean(\'disabled\', false)}\\">\\n        </ino-icon-button>\\n      </div>\\n\\n      <h4>Colors</h4>\\n      <div class=\\"flex-parent-center\\">\\n        <div class=\\"flex-child\\">\\n          <h5>Primary</h5>\\n          <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"primary\\"></ino-icon-button>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>Secondary</h5>\\n          <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"secondary\\"></ino-icon-button>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>Success</h5>\\n          <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"success\\"></ino-icon-button>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>Warning</h5>\\n          <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"warning\\"></ino-icon-button>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>Error</h5>\\n          <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"error\\"></ino-icon-button>\\n        </div>\\n      </div>\\n    </div>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":64},"endLoc":{"col":3,"line":104},"startBody":{"col":28,"line":64},"endBody":{"col":3,"line":104}}};\n    \nimport { boolean, select } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport findElementUpwards from \'../../core/helpers/findElementUpwards\';\n\nimport componentReadme from \'_local-elements/src/components/ino-icon-button/readme.md\';\nimport \'./ino-icon-button.scss\';\n\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\n\nICONS.push(\'\'); // additionally: allow no icon\n\nconst eventToListen = \'click\';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = findElementUpwards(e.target, \'ino-icon-button\', \'custom\');\n\n    if (!el) {\n      return;\n    }\n\n    const checkedIcons = [\'star\', \'favorite\'];\n    const uncheckedIcons = checkedIcons.map((icon) => `${icon}`);\n\n    const elementIcon = el.getAttribute(\'ino-icon\');\n\n    const newIcon = checkedIcons.includes(elementIcon)\n      ? `${elementIcon}`\n      : uncheckedIcons.includes(elementIcon)\n      ? elementIcon.substring(0, elementIcon.indexOf(\'_\'))\n      : elementIcon;\n\n    el.setAttribute(\'ino-icon\', newIcon);\n  };\n  // == event block\n\n  document.addEventListener(eventToListen, eventHandler);\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(eventToListen, eventHandler);\n  };\n}\n\nexport default {\n  title: \'Buttons/<ino-icon-button>\',\n  parameters: {"storySource":{"source":"import { boolean, select } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport findElementUpwards from \'../../core/helpers/findElementUpwards\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-icon-button/readme.md\';\\nimport \'./ino-icon-button.scss\';\\n\\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\\n\\nICONS.push(\'\'); // additionally: allow no icon\\n\\nconst eventToListen = \'click\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = findElementUpwards(e.target, \'ino-icon-button\', \'custom\');\\n\\n    if (!el) {\\n      return;\\n    }\\n\\n    const checkedIcons = [\'star\', \'favorite\'];\\n    const uncheckedIcons = checkedIcons.map((icon) => `${icon}`);\\n\\n    const elementIcon = el.getAttribute(\'ino-icon\');\\n\\n    const newIcon = checkedIcons.includes(elementIcon)\\n      ? `${elementIcon}`\\n      : uncheckedIcons.includes(elementIcon)\\n      ? elementIcon.substring(0, elementIcon.indexOf(\'_\'))\\n      : elementIcon;\\n\\n    el.setAttribute(\'ino-icon\', newIcon);\\n  };\\n  // == event block\\n\\n  document.addEventListener(eventToListen, eventHandler);\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(eventToListen, eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Buttons/<ino-icon-button>\',\\n  parameters: {\\n    actions: {\\n      handles: [`${eventToListen} .customizable-icon-button ino-icon-button`]\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-icon-button\\">\\n      <div class=\\"customizable-icon-button\\">\\n        <h4>Customizable icon button</h4>\\n        <ino-icon-button\\n          class=\\"custom\\"\\n          ino-icon=\\"${select(\'ino-icon\', ICONS, \'star\')}\\"\\n          ino-color-scheme=\\"${select(\\n            \'ino-color-scheme\',\\n            [\'\', \'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\\n            \'\'\\n          )}\\"\\n          disabled=\\"${boolean(\'disabled\', false)}\\">\\n        </ino-icon-button>\\n      </div>\\n\\n      <h4>Colors</h4>\\n      <div class=\\"flex-parent-center\\">\\n        <div class=\\"flex-child\\">\\n          <h5>Primary</h5>\\n          <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"primary\\"></ino-icon-button>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>Secondary</h5>\\n          <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"secondary\\"></ino-icon-button>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>Success</h5>\\n          <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"success\\"></ino-icon-button>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>Warning</h5>\\n          <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"warning\\"></ino-icon-button>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>Error</h5>\\n          <ino-icon-button ino-icon=\\"star\\" ino-color-scheme=\\"error\\"></ino-icon-button>\\n        </div>\\n      </div>\\n    </div>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":64},"endLoc":{"col":3,"line":104},"startBody":{"col":28,"line":64},"endBody":{"col":3,"line":104}}}},\n    actions: {\n      handles: [`${eventToListen} .customizable-icon-button ino-icon-button`]\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-icon-button">\n      <div class="customizable-icon-button">\n        <h4>Customizable icon button</h4>\n        <ino-icon-button\n          class="custom"\n          ino-icon="${select(\'ino-icon\', ICONS, \'star\')}"\n          ino-color-scheme="${select(\n            \'ino-color-scheme\',\n            [\'\', \'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\n            \'\'\n          )}"\n          disabled="${boolean(\'disabled\', false)}">\n        </ino-icon-button>\n      </div>\n\n      <h4>Colors</h4>\n      <div class="flex-parent-center">\n        <div class="flex-child">\n          <h5>Primary</h5>\n          <ino-icon-button ino-icon="star" ino-color-scheme="primary"></ino-icon-button>\n        </div>\n        <div class="flex-child">\n          <h5>Secondary</h5>\n          <ino-icon-button ino-icon="star" ino-color-scheme="secondary"></ino-icon-button>\n        </div>\n        <div class="flex-child">\n          <h5>Success</h5>\n          <ino-icon-button ino-icon="star" ino-color-scheme="success"></ino-icon-button>\n        </div>\n        <div class="flex-child">\n          <h5>Warning</h5>\n          <ino-icon-button ino-icon="star" ino-color-scheme="warning"></ino-icon-button>\n        </div>\n        <div class="flex-child">\n          <h5>Error</h5>\n          <ino-icon-button ino-icon="star" ino-color-scheme="error"></ino-icon-button>\n        </div>\n      </div>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:72},endLoc:{col:3,line:112},startBody:{col:28,line:72},endBody:{col:3,line:112}}}}},_defineProperty(_parameters,"storySource",{source:"import { boolean, select } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\nimport findElementUpwards from '../../core/helpers/findElementUpwards';\n\nimport componentReadme from '_local-elements/src/components/ino-icon-button/readme.md';\nimport './ino-icon-button.scss';\n\nimport ICONS from '_local-elements/src/components/ino-icon/icons';\n\nICONS.push(''); // additionally: allow no icon\n\nconst eventToListen = 'click';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = findElementUpwards(e.target, 'ino-icon-button', 'custom');\n\n    if (!el) {\n      return;\n    }\n\n    const checkedIcons = ['star', 'favorite'];\n    const uncheckedIcons = checkedIcons.map((icon) => `${icon}`);\n\n    const elementIcon = el.getAttribute('ino-icon');\n\n    const newIcon = checkedIcons.includes(elementIcon)\n      ? `${elementIcon}`\n      : uncheckedIcons.includes(elementIcon)\n      ? elementIcon.substring(0, elementIcon.indexOf('_'))\n      : elementIcon;\n\n    el.setAttribute('ino-icon', newIcon);\n  };\n  // == event block\n\n  document.addEventListener(eventToListen, eventHandler);\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(eventToListen, eventHandler);\n  };\n}\n\nexport default {\n  title: 'Buttons/<ino-icon-button>',\n  parameters: {\n    actions: {\n      handles: [`${eventToListen} .customizable-icon-button ino-icon-button`]\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class=\"story-icon-button\">\n      <div class=\"customizable-icon-button\">\n        <h4>Customizable icon button</h4>\n        <ino-icon-button\n          class=\"custom\"\n          ino-icon=\"${select('ino-icon', ICONS, 'star')}\"\n          ino-color-scheme=\"${select(\n            'ino-color-scheme',\n            ['', 'primary', 'secondary', 'success', 'warning', 'error', 'light', 'dark'],\n            ''\n          )}\"\n          disabled=\"${boolean('disabled', false)}\">\n        </ino-icon-button>\n      </div>\n\n      <h4>Colors</h4>\n      <div class=\"flex-parent-center\">\n        <div class=\"flex-child\">\n          <h5>Primary</h5>\n          <ino-icon-button ino-icon=\"star\" ino-color-scheme=\"primary\"></ino-icon-button>\n        </div>\n        <div class=\"flex-child\">\n          <h5>Secondary</h5>\n          <ino-icon-button ino-icon=\"star\" ino-color-scheme=\"secondary\"></ino-icon-button>\n        </div>\n        <div class=\"flex-child\">\n          <h5>Success</h5>\n          <ino-icon-button ino-icon=\"star\" ino-color-scheme=\"success\"></ino-icon-button>\n        </div>\n        <div class=\"flex-child\">\n          <h5>Warning</h5>\n          <ino-icon-button ino-icon=\"star\" ino-color-scheme=\"warning\"></ino-icon-button>\n        </div>\n        <div class=\"flex-child\">\n          <h5>Error</h5>\n          <ino-icon-button ino-icon=\"star\" ino-color-scheme=\"error\"></ino-icon-button>\n        </div>\n      </div>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:64},endLoc:{col:3,line:104},startBody:{col:28,line:64},endBody:{col:3,line:104}}}}),_defineProperty(_parameters,"actions",{handles:["".concat("click"," .customizable-icon-button ino-icon-button")]}),_parameters),decorators:[Object(with_stencil_readme.a)('# ino-icon-button\n\nA rounded button component that contains an icon. It functions as a wrapper around the material [icon-button](https://github.com/material-components/material-components-web/tree/master/packages/mdc-icon-button) component.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector(\'ino-icon-button\')\n  .addEventListener(\'click\', _ => alert(\'The icon button was clicked\'));\n```\n\n```html\n<ino-icon-button\n  autofocus\n  disabled\n  ino-color-scheme="<string>"\n  ino-icon="<string>"\n>\n</ino-icon-button>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoIconButton } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  handleClick = (e: any) => {\n    alert(`IconButton was clicked`);\n  };\n\n  render() {\n    return <InoIconButton inoIcon="search" onClick={handleClick} />;\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoIconButton } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst IconButton: React.FunctionComponent<Components.InoIconButtonAttributes> = props => {\n  const { inoIcon } = props;\n\n  const handleClick = (e: any) => {\n    alert(`IconButton was clicked`);\n  };\n\n  return (\n    <InoIconButton inoIcon={inoIcon} onClick={handleClick}>\n      {props.children}\n    </InoIconButton>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return <IconButton inoIcon="search" />;\n  }\n}\n```\n\n## Additional Hints\n\n**Toggle Button**: To use the ino-icon-button as a toggle button the user can listen to the native `click`-Event and change the icon in `ino-icon`-Attribute.\n\n### Native Events\n\nThe component bubbles the native `click`-Event to the user.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property         | Attribute          | Description                                                                                                                                                                                           | Type                                                                                 | Default     |\n| ---------------- | ------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ | ----------- |\n| `autoFocus`      | `autofocus`        | Sets the autofocus for this element.                                                                                                                                                                  | `boolean`                                                                            | `undefined` |\n| `disabled`       | `disabled`         | Disables this element.                                                                                                                                                                                | `boolean`                                                                            | `undefined` |\n| `inoColorScheme` | `ino-color-scheme` | The name of the color scheme which is used to style the background and outline of this component. Possible values: `primary` (default),  `secondary`, `success`, `warning`, `error`, `light`, `dark`. | `"dark" \\| "error" \\| "light" \\| "primary" \\| "secondary" \\| "success" \\| "warning"` | `\'primary\'` |\n| `inoIcon`        | `ino-icon`         | The name of the icon of this element.                                                                                                                                                                 | `string`                                                                             | `undefined` |\n\n\n## Events\n\n| Event     | Description | Type               |\n| --------- | ----------- | ------------------ |\n| `clickEl` |             | `CustomEvent<any>` |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-nav-drawer](../ino-nav-drawer)\n - [ino-snackbar](../ino-snackbar)\n\n### Depends on\n\n- [ino-icon](../ino-icon)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-icon-button --\x3e ino-icon\n  ino-nav-drawer --\x3e ino-icon-button\n  ino-snackbar --\x3e ino-icon-button\n  style ino-icon-button fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=Object(findElementUpwards.a)(e.target,"ino-icon-button","custom");if(el){var checkedIcons=["star","favorite"],uncheckedIcons=checkedIcons.map((function(icon){return"".concat(icon)})),elementIcon=el.getAttribute("ino-icon"),newIcon=checkedIcons.includes(elementIcon)?"".concat(elementIcon):uncheckedIcons.includes(elementIcon)?elementIcon.substring(0,elementIcon.indexOf("_")):elementIcon;el.setAttribute("ino-icon",newIcon)}};return document.addEventListener("click",eventHandler),function(){document.removeEventListener("click",eventHandler)}}(),story()}]};var ino_icon_button_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-icon-button">\n      <div class="customizable-icon-button">\n        <h4>Customizable icon button</h4>\n        <ino-icon-button\n          class="custom"\n          ino-icon="'.concat(Object(dist.select)("ino-icon",icons.a,"star"),'"\n          ino-color-scheme="').concat(Object(dist.select)("ino-color-scheme",["","primary","secondary","success","warning","error","light","dark"],""),'"\n          disabled="').concat(Object(dist.boolean)("disabled",!1),'">\n        </ino-icon-button>\n      </div>\n\n      <h4>Colors</h4>\n      <div class="flex-parent-center">\n        <div class="flex-child">\n          <h5>Primary</h5>\n          <ino-icon-button ino-icon="star" ino-color-scheme="primary"></ino-icon-button>\n        </div>\n        <div class="flex-child">\n          <h5>Secondary</h5>\n          <ino-icon-button ino-icon="star" ino-color-scheme="secondary"></ino-icon-button>\n        </div>\n        <div class="flex-child">\n          <h5>Success</h5>\n          <ino-icon-button ino-icon="star" ino-color-scheme="success"></ino-icon-button>\n        </div>\n        <div class="flex-child">\n          <h5>Warning</h5>\n          <ino-icon-button ino-icon="star" ino-color-scheme="warning"></ino-icon-button>\n        </div>\n        <div class="flex-child">\n          <h5>Error</h5>\n          <ino-icon-button ino-icon="star" ino-color-scheme="error"></ino-icon-button>\n        </div>\n      </div>\n    </div>\n  ')}},1357:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_icon_stories_DefaultUsage}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2),icons=(__webpack_require__(1284),__webpack_require__(23)),findElementUpwards=__webpack_require__(168);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;if("ino-input"===el.tagName.toLowerCase()){var value=e.detail,chips=Array.from(document.getElementsByTagName("ino-chip"));chips.filter((function(chip){return!chip.getAttribute("ino-icon").includes(value)})).forEach((function(chip){return chip.style.display="none"})),chips.filter((function(chip){return chip.getAttribute("ino-icon").includes(value)})).forEach((function(chip){return chip.style.display="block"})),el.value=value}},chipClickHandler=function chipClickHandler(e){var inoChip=Object(findElementUpwards.a)(e.target,"ino-chip","hydrated");inoChip&&function copyToClipboard(text){document.addEventListener("copy",(function setData(e){e.preventDefault(),e.clipboardData.setData("text/plain",text),document.removeEventListener("copy",setData)}));var snackbar=document.createElement("ino-snackbar");try{document.execCommand("copy"),snackbar.setAttribute("ino-message",'Successfully copied "'.concat(text,'" to your clipboard!'))}catch(err){snackbar.setAttribute("ino-message","An error occurred while copying the id to your clipboard!")}finally{document.body.appendChild(snackbar)}}(inoChip.getAttribute("ino-label"))},hideHandler=function hideHandler(e){document.body.removeChild(e.target)};return document.addEventListener("click",chipClickHandler),document.addEventListener("valueChange",eventHandler),document.addEventListener("hideEl",hideHandler),function(){document.removeEventListener("valueChange",eventHandler),document.removeEventListener("click",chipClickHandler),document.removeEventListener("hideEl",hideHandler)}}var ICON_IDS=icons.a.filter((function(icon){return!icon.startsWith("_")})).sort().filter((function(name){return name.length>=1})),iconChips=ICON_IDS.map((function(name){return'\n             <div>\n              <ino-chip\n                id="icon-'.concat(name,'"\n                ino-label="').concat(name,'"\n                ino-icon="').concat(name,'"\n                ino-fill="outline"\n               >\n               </ino-chip>\n               <ino-tooltip ino-for="icon-').concat(name,'" ino-label="Click to copy ').concat(name,' to your clipboard" ino-placement="top" ino-trigger="hover focus" />\n               </div>\n            ')})).join().replace(/,/g,""),ino_icon_stories_DefaultUsage=(__webpack_exports__.default={title:"Graphic/<ino-icon>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-icon/readme.md\';\\nimport \'./ino-icon.scss\';\\n\\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\\nimport findElementUpwards from \'../../core/helpers/findElementUpwards\';\\n\\nconst ICONS_WITHOUT_INTERNALS = ICONS.filter((icon) => !icon.startsWith(\'_\'));\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-input\') {\\n      return;\\n    }\\n\\n    const value = e.detail;\\n    const chips = Array.from(document.getElementsByTagName(\'ino-chip\'));\\n\\n    chips\\n      .filter((chip) => !chip.getAttribute(\'ino-icon\').includes(value))\\n      .forEach((chip) => (chip.style.display = \'none\'));\\n\\n    chips\\n      .filter((chip) => chip.getAttribute(\'ino-icon\').includes(value))\\n      .forEach((chip) => (chip.style.display = \'block\'));\\n\\n    el.value = value;\\n  };\\n\\n  const chipClickHandler = function (e) {\\n    const inoChip = findElementUpwards(e.target, \'ino-chip\', \'hydrated\');\\n\\n    if (!inoChip) return;\\n\\n    copyToClipboard(inoChip.getAttribute(\'ino-label\'));\\n  };\\n\\n  const hideHandler = function (e) {\\n    document.body.removeChild(e.target);\\n  };\\n\\n  document.addEventListener(\'click\', chipClickHandler);\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  document.addEventListener(\'hideEl\', hideHandler);\\n\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n    document.removeEventListener(\'click\', chipClickHandler);\\n    document.removeEventListener(\'hideEl\', hideHandler);\\n  };\\n}\\n\\nfunction copyToClipboard(text) {\\n  function setData(e) {\\n    e.preventDefault();\\n    e.clipboardData.setData(\'text/plain\', text);\\n    document.removeEventListener(\'copy\', setData);\\n  }\\n  document.addEventListener(\'copy\', setData);\\n\\n  const snackbar = document.createElement(\'ino-snackbar\');\\n\\n  try {\\n    document.execCommand(\'copy\');\\n    snackbar.setAttribute(\'ino-message\', `Successfully copied \\"${text}\\" to your clipboard!`);\\n  } catch (err) {\\n    snackbar.setAttribute(\\n      \'ino-message\',\\n      `An error occurred while copying the id to your clipboard!`\\n    );\\n  } finally {\\n    document.body.appendChild(snackbar);\\n  }\\n}\\n\\nconst ICON_IDS = ICONS_WITHOUT_INTERNALS.sort().filter((name) => name.length >= 1);\\n\\nconst iconChips = ICON_IDS.map(\\n  (name) => /*html*/ `\\n             <div>\\n              <ino-chip\\n                id=\\"icon-${name}\\"\\n                ino-label=\\"${name}\\"\\n                ino-icon=\\"${name}\\"\\n                ino-fill=\\"outline\\"\\n               >\\n               </ino-chip>\\n               <ino-tooltip ino-for=\\"icon-${name}\\" ino-label=\\"Click to copy ${name} to your clipboard\\" ino-placement=\\"top\\" ino-trigger=\\"hover focus\\" />\\n               </div>\\n            `\\n)\\n  .join()\\n  .replace(/,/g, \'\'); // Remove commas\\n\\nexport default {\\n  title: \'Graphic/<ino-icon>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'clickEl .customizable-icon\', \'valueChange .customizable-input\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-icon\\">\\n<style>\\n  .customizable-icon {\\n    --ino-icon-color-primary: ${text(\'--ino-icon-color-primary\', \'#3d40f5\')};\\n  }\\n</style>\\n<div class=\\"flex-parent-center\\">\\n  <div class=\\"flex-child\\">\\n      <h4>Customizable Icon</h4>\\n      <div class=\\"flex-icons\\">\\n        <ino-icon\\n          class=\\"customizable-icon\\"\\n          ino-icon=\\"${select(\'ino-icon\', ICON_IDS, \'info\')}\\"\\n          ino-clickable=\\"${boolean(\'ino-clickable\', false)}\\"\\n          svg-title=\\"This is a custom title\\"\\n        >\\n        </ino-icon>\\n      </div>\\n</div>\\n<div class=\\"flex-parent-center\\">\\n  <h4>Primary und Secondary Icons</h4>\\n  <div class=\\"flex-icons\\">\\n        <ino-icon\\n            id=\\"primary-icon\\"\\n            class=\\"preview-icon\\"\\n            ino-icon=\\"info\\"\\n            ino-color-secondary=\\"false\\"\\n        >\\n        </ino-icon>\\n        <ino-tooltip\\n            ino-for=\\"primary-icon\\"\\n            ino-trigger=\\"hover\\"\\n            ino-label=\\"I\'m the default icon\\"\\n            ino-placement=\\"left\\"\\n        ></ino-tooltip>\\n        <ino-icon\\n            id=\\"secondary-icon\\"\\n            class=\\"preview-icon\\"\\n            ino-icon=\\"info\\"\\n            ino-color-secondary=\\"true\\"\\n        >\\n        </ino-icon>\\n        <ino-tooltip\\n            ino-for=\\"secondary-icon\\"\\n            ino-trigger=\\"hover\\"\\n            ino-label=\\"I\'m the secondary icon (ino-color-secondary=true)\\"\\n            ino-placement=\\"right\\"\\n        ></ino-tooltip>\\n      </div>\\n</div>\\n<div class=\\"flex-parent-center\\">\\n  <h4 style=\\"margin-bottom: 0\\">Different Icons</h4>\\n  <ino-input class=\\"customizable-input\\" ino-icon-leading>\\n      <ino-icon slot=\\"ino-icon-leading\\" ino-icon=\\"search\\"></ino-icon>\\n  </ino-input>\\n  <ino-chip-set class=\\"icon-collection\\">\\n    ${iconChips}\\n  </ino-chip-set>\\n</div>\\n</div>\\n</div>\\n`;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":120},"endLoc":{"col":1,"line":182},"startBody":{"col":28,"line":120},"endBody":{"col":1,"line":182}}};\n    \nimport { boolean, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-icon/readme.md\';\nimport \'./ino-icon.scss\';\n\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\nimport findElementUpwards from \'../../core/helpers/findElementUpwards\';\n\nconst ICONS_WITHOUT_INTERNALS = ICONS.filter((icon) => !icon.startsWith(\'_\'));\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-input\') {\n      return;\n    }\n\n    const value = e.detail;\n    const chips = Array.from(document.getElementsByTagName(\'ino-chip\'));\n\n    chips\n      .filter((chip) => !chip.getAttribute(\'ino-icon\').includes(value))\n      .forEach((chip) => (chip.style.display = \'none\'));\n\n    chips\n      .filter((chip) => chip.getAttribute(\'ino-icon\').includes(value))\n      .forEach((chip) => (chip.style.display = \'block\'));\n\n    el.value = value;\n  };\n\n  const chipClickHandler = function (e) {\n    const inoChip = findElementUpwards(e.target, \'ino-chip\', \'hydrated\');\n\n    if (!inoChip) return;\n\n    copyToClipboard(inoChip.getAttribute(\'ino-label\'));\n  };\n\n  const hideHandler = function (e) {\n    document.body.removeChild(e.target);\n  };\n\n  document.addEventListener(\'click\', chipClickHandler);\n  document.addEventListener(\'valueChange\', eventHandler);\n  document.addEventListener(\'hideEl\', hideHandler);\n\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'valueChange\', eventHandler);\n    document.removeEventListener(\'click\', chipClickHandler);\n    document.removeEventListener(\'hideEl\', hideHandler);\n  };\n}\n\nfunction copyToClipboard(text) {\n  function setData(e) {\n    e.preventDefault();\n    e.clipboardData.setData(\'text/plain\', text);\n    document.removeEventListener(\'copy\', setData);\n  }\n  document.addEventListener(\'copy\', setData);\n\n  const snackbar = document.createElement(\'ino-snackbar\');\n\n  try {\n    document.execCommand(\'copy\');\n    snackbar.setAttribute(\'ino-message\', `Successfully copied "${text}" to your clipboard!`);\n  } catch (err) {\n    snackbar.setAttribute(\n      \'ino-message\',\n      `An error occurred while copying the id to your clipboard!`\n    );\n  } finally {\n    document.body.appendChild(snackbar);\n  }\n}\n\nconst ICON_IDS = ICONS_WITHOUT_INTERNALS.sort().filter((name) => name.length >= 1);\n\nconst iconChips = ICON_IDS.map(\n  (name) => /*html*/ `\n             <div>\n              <ino-chip\n                id="icon-${name}"\n                ino-label="${name}"\n                ino-icon="${name}"\n                ino-fill="outline"\n               >\n               </ino-chip>\n               <ino-tooltip ino-for="icon-${name}" ino-label="Click to copy ${name} to your clipboard" ino-placement="top" ino-trigger="hover focus" />\n               </div>\n            `\n)\n  .join()\n  .replace(/,/g, \'\'); // Remove commas\n\nexport default {\n  title: \'Graphic/<ino-icon>\',\n  parameters: {"storySource":{"source":"import { boolean, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-icon/readme.md\';\\nimport \'./ino-icon.scss\';\\n\\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\\nimport findElementUpwards from \'../../core/helpers/findElementUpwards\';\\n\\nconst ICONS_WITHOUT_INTERNALS = ICONS.filter((icon) => !icon.startsWith(\'_\'));\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-input\') {\\n      return;\\n    }\\n\\n    const value = e.detail;\\n    const chips = Array.from(document.getElementsByTagName(\'ino-chip\'));\\n\\n    chips\\n      .filter((chip) => !chip.getAttribute(\'ino-icon\').includes(value))\\n      .forEach((chip) => (chip.style.display = \'none\'));\\n\\n    chips\\n      .filter((chip) => chip.getAttribute(\'ino-icon\').includes(value))\\n      .forEach((chip) => (chip.style.display = \'block\'));\\n\\n    el.value = value;\\n  };\\n\\n  const chipClickHandler = function (e) {\\n    const inoChip = findElementUpwards(e.target, \'ino-chip\', \'hydrated\');\\n\\n    if (!inoChip) return;\\n\\n    copyToClipboard(inoChip.getAttribute(\'ino-label\'));\\n  };\\n\\n  const hideHandler = function (e) {\\n    document.body.removeChild(e.target);\\n  };\\n\\n  document.addEventListener(\'click\', chipClickHandler);\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  document.addEventListener(\'hideEl\', hideHandler);\\n\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n    document.removeEventListener(\'click\', chipClickHandler);\\n    document.removeEventListener(\'hideEl\', hideHandler);\\n  };\\n}\\n\\nfunction copyToClipboard(text) {\\n  function setData(e) {\\n    e.preventDefault();\\n    e.clipboardData.setData(\'text/plain\', text);\\n    document.removeEventListener(\'copy\', setData);\\n  }\\n  document.addEventListener(\'copy\', setData);\\n\\n  const snackbar = document.createElement(\'ino-snackbar\');\\n\\n  try {\\n    document.execCommand(\'copy\');\\n    snackbar.setAttribute(\'ino-message\', `Successfully copied \\"${text}\\" to your clipboard!`);\\n  } catch (err) {\\n    snackbar.setAttribute(\\n      \'ino-message\',\\n      `An error occurred while copying the id to your clipboard!`\\n    );\\n  } finally {\\n    document.body.appendChild(snackbar);\\n  }\\n}\\n\\nconst ICON_IDS = ICONS_WITHOUT_INTERNALS.sort().filter((name) => name.length >= 1);\\n\\nconst iconChips = ICON_IDS.map(\\n  (name) => /*html*/ `\\n             <div>\\n              <ino-chip\\n                id=\\"icon-${name}\\"\\n                ino-label=\\"${name}\\"\\n                ino-icon=\\"${name}\\"\\n                ino-fill=\\"outline\\"\\n               >\\n               </ino-chip>\\n               <ino-tooltip ino-for=\\"icon-${name}\\" ino-label=\\"Click to copy ${name} to your clipboard\\" ino-placement=\\"top\\" ino-trigger=\\"hover focus\\" />\\n               </div>\\n            `\\n)\\n  .join()\\n  .replace(/,/g, \'\'); // Remove commas\\n\\nexport default {\\n  title: \'Graphic/<ino-icon>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'clickEl .customizable-icon\', \'valueChange .customizable-input\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-icon\\">\\n<style>\\n  .customizable-icon {\\n    --ino-icon-color-primary: ${text(\'--ino-icon-color-primary\', \'#3d40f5\')};\\n  }\\n</style>\\n<div class=\\"flex-parent-center\\">\\n  <div class=\\"flex-child\\">\\n      <h4>Customizable Icon</h4>\\n      <div class=\\"flex-icons\\">\\n        <ino-icon\\n          class=\\"customizable-icon\\"\\n          ino-icon=\\"${select(\'ino-icon\', ICON_IDS, \'info\')}\\"\\n          ino-clickable=\\"${boolean(\'ino-clickable\', false)}\\"\\n          svg-title=\\"This is a custom title\\"\\n        >\\n        </ino-icon>\\n      </div>\\n</div>\\n<div class=\\"flex-parent-center\\">\\n  <h4>Primary und Secondary Icons</h4>\\n  <div class=\\"flex-icons\\">\\n        <ino-icon\\n            id=\\"primary-icon\\"\\n            class=\\"preview-icon\\"\\n            ino-icon=\\"info\\"\\n            ino-color-secondary=\\"false\\"\\n        >\\n        </ino-icon>\\n        <ino-tooltip\\n            ino-for=\\"primary-icon\\"\\n            ino-trigger=\\"hover\\"\\n            ino-label=\\"I\'m the default icon\\"\\n            ino-placement=\\"left\\"\\n        ></ino-tooltip>\\n        <ino-icon\\n            id=\\"secondary-icon\\"\\n            class=\\"preview-icon\\"\\n            ino-icon=\\"info\\"\\n            ino-color-secondary=\\"true\\"\\n        >\\n        </ino-icon>\\n        <ino-tooltip\\n            ino-for=\\"secondary-icon\\"\\n            ino-trigger=\\"hover\\"\\n            ino-label=\\"I\'m the secondary icon (ino-color-secondary=true)\\"\\n            ino-placement=\\"right\\"\\n        ></ino-tooltip>\\n      </div>\\n</div>\\n<div class=\\"flex-parent-center\\">\\n  <h4 style=\\"margin-bottom: 0\\">Different Icons</h4>\\n  <ino-input class=\\"customizable-input\\" ino-icon-leading>\\n      <ino-icon slot=\\"ino-icon-leading\\" ino-icon=\\"search\\"></ino-icon>\\n  </ino-input>\\n  <ino-chip-set class=\\"icon-collection\\">\\n    ${iconChips}\\n  </ino-chip-set>\\n</div>\\n</div>\\n</div>\\n`;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":120},"endLoc":{"col":1,"line":182},"startBody":{"col":28,"line":120},"endBody":{"col":1,"line":182}}}},\n    actions: {\n      handles: [\'clickEl .customizable-icon\', \'valueChange .customizable-input\']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-icon">\n<style>\n  .customizable-icon {\n    --ino-icon-color-primary: ${text(\'--ino-icon-color-primary\', \'#3d40f5\')};\n  }\n</style>\n<div class="flex-parent-center">\n  <div class="flex-child">\n      <h4>Customizable Icon</h4>\n      <div class="flex-icons">\n        <ino-icon\n          class="customizable-icon"\n          ino-icon="${select(\'ino-icon\', ICON_IDS, \'info\')}"\n          ino-clickable="${boolean(\'ino-clickable\', false)}"\n          svg-title="This is a custom title"\n        >\n        </ino-icon>\n      </div>\n</div>\n<div class="flex-parent-center">\n  <h4>Primary und Secondary Icons</h4>\n  <div class="flex-icons">\n        <ino-icon\n            id="primary-icon"\n            class="preview-icon"\n            ino-icon="info"\n            ino-color-secondary="false"\n        >\n        </ino-icon>\n        <ino-tooltip\n            ino-for="primary-icon"\n            ino-trigger="hover"\n            ino-label="I\'m the default icon"\n            ino-placement="left"\n        ></ino-tooltip>\n        <ino-icon\n            id="secondary-icon"\n            class="preview-icon"\n            ino-icon="info"\n            ino-color-secondary="true"\n        >\n        </ino-icon>\n        <ino-tooltip\n            ino-for="secondary-icon"\n            ino-trigger="hover"\n            ino-label="I\'m the secondary icon (ino-color-secondary=true)"\n            ino-placement="right"\n        ></ino-tooltip>\n      </div>\n</div>\n<div class="flex-parent-center">\n  <h4 style="margin-bottom: 0">Different Icons</h4>\n  <ino-input class="customizable-input" ino-icon-leading>\n      <ino-icon slot="ino-icon-leading" ino-icon="search"></ino-icon>\n  </ino-input>\n  <ino-chip-set class="icon-collection">\n    ${iconChips}\n  </ino-chip-set>\n</div>\n</div>\n</div>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:128},endLoc:{col:1,line:190},startBody:{col:28,line:128},endBody:{col:1,line:190}}}}},_defineProperty(_parameters,"storySource",{source:'import { boolean, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-icon/readme.md\';\nimport \'./ino-icon.scss\';\n\nimport ICONS from \'_local-elements/src/components/ino-icon/icons\';\nimport findElementUpwards from \'../../core/helpers/findElementUpwards\';\n\nconst ICONS_WITHOUT_INTERNALS = ICONS.filter((icon) => !icon.startsWith(\'_\'));\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-input\') {\n      return;\n    }\n\n    const value = e.detail;\n    const chips = Array.from(document.getElementsByTagName(\'ino-chip\'));\n\n    chips\n      .filter((chip) => !chip.getAttribute(\'ino-icon\').includes(value))\n      .forEach((chip) => (chip.style.display = \'none\'));\n\n    chips\n      .filter((chip) => chip.getAttribute(\'ino-icon\').includes(value))\n      .forEach((chip) => (chip.style.display = \'block\'));\n\n    el.value = value;\n  };\n\n  const chipClickHandler = function (e) {\n    const inoChip = findElementUpwards(e.target, \'ino-chip\', \'hydrated\');\n\n    if (!inoChip) return;\n\n    copyToClipboard(inoChip.getAttribute(\'ino-label\'));\n  };\n\n  const hideHandler = function (e) {\n    document.body.removeChild(e.target);\n  };\n\n  document.addEventListener(\'click\', chipClickHandler);\n  document.addEventListener(\'valueChange\', eventHandler);\n  document.addEventListener(\'hideEl\', hideHandler);\n\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'valueChange\', eventHandler);\n    document.removeEventListener(\'click\', chipClickHandler);\n    document.removeEventListener(\'hideEl\', hideHandler);\n  };\n}\n\nfunction copyToClipboard(text) {\n  function setData(e) {\n    e.preventDefault();\n    e.clipboardData.setData(\'text/plain\', text);\n    document.removeEventListener(\'copy\', setData);\n  }\n  document.addEventListener(\'copy\', setData);\n\n  const snackbar = document.createElement(\'ino-snackbar\');\n\n  try {\n    document.execCommand(\'copy\');\n    snackbar.setAttribute(\'ino-message\', `Successfully copied "${text}" to your clipboard!`);\n  } catch (err) {\n    snackbar.setAttribute(\n      \'ino-message\',\n      `An error occurred while copying the id to your clipboard!`\n    );\n  } finally {\n    document.body.appendChild(snackbar);\n  }\n}\n\nconst ICON_IDS = ICONS_WITHOUT_INTERNALS.sort().filter((name) => name.length >= 1);\n\nconst iconChips = ICON_IDS.map(\n  (name) => /*html*/ `\n             <div>\n              <ino-chip\n                id="icon-${name}"\n                ino-label="${name}"\n                ino-icon="${name}"\n                ino-fill="outline"\n               >\n               </ino-chip>\n               <ino-tooltip ino-for="icon-${name}" ino-label="Click to copy ${name} to your clipboard" ino-placement="top" ino-trigger="hover focus" />\n               </div>\n            `\n)\n  .join()\n  .replace(/,/g, \'\'); // Remove commas\n\nexport default {\n  title: \'Graphic/<ino-icon>\',\n  parameters: {\n    actions: {\n      handles: [\'clickEl .customizable-icon\', \'valueChange .customizable-input\']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-icon">\n<style>\n  .customizable-icon {\n    --ino-icon-color-primary: ${text(\'--ino-icon-color-primary\', \'#3d40f5\')};\n  }\n</style>\n<div class="flex-parent-center">\n  <div class="flex-child">\n      <h4>Customizable Icon</h4>\n      <div class="flex-icons">\n        <ino-icon\n          class="customizable-icon"\n          ino-icon="${select(\'ino-icon\', ICON_IDS, \'info\')}"\n          ino-clickable="${boolean(\'ino-clickable\', false)}"\n          svg-title="This is a custom title"\n        >\n        </ino-icon>\n      </div>\n</div>\n<div class="flex-parent-center">\n  <h4>Primary und Secondary Icons</h4>\n  <div class="flex-icons">\n        <ino-icon\n            id="primary-icon"\n            class="preview-icon"\n            ino-icon="info"\n            ino-color-secondary="false"\n        >\n        </ino-icon>\n        <ino-tooltip\n            ino-for="primary-icon"\n            ino-trigger="hover"\n            ino-label="I\'m the default icon"\n            ino-placement="left"\n        ></ino-tooltip>\n        <ino-icon\n            id="secondary-icon"\n            class="preview-icon"\n            ino-icon="info"\n            ino-color-secondary="true"\n        >\n        </ino-icon>\n        <ino-tooltip\n            ino-for="secondary-icon"\n            ino-trigger="hover"\n            ino-label="I\'m the secondary icon (ino-color-secondary=true)"\n            ino-placement="right"\n        ></ino-tooltip>\n      </div>\n</div>\n<div class="flex-parent-center">\n  <h4 style="margin-bottom: 0">Different Icons</h4>\n  <ino-input class="customizable-input" ino-icon-leading>\n      <ino-icon slot="ino-icon-leading" ino-icon="search"></ino-icon>\n  </ino-input>\n  <ino-chip-set class="icon-collection">\n    ${iconChips}\n  </ino-chip-set>\n</div>\n</div>\n</div>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:120},endLoc:{col:1,line:182},startBody:{col:28,line:120},endBody:{col:1,line:182}}}}),_defineProperty(_parameters,"actions",{handles:["clickEl .customizable-icon","valueChange .customizable-input"]}),_parameters),decorators:[Object(with_stencil_readme.a)("# ino-icon\n\nA light icon component for texts and other components.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument.querySelector('ino-icon').addEventListener('clickEl', e => {\n  // ...\n});\n```\n\n```js\ndocument\n  .querySelector('ino-icon')\n  .addEventListener('clickEl', _ => alert('The icon was clicked'));\n```\n\n```html\n<ino-icon ino-icon=\"<string>\" ino-clickable onclickel=\"handleClickEl()\">\n</ino-icon>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```jsx harmony\nimport { Component } from 'react';\nimport { InoIcon } from '@inovex.de/elements/dist/react';\n\nclass MyComponent extends Component {\n  handleClick = (e: any) => {\n    alert(`Icon was clicked`);\n  };\n\n  render() {\n    return <InoIcon inoIcon=\"search\" inoClickable onClickEl={handleClick} />;\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```jsx harmony\nimport React, { Component } from 'react';\nimport { InoIcon } from '@inovex.de/elements/dist/react';\nimport { Components } from '@inovex.de/elements/dist/types/components';\n\nconst Icon: React.FunctionComponent<Components.InoIconAttributes> = props => {\n  const { inoIcon } = props;\n\n  const handleClick = (e: any) => {\n    alert(`Icon was clicked`);\n  };\n\n  return (\n    <InoIcon inoIcon={inoIcon} onClickEl={handleClick}>\n      {props.children}\n    </InoIcon>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return <Icon inoIcon=\"search\" />;\n  }\n}\n```\n\n## Additional Hints\n\nThe component inherits styles, such as the text size, from the parent element. For custom styles, use the css properties of the component.\n\n**Clickable icon:** Make an icon interactive with the optional attribute `ino-clickable`. Clickable icons emit a `clickEl` event.\n\n### Add icons\nIf you would like to add custom icons, you have to add them to the `icon-assets` folder and execute the `yarn icon:integrate-icons` \ncommand to include the newly added icons in the `icons.js` file.\n\n\n> **Note:** To use the provided icons in your consumer project, you need to copy all contents of\n> `node_modules/@inovex.de/elements/dist/inovex-elements/icon-assets` into your `dist/icon-assets` folder. All icons are expected\n> to be located in `icon-assets/` at runtime. Please refer to the Storybook documentation to get detailed instructions\n> on how to integrate the icons with Angular, React or plain JavaScript.\n\nAlternatively, you can also just provide the URL to your preferred icon by setting the `src` property accordingly.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property            | Attribute             | Description                                                           | Type      | Default     |\n| ------------------- | --------------------- | --------------------------------------------------------------------- | --------- | ----------- |\n| `inoClickable`      | `ino-clickable`       | Makes the icon clickable and allows to listen to the `clickEl` event. | `boolean` | `undefined` |\n| `inoColorSecondary` | `ino-color-secondary` | Colors the icon in the global secondary color                         | `boolean` | `undefined` |\n| `inoIcon`           | `ino-icon`            | The name of the icon of this element or an URL.                       | `string`  | `undefined` |\n| `src`               | `src`                 | Specifies the exact `src` of an SVG file to use.                      | `string`  | `undefined` |\n| `svgTitle`          | `svg-title`           | Sets a meaningful svg title for assistive technologies.               | `string`  | `undefined` |\n\n\n## Events\n\n| Event     | Description                                                                                                           | Type               |\n| --------- | --------------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `clickEl` | Event that emits as soon as the user clicks on the icon. The event only emits if the property `inoClickable` is true. | `CustomEvent<any>` |\n\n\n## CSS Custom Properties\n\n| Name                         | Description                         |\n| ---------------------------- | ----------------------------------- |\n| `--ino-icon-color-primary`   | Primary (default) color of the icon |\n| `--ino-icon-color-secondary` | Secondary color of the icon         |\n| `--ino-icon-height`          | Height of the icon                  |\n| `--ino-icon-width`           | Width of the icon                   |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-card](../ino-card)\n - [ino-chip](../ino-chip)\n - [ino-datepicker](../ino-datepicker)\n - [ino-fab](../ino-fab)\n - [ino-fab-set](../ino-fab-set)\n - [ino-icon-button](../ino-icon-button)\n - [ino-input](../ino-input)\n - [ino-input-file](../ino-input-file)\n - [ino-tab](../ino-tab)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-card --\x3e ino-icon\n  ino-chip --\x3e ino-icon\n  ino-datepicker --\x3e ino-icon\n  ino-fab --\x3e ino-icon\n  ino-fab-set --\x3e ino-icon\n  ino-icon-button --\x3e ino-icon\n  ino-input --\x3e ino-icon\n  ino-input-file --\x3e ino-icon\n  ino-tab --\x3e ino-icon\n  style ino-icon fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"),function(story){return subscribeToComponentEvents(),story()}]},function DefaultUsage(){return'\n<div class="story-icon">\n<style>\n  .customizable-icon {\n    --ino-icon-color-primary: '.concat(Object(dist.text)("--ino-icon-color-primary","#3d40f5"),';\n  }\n</style>\n<div class="flex-parent-center">\n  <div class="flex-child">\n      <h4>Customizable Icon</h4>\n      <div class="flex-icons">\n        <ino-icon\n          class="customizable-icon"\n          ino-icon="').concat(Object(dist.select)("ino-icon",ICON_IDS,"info"),'"\n          ino-clickable="').concat(Object(dist.boolean)("ino-clickable",!1),'"\n          svg-title="This is a custom title"\n        >\n        </ino-icon>\n      </div>\n</div>\n<div class="flex-parent-center">\n  <h4>Primary und Secondary Icons</h4>\n  <div class="flex-icons">\n        <ino-icon\n            id="primary-icon"\n            class="preview-icon"\n            ino-icon="info"\n            ino-color-secondary="false"\n        >\n        </ino-icon>\n        <ino-tooltip\n            ino-for="primary-icon"\n            ino-trigger="hover"\n            ino-label="I\'m the default icon"\n            ino-placement="left"\n        ></ino-tooltip>\n        <ino-icon\n            id="secondary-icon"\n            class="preview-icon"\n            ino-icon="info"\n            ino-color-secondary="true"\n        >\n        </ino-icon>\n        <ino-tooltip\n            ino-for="secondary-icon"\n            ino-trigger="hover"\n            ino-label="I\'m the secondary icon (ino-color-secondary=true)"\n            ino-placement="right"\n        ></ino-tooltip>\n      </div>\n</div>\n<div class="flex-parent-center">\n  <h4 style="margin-bottom: 0">Different Icons</h4>\n  <ino-input class="customizable-input" ino-icon-leading>\n      <ino-icon slot="ino-icon-leading" ino-icon="search"></ino-icon>\n  </ino-input>\n  <ino-chip-set class="icon-collection">\n    ').concat(iconChips,"\n  </ino-chip-set>\n</div>\n</div>\n</div>\n")})},1358:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_img_list_stories_DefaultUsage}));var _parameters,with_stencil_readme=__webpack_require__(2),dist=(__webpack_require__(1286),__webpack_require__(0)),beach=__webpack_require__(542),beach_default=__webpack_require__.n(beach),fjord=__webpack_require__(169),fjord_default=__webpack_require__.n(fjord),forrest=__webpack_require__(543),forrest_default=__webpack_require__.n(forrest),liberty=__webpack_require__(170),liberty_default=__webpack_require__.n(liberty),trondheim=__webpack_require__(171),trondheim_default=__webpack_require__.n(trondheim),waterfall=__webpack_require__(544),waterfall_default=__webpack_require__.n(waterfall);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Graphic/<ino-img-list>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport imgListReadme from \'_local-elements/src/components/ino-img-list/readme.md\';\\nimport \'./ino-img-list.scss\';\\nimport { boolean, number } from \'@storybook/addon-knobs\';\\n\\nimport beachImg from \'_local-assets/images/beach.jpg\';\\nimport fjordImg from \'_local-assets/images/fjord.jpg\';\\nimport forrestImg from \'_local-assets/images/forrest.jpg\';\\nimport libertyImg from \'_local-assets/images/liberty.jpg\';\\nimport trondheimImg from \'_local-assets/images/trondheim.jpg\';\\nimport waterfallImg from \'_local-assets/images/waterfall.jpg\';\\n\\nexport default {\\n  title: \'Graphic/<ino-img-list>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'click .customizable-img-listr\', \'submit .form\']\\n    }\\n  },\\n  decorators: [withStencilReadme(imgListReadme)],\\n};\\n\\nexport const DefaultUsage = () => {\\n  return `\\n      <h4>Customizable Image List</h4>\\n          <style>\\n            ino-img-list.customizable-img-list {\\n              --img-list-cols: ${number(\'--img-list-cols\', 3, \'Custom Properties\')};\\n            }\\n        </style>\\n        <ino-img-list\\n          class=\\"customizable-img-list\\"\\n          ino-enclose-label=\\"${boolean(\'ino-enclose-label\', false)}\\"\\n          ino-masonry=\\"${boolean(\'ino-masonry\', false)}\\"\\n        >\\n          ${sampleImg}\\n          ${sampleImg2}\\n          ${sampleImg3}\\n          ${sampleImg4}\\n          ${sampleImg5}\\n        </ino-img-list>\\n\\n      <h4>Image List with enclosed Labels</h4>\\n        <ino-img-list\\n          ino-enclose-label=\\"true\\"\\n        >\\n          ${sampleImg}\\n          ${sampleImg2}\\n          ${sampleImg3}\\n          ${sampleImg4}\\n          ${sampleImg5}\\n        </ino-img-list>\\n\\n      <h4>Masonry image list</h4>\\n      <ino-img-list\\n        ino-masonry\\n      >\\n        ${sampleImg}\\n        ${sampleImg6}\\n        ${sampleImg3}\\n        ${sampleImg4}\\n        ${sampleImg5}\\n        ${sampleImg4}\\n        ${sampleImg2}\\n        ${sampleImg3}\\n        ${sampleImg6}\\n        ${sampleImg5}\\n      </ino-img-list>\\n    `;\\n};\\n\\nconst sampleImg = `\\n    <ino-img\\n      src=${beachImg}\\n      alt=\\"beach\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n    ></ino-img>\\n`;\\n\\nconst sampleImg2 = `\\n  <ino-img\\n      src=${waterfallImg}\\n      alt=\\"waterfall\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n  ></ino-img>\\n`;\\n\\nconst sampleImg3 = `\\n  <ino-img\\n      src=${trondheimImg}\\n      alt=\\"trondheim\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n  ></ino-img>\\n`;\\n\\nconst sampleImg4 = `\\n  <ino-img\\n      src=${forrestImg}\\n      alt=\\"forrest\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n  ></ino-img>\\n`;\\n\\nconst sampleImg5 = `\\n  <ino-img\\n      src=${fjordImg}\\n      alt=\\"fjord\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n  ></ino-img>\\n`;\\n\\nconst sampleImg6 = `\\n  <ino-img\\n      src=${libertyImg}\\n      alt=\\"liberty\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n  ></ino-img>\\n`;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":24},"endLoc":{"col":1,"line":71},"startBody":{"col":28,"line":24},"endBody":{"col":1,"line":71}}};\n    \nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport imgListReadme from \'_local-elements/src/components/ino-img-list/readme.md\';\nimport \'./ino-img-list.scss\';\nimport { boolean, number } from \'@storybook/addon-knobs\';\n\nimport beachImg from \'_local-assets/images/beach.jpg\';\nimport fjordImg from \'_local-assets/images/fjord.jpg\';\nimport forrestImg from \'_local-assets/images/forrest.jpg\';\nimport libertyImg from \'_local-assets/images/liberty.jpg\';\nimport trondheimImg from \'_local-assets/images/trondheim.jpg\';\nimport waterfallImg from \'_local-assets/images/waterfall.jpg\';\n\nexport default {\n  title: \'Graphic/<ino-img-list>\',\n  parameters: {"storySource":{"source":"import withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport imgListReadme from \'_local-elements/src/components/ino-img-list/readme.md\';\\nimport \'./ino-img-list.scss\';\\nimport { boolean, number } from \'@storybook/addon-knobs\';\\n\\nimport beachImg from \'_local-assets/images/beach.jpg\';\\nimport fjordImg from \'_local-assets/images/fjord.jpg\';\\nimport forrestImg from \'_local-assets/images/forrest.jpg\';\\nimport libertyImg from \'_local-assets/images/liberty.jpg\';\\nimport trondheimImg from \'_local-assets/images/trondheim.jpg\';\\nimport waterfallImg from \'_local-assets/images/waterfall.jpg\';\\n\\nexport default {\\n  title: \'Graphic/<ino-img-list>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'click .customizable-img-listr\', \'submit .form\']\\n    }\\n  },\\n  decorators: [withStencilReadme(imgListReadme)],\\n};\\n\\nexport const DefaultUsage = () => {\\n  return `\\n      <h4>Customizable Image List</h4>\\n          <style>\\n            ino-img-list.customizable-img-list {\\n              --img-list-cols: ${number(\'--img-list-cols\', 3, \'Custom Properties\')};\\n            }\\n        </style>\\n        <ino-img-list\\n          class=\\"customizable-img-list\\"\\n          ino-enclose-label=\\"${boolean(\'ino-enclose-label\', false)}\\"\\n          ino-masonry=\\"${boolean(\'ino-masonry\', false)}\\"\\n        >\\n          ${sampleImg}\\n          ${sampleImg2}\\n          ${sampleImg3}\\n          ${sampleImg4}\\n          ${sampleImg5}\\n        </ino-img-list>\\n\\n      <h4>Image List with enclosed Labels</h4>\\n        <ino-img-list\\n          ino-enclose-label=\\"true\\"\\n        >\\n          ${sampleImg}\\n          ${sampleImg2}\\n          ${sampleImg3}\\n          ${sampleImg4}\\n          ${sampleImg5}\\n        </ino-img-list>\\n\\n      <h4>Masonry image list</h4>\\n      <ino-img-list\\n        ino-masonry\\n      >\\n        ${sampleImg}\\n        ${sampleImg6}\\n        ${sampleImg3}\\n        ${sampleImg4}\\n        ${sampleImg5}\\n        ${sampleImg4}\\n        ${sampleImg2}\\n        ${sampleImg3}\\n        ${sampleImg6}\\n        ${sampleImg5}\\n      </ino-img-list>\\n    `;\\n};\\n\\nconst sampleImg = `\\n    <ino-img\\n      src=${beachImg}\\n      alt=\\"beach\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n    ></ino-img>\\n`;\\n\\nconst sampleImg2 = `\\n  <ino-img\\n      src=${waterfallImg}\\n      alt=\\"waterfall\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n  ></ino-img>\\n`;\\n\\nconst sampleImg3 = `\\n  <ino-img\\n      src=${trondheimImg}\\n      alt=\\"trondheim\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n  ></ino-img>\\n`;\\n\\nconst sampleImg4 = `\\n  <ino-img\\n      src=${forrestImg}\\n      alt=\\"forrest\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n  ></ino-img>\\n`;\\n\\nconst sampleImg5 = `\\n  <ino-img\\n      src=${fjordImg}\\n      alt=\\"fjord\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n  ></ino-img>\\n`;\\n\\nconst sampleImg6 = `\\n  <ino-img\\n      src=${libertyImg}\\n      alt=\\"liberty\\"\\n      ino-label=\\"Label\\"\\n      ino-img-list-item\\n  ></ino-img>\\n`;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":24},"endLoc":{"col":1,"line":71},"startBody":{"col":28,"line":24},"endBody":{"col":1,"line":71}}}},\n    actions: {\n      handles: [\'click .customizable-img-listr\', \'submit .form\']\n    }\n  },\n  decorators: [withStencilReadme(imgListReadme)],\n};\n\nexport const DefaultUsage = () => {\n  return `\n      <h4>Customizable Image List</h4>\n          <style>\n            ino-img-list.customizable-img-list {\n              --img-list-cols: ${number(\'--img-list-cols\', 3, \'Custom Properties\')};\n            }\n        </style>\n        <ino-img-list\n          class="customizable-img-list"\n          ino-enclose-label="${boolean(\'ino-enclose-label\', false)}"\n          ino-masonry="${boolean(\'ino-masonry\', false)}"\n        >\n          ${sampleImg}\n          ${sampleImg2}\n          ${sampleImg3}\n          ${sampleImg4}\n          ${sampleImg5}\n        </ino-img-list>\n\n      <h4>Image List with enclosed Labels</h4>\n        <ino-img-list\n          ino-enclose-label="true"\n        >\n          ${sampleImg}\n          ${sampleImg2}\n          ${sampleImg3}\n          ${sampleImg4}\n          ${sampleImg5}\n        </ino-img-list>\n\n      <h4>Masonry image list</h4>\n      <ino-img-list\n        ino-masonry\n      >\n        ${sampleImg}\n        ${sampleImg6}\n        ${sampleImg3}\n        ${sampleImg4}\n        ${sampleImg5}\n        ${sampleImg4}\n        ${sampleImg2}\n        ${sampleImg3}\n        ${sampleImg6}\n        ${sampleImg5}\n      </ino-img-list>\n    `;\n};\n\nconst sampleImg = `\n    <ino-img\n      src=${beachImg}\n      alt="beach"\n      ino-label="Label"\n      ino-img-list-item\n    ></ino-img>\n`;\n\nconst sampleImg2 = `\n  <ino-img\n      src=${waterfallImg}\n      alt="waterfall"\n      ino-label="Label"\n      ino-img-list-item\n  ></ino-img>\n`;\n\nconst sampleImg3 = `\n  <ino-img\n      src=${trondheimImg}\n      alt="trondheim"\n      ino-label="Label"\n      ino-img-list-item\n  ></ino-img>\n`;\n\nconst sampleImg4 = `\n  <ino-img\n      src=${forrestImg}\n      alt="forrest"\n      ino-label="Label"\n      ino-img-list-item\n  ></ino-img>\n`;\n\nconst sampleImg5 = `\n  <ino-img\n      src=${fjordImg}\n      alt="fjord"\n      ino-label="Label"\n      ino-img-list-item\n  ></ino-img>\n`;\n\nconst sampleImg6 = `\n  <ino-img\n      src=${libertyImg}\n      alt="liberty"\n      ino-label="Label"\n      ino-img-list-item\n  ></ino-img>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:32},endLoc:{col:1,line:79},startBody:{col:28,line:32},endBody:{col:1,line:79}}}}},_defineProperty(_parameters,"storySource",{source:"import withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport imgListReadme from '_local-elements/src/components/ino-img-list/readme.md';\nimport './ino-img-list.scss';\nimport { boolean, number } from '@storybook/addon-knobs';\n\nimport beachImg from '_local-assets/images/beach.jpg';\nimport fjordImg from '_local-assets/images/fjord.jpg';\nimport forrestImg from '_local-assets/images/forrest.jpg';\nimport libertyImg from '_local-assets/images/liberty.jpg';\nimport trondheimImg from '_local-assets/images/trondheim.jpg';\nimport waterfallImg from '_local-assets/images/waterfall.jpg';\n\nexport default {\n  title: 'Graphic/<ino-img-list>',\n  parameters: {\n    actions: {\n      handles: ['click .customizable-img-listr', 'submit .form']\n    }\n  },\n  decorators: [withStencilReadme(imgListReadme)],\n};\n\nexport const DefaultUsage = () => {\n  return `\n      <h4>Customizable Image List</h4>\n          <style>\n            ino-img-list.customizable-img-list {\n              --img-list-cols: ${number('--img-list-cols', 3, 'Custom Properties')};\n            }\n        </style>\n        <ino-img-list\n          class=\"customizable-img-list\"\n          ino-enclose-label=\"${boolean('ino-enclose-label', false)}\"\n          ino-masonry=\"${boolean('ino-masonry', false)}\"\n        >\n          ${sampleImg}\n          ${sampleImg2}\n          ${sampleImg3}\n          ${sampleImg4}\n          ${sampleImg5}\n        </ino-img-list>\n\n      <h4>Image List with enclosed Labels</h4>\n        <ino-img-list\n          ino-enclose-label=\"true\"\n        >\n          ${sampleImg}\n          ${sampleImg2}\n          ${sampleImg3}\n          ${sampleImg4}\n          ${sampleImg5}\n        </ino-img-list>\n\n      <h4>Masonry image list</h4>\n      <ino-img-list\n        ino-masonry\n      >\n        ${sampleImg}\n        ${sampleImg6}\n        ${sampleImg3}\n        ${sampleImg4}\n        ${sampleImg5}\n        ${sampleImg4}\n        ${sampleImg2}\n        ${sampleImg3}\n        ${sampleImg6}\n        ${sampleImg5}\n      </ino-img-list>\n    `;\n};\n\nconst sampleImg = `\n    <ino-img\n      src=${beachImg}\n      alt=\"beach\"\n      ino-label=\"Label\"\n      ino-img-list-item\n    ></ino-img>\n`;\n\nconst sampleImg2 = `\n  <ino-img\n      src=${waterfallImg}\n      alt=\"waterfall\"\n      ino-label=\"Label\"\n      ino-img-list-item\n  ></ino-img>\n`;\n\nconst sampleImg3 = `\n  <ino-img\n      src=${trondheimImg}\n      alt=\"trondheim\"\n      ino-label=\"Label\"\n      ino-img-list-item\n  ></ino-img>\n`;\n\nconst sampleImg4 = `\n  <ino-img\n      src=${forrestImg}\n      alt=\"forrest\"\n      ino-label=\"Label\"\n      ino-img-list-item\n  ></ino-img>\n`;\n\nconst sampleImg5 = `\n  <ino-img\n      src=${fjordImg}\n      alt=\"fjord\"\n      ino-label=\"Label\"\n      ino-img-list-item\n  ></ino-img>\n`;\n\nconst sampleImg6 = `\n  <ino-img\n      src=${libertyImg}\n      alt=\"liberty\"\n      ino-label=\"Label\"\n      ino-img-list-item\n  ></ino-img>\n`;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:24},endLoc:{col:1,line:71},startBody:{col:28,line:24},endBody:{col:1,line:71}}}}),_defineProperty(_parameters,"actions",{handles:["click .customizable-img-listr","submit .form"]}),_parameters),decorators:[Object(with_stencil_readme.a)("# ino-img-list\nThe ino-img-list component is used in combination with the ino-img component to display an array of images \nin a grid-like format. It is based on the mdc-image-list component.\n\n## Usage\n\nThe component can be used as follows:\n\n```html\n<ino-img-list\n    ino-enclose-label\n    ino-masonry\n>\n    <ino-img\n        src=\"url/to/image\"\n        ino-label=\"optional label\"\n        ino-img-list-item\n    ></ino-img>\n</ino-img-list>\n```\n\n## React\n```jsx harmony\nimport React from 'react';\nimport { Component } from 'react';\nimport { InoImgList, InoImg } from '@inovex.de/elements/dist/react';\n\nclass MyComponent extends Component {\n\n  state = {\n    source: \"url/to/img\",\n    encloseLabel: true\n  };\n\n  render() {\n    return (\n      <InoImgList\n        inoEncloseLabel={this.state.encloseLabel}\n      >\n        <InoImg\n          src={this.state.source}\n          ino-img-list-item\n        >\n        </InoImg>\n      </InoImgList>\n    )\n  }\n\n}\n```\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property          | Attribute           | Description                                                                                             | Type      | Default |\n| ----------------- | ------------------- | ------------------------------------------------------------------------------------------------------- | --------- | ------- |\n| `inoEncloseLabel` | `ino-enclose-label` | Encapsulates the label of all img-list-items within the image                                           | `boolean` | `false` |\n| `inoMasonry`      | `ino-masonry`       | Enables the masonry image list variant, which allows the images to be any combination of aspect ratios. | `boolean` | `false` |\n\n\n## CSS Custom Properties\n\n| Name                  | Description                |\n| --------------------- | -------------------------- |\n| `--ino-img-list-cols` | sets the number of columns |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n")]};var ino_img_list_stories_DefaultUsage=function DefaultUsage(){return"\n      <h4>Customizable Image List</h4>\n          <style>\n            ino-img-list.customizable-img-list {\n              --img-list-cols: ".concat(Object(dist.number)("--img-list-cols",3,"Custom Properties"),';\n            }\n        </style>\n        <ino-img-list\n          class="customizable-img-list"\n          ino-enclose-label="').concat(Object(dist.boolean)("ino-enclose-label",!1),'"\n          ino-masonry="').concat(Object(dist.boolean)("ino-masonry",!1),'"\n        >\n          ').concat(sampleImg,"\n          ").concat(sampleImg2,"\n          ").concat(sampleImg3,"\n          ").concat(sampleImg4,"\n          ").concat(sampleImg5,'\n        </ino-img-list>\n\n      <h4>Image List with enclosed Labels</h4>\n        <ino-img-list\n          ino-enclose-label="true"\n        >\n          ').concat(sampleImg,"\n          ").concat(sampleImg2,"\n          ").concat(sampleImg3,"\n          ").concat(sampleImg4,"\n          ").concat(sampleImg5,"\n        </ino-img-list>\n\n      <h4>Masonry image list</h4>\n      <ino-img-list\n        ino-masonry\n      >\n        ").concat(sampleImg,"\n        ").concat(sampleImg6,"\n        ").concat(sampleImg3,"\n        ").concat(sampleImg4,"\n        ").concat(sampleImg5,"\n        ").concat(sampleImg4,"\n        ").concat(sampleImg2,"\n        ").concat(sampleImg3,"\n        ").concat(sampleImg6,"\n        ").concat(sampleImg5,"\n      </ino-img-list>\n    ")},sampleImg="\n    <ino-img\n      src=".concat(beach_default.a,'\n      alt="beach"\n      ino-label="Label"\n      ino-img-list-item\n    ></ino-img>\n'),sampleImg2="\n  <ino-img\n      src=".concat(waterfall_default.a,'\n      alt="waterfall"\n      ino-label="Label"\n      ino-img-list-item\n  ></ino-img>\n'),sampleImg3="\n  <ino-img\n      src=".concat(trondheim_default.a,'\n      alt="trondheim"\n      ino-label="Label"\n      ino-img-list-item\n  ></ino-img>\n'),sampleImg4="\n  <ino-img\n      src=".concat(forrest_default.a,'\n      alt="forrest"\n      ino-label="Label"\n      ino-img-list-item\n  ></ino-img>\n'),sampleImg5="\n  <ino-img\n      src=".concat(fjord_default.a,'\n      alt="fjord"\n      ino-label="Label"\n      ino-img-list-item\n  ></ino-img>\n'),sampleImg6="\n  <ino-img\n      src=".concat(liberty_default.a,'\n      alt="liberty"\n      ino-label="Label"\n      ino-img-list-item\n  ></ino-img>\n')},1359:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_img_stories_DefaultUsage}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1288);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:"\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import { boolean, number, select, text } from '@storybook/addon-knobs';\\n\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\n\\nimport componentReadme from '_local-elements/src/components/ino-img/readme.md';\\nimport './ino-img.scss';\\n\\nexport default {\\n  title: 'Graphic/<ino-img>',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\\"story-img\\\">\\n      <div>\\n        <h4>Customizable Image</h4>\\n        <ino-img\\n          class=\\\"customizable-img\\\"\\n          alt=\\\"${text('alt', 'Alternertive Text')}\\\"\\n          decoding=\\\"${select('decoding', ['async', 'auto', 'sync'], 'async')}\\\"\\n          height=\\\"${number('height', 100)}\\\"\\n          size=\\\"${text('size', '')}\\\"\\n          src=\\\"${text(\\n            'src',\\n            'https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png'\\n          )}\\\"\\n          srcset=\\\"${text('srcset', '')}\\\"\\n          width=\\\"${number('width', 100)}\\\"\\n          usemap=\\\"${text('usemap', '')}\\\"\\n          ino-ratio-width=\\\"${number('ino-ratio-width', 1)}\\\"\\n          ino-ratio-height=\\\"${number('ino-ratio-height', 1)}\\\"\\n          ino-rounded=\\\"${boolean('ino-rounded', false)}\\\"\\n        >\\n        </ino-img>\\n      </div>\\n    </div>\\n  `;\\n\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"DefaultUsage\":{\"startLoc\":{\"col\":28,\"line\":13},\"endLoc\":{\"col\":3,\"line\":37},\"startBody\":{\"col\":28,\"line\":13},\"endBody\":{\"col\":3,\"line\":37}}};\n    \nimport { boolean, number, select, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-img/readme.md';\nimport './ino-img.scss';\n\nexport default {parameters: {\"storySource\":{\"source\":\"import { boolean, number, select, text } from '@storybook/addon-knobs';\\n\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\n\\nimport componentReadme from '_local-elements/src/components/ino-img/readme.md';\\nimport './ino-img.scss';\\n\\nexport default {\\n  title: 'Graphic/<ino-img>',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\\"story-img\\\">\\n      <div>\\n        <h4>Customizable Image</h4>\\n        <ino-img\\n          class=\\\"customizable-img\\\"\\n          alt=\\\"${text('alt', 'Alternertive Text')}\\\"\\n          decoding=\\\"${select('decoding', ['async', 'auto', 'sync'], 'async')}\\\"\\n          height=\\\"${number('height', 100)}\\\"\\n          size=\\\"${text('size', '')}\\\"\\n          src=\\\"${text(\\n            'src',\\n            'https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png'\\n          )}\\\"\\n          srcset=\\\"${text('srcset', '')}\\\"\\n          width=\\\"${number('width', 100)}\\\"\\n          usemap=\\\"${text('usemap', '')}\\\"\\n          ino-ratio-width=\\\"${number('ino-ratio-width', 1)}\\\"\\n          ino-ratio-height=\\\"${number('ino-ratio-height', 1)}\\\"\\n          ino-rounded=\\\"${boolean('ino-rounded', false)}\\\"\\n        >\\n        </ino-img>\\n      </div>\\n    </div>\\n  `;\\n\",\"locationsMap\":{\"default-usage\":{\"startLoc\":{\"col\":28,\"line\":13},\"endLoc\":{\"col\":3,\"line\":37},\"startBody\":{\"col\":28,\"line\":13},\"endBody\":{\"col\":3,\"line\":37}}}},},\n  title: 'Graphic/<ino-img>',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class=\"story-img\">\n      <div>\n        <h4>Customizable Image</h4>\n        <ino-img\n          class=\"customizable-img\"\n          alt=\"${text('alt', 'Alternertive Text')}\"\n          decoding=\"${select('decoding', ['async', 'auto', 'sync'], 'async')}\"\n          height=\"${number('height', 100)}\"\n          size=\"${text('size', '')}\"\n          src=\"${text(\n            'src',\n            'https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png'\n          )}\"\n          srcset=\"${text('srcset', '')}\"\n          width=\"${number('width', 100)}\"\n          usemap=\"${text('usemap', '')}\"\n          ino-ratio-width=\"${number('ino-ratio-width', 1)}\"\n          ino-ratio-height=\"${number('ino-ratio-height', 1)}\"\n          ino-rounded=\"${boolean('ino-rounded', false)}\"\n        >\n        </ino-img>\n      </div>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:21},endLoc:{col:3,line:45},startBody:{col:28,line:21},endBody:{col:3,line:45}}}}},"storySource",{source:"import { boolean, number, select, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-img/readme.md';\nimport './ino-img.scss';\n\nexport default {\n  title: 'Graphic/<ino-img>',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class=\"story-img\">\n      <div>\n        <h4>Customizable Image</h4>\n        <ino-img\n          class=\"customizable-img\"\n          alt=\"${text('alt', 'Alternertive Text')}\"\n          decoding=\"${select('decoding', ['async', 'auto', 'sync'], 'async')}\"\n          height=\"${number('height', 100)}\"\n          size=\"${text('size', '')}\"\n          src=\"${text(\n            'src',\n            'https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png'\n          )}\"\n          srcset=\"${text('srcset', '')}\"\n          width=\"${number('width', 100)}\"\n          usemap=\"${text('usemap', '')}\"\n          ino-ratio-width=\"${number('ino-ratio-width', 1)}\"\n          ino-ratio-height=\"${number('ino-ratio-height', 1)}\"\n          ino-rounded=\"${boolean('ino-rounded', false)}\"\n        >\n        </ino-img>\n      </div>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:13},endLoc:{col:3,line:37},startBody:{col:28,line:13},endBody:{col:3,line:37}}}}),title:"Graphic/<ino-img>",decorators:[Object(with_stencil_readme.a)('# ino-img\n\nAn image component with different styles that reserves a predefined space to avoid jumping contents.\n\n### Usage\n\nThe component can be used as follows (custom preferences have an `ino`-prefix):\n\n```js\ndocument\n  .querySelector(\'ino-img\')\n  .addEventListener(\'click\', _ => alert(\'The image was clicked\'));\n```\n\n```html\n<ino-img\n  alt="<string>"\n  decoding="<string>"\n  width="<number>"\n  height="<number>"\n  sizes="<string>"\n  src="<string>"\n  srcset="<string>"\n  usemap="<string>"\n  ino-ratio-height="<number>"\n  ino-ratio-width="<number>"\n  ino-rounded\n>\n</ino-img>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoImg } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoImg\n        height={100}\n        width={100}\n        src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"\n      />\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoImg } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Img: React.FunctionComponent<Components.InoImgAttributes> = props => {\n  const { height, width, src } = props;\n\n  return (\n    <InoImg height={height} width={width} src={src}>\n      {props.children}\n    </InoImg>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <Img\n        height={100}\n        width={100}\n        src="https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"\n      />\n    );\n  }\n}\n```\n\n## Additional Hints\n\nIf the attribute `ino-rounded` is true, the image is displayed with rounded corners.\n\n### Pre-defined ratios\n\nThe image component has two attributes `ino-ratio-height` and `ino-ratio-width`. Use them to define any desired ratio and avoid content jumping!\n\nExample: If the image `image.png` has a ratio of `16:9`, define the image component as follows:\n\n```html\n<ino-img src="image.png" ino-ratio-width="16" ino-ratio-height="9"></ino-img>\n```\n\nUsing this setup, the width of the element extends to 100% (or the value defined in `width` attribute) and the computed height is based on the ratio attributes.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property         | Attribute           | Description                                                                                                                                                                          | Type                          | Default     |\n| ---------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----------------------------- | ----------- |\n| `alt`            | `alt`               | The alternative text of this image.                                                                                                                                                  | `string`                      | `undefined` |\n| `decoding`       | `decoding`          | The decoding method of the native html input element. Can either be `async`, `auto` or `sync`.                                                                                       | `"async" \\| "auto" \\| "sync"` | `undefined` |\n| `height`         | `height`            | The fixed height of this image.                                                                                                                                                      | `number`                      | `undefined` |\n| `inoImgListItem` | `ino-img-list-item` | Indicates that the image is a part of an image list component                                                                                                                        | `boolean`                     | `false`     |\n| `inoLabel`       | `ino-label`         | Sets the label of the image. Note: Only works if image is part of an ino-img-list component.                                                                                         | `string`                      | `undefined` |\n| `inoRatioHeight` | `ino-ratio-height`  | The ratio height for this image (default = 1). Use this attribute together with `ino-ratio-width` to reserve a space for the image during rendering and to prevent jumping contents. | `number`                      | `1`         |\n| `inoRatioWidth`  | `ino-ratio-width`   | The ratio width of this image (default = 1). Use this attribute together with `ino-ratio-height` to reserve a space for the image during rendering and to prevent jumping contents.  | `number`                      | `1`         |\n| `inoRounded`     | `ino-rounded`       | If true, styles the image with rounded borders.                                                                                                                                      | `boolean`                     | `undefined` |\n| `sizes`          | `sizes`             | A set of rules to specify the usage of images sources that are defined in the `srcset` attribute.                                                                                    | `string`                      | `undefined` |\n| `src`            | `src`               | The source of this image element.                                                                                                                                                    | `string`                      | `undefined` |\n| `srcset`         | `srcset`            | A set of sources of this image for different viewports or devices.                                                                                                                   | `string`                      | `undefined` |\n| `usemap`         | `usemap`            | An ID referencing to a defined map element for this image.                                                                                                                           | `string`                      | `undefined` |\n| `width`          | `width`             | The fixed of the image.                                                                                                                                                              | `number`                      | `undefined` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')]};var ino_img_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-img">\n      <div>\n        <h4>Customizable Image</h4>\n        <ino-img\n          class="customizable-img"\n          alt="'.concat(Object(dist.text)("alt","Alternertive Text"),'"\n          decoding="').concat(Object(dist.select)("decoding",["async","auto","sync"],"async"),'"\n          height="').concat(Object(dist.number)("height",100),'"\n          size="').concat(Object(dist.text)("size",""),'"\n          src="').concat(Object(dist.text)("src","https://cdn-images-1.medium.com/max/1600/1*HP8l7LMMt7Sh5UoO1T-yLQ.png"),'"\n          srcset="').concat(Object(dist.text)("srcset",""),'"\n          width="').concat(Object(dist.number)("width",100),'"\n          usemap="').concat(Object(dist.text)("usemap",""),'"\n          ino-ratio-width="').concat(Object(dist.number)("ino-ratio-width",1),'"\n          ino-ratio-height="').concat(Object(dist.number)("ino-ratio-height",1),'"\n          ino-rounded="').concat(Object(dist.boolean)("ino-rounded",!1),'"\n        >\n        </ino-img>\n      </div>\n    </div>\n  ')}},1360:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_input_file_stories_DefaultUsage}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1290);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Input/<ino-input-file>",parameters:(_parameters={storySource:{source:"\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import { boolean, text } from '@storybook/addon-knobs';\\n\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\n\\nimport componentReadme from '_local-elements/src/components/ino-input-file/readme.md';\\nimport './ino-input-file.scss';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== 'ino-input-file') {\\n      return;\\n    }\\n\\n    const fileNames = e.detail.files\\n      .map((f) => [f.name, f.type, f.size + ' bytes'].join(', '))\\n      .join('\\\\n');\\n    alert(fileNames);\\n  };\\n\\n  document.addEventListener('changeFile', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener('changeFile', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: 'Input/<ino-input-file>',\\n  parameters: {\\n    actions: {\\n      handles: ['changeFile .customizable-input']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\\"story-input customizable-input\\\">\\n  <ino-input-file\\n    accept=\\\"${text('accept', '')}\\\"\\n    autofocus=\\\"${boolean('autofocus', false)}\\\"\\n    disabled=\\\"${boolean('disabled', false)}\\\"\\n    multiple=\\\"${boolean('multiple', false)}\\\"\\n    required=\\\"${boolean('required', false)}\\\"\\n    ino-label=\\\"${text('ino-label', 'Select a file to upload')}\\\"\\n    ino-label-selected=\\\"${text('ino-label-selected', 'ausgewählt')}\\\">\\n  </ino-input-file>\\n</div>\\n`;\\n\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"DefaultUsage\":{\"startLoc\":{\"col\":28,\"line\":48},\"endLoc\":{\"col\":1,\"line\":60},\"startBody\":{\"col\":28,\"line\":48},\"endBody\":{\"col\":1,\"line\":60}}};\n    \nimport { boolean, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-input-file/readme.md';\nimport './ino-input-file.scss';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== 'ino-input-file') {\n      return;\n    }\n\n    const fileNames = e.detail.files\n      .map((f) => [f.name, f.type, f.size + ' bytes'].join(', '))\n      .join('\\n');\n    alert(fileNames);\n  };\n\n  document.addEventListener('changeFile', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('changeFile', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Input/<ino-input-file>',\n  parameters: {\"storySource\":{\"source\":\"import { boolean, text } from '@storybook/addon-knobs';\\n\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\n\\nimport componentReadme from '_local-elements/src/components/ino-input-file/readme.md';\\nimport './ino-input-file.scss';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== 'ino-input-file') {\\n      return;\\n    }\\n\\n    const fileNames = e.detail.files\\n      .map((f) => [f.name, f.type, f.size + ' bytes'].join(', '))\\n      .join('\\\\n');\\n    alert(fileNames);\\n  };\\n\\n  document.addEventListener('changeFile', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener('changeFile', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: 'Input/<ino-input-file>',\\n  parameters: {\\n    actions: {\\n      handles: ['changeFile .customizable-input']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\\"story-input customizable-input\\\">\\n  <ino-input-file\\n    accept=\\\"${text('accept', '')}\\\"\\n    autofocus=\\\"${boolean('autofocus', false)}\\\"\\n    disabled=\\\"${boolean('disabled', false)}\\\"\\n    multiple=\\\"${boolean('multiple', false)}\\\"\\n    required=\\\"${boolean('required', false)}\\\"\\n    ino-label=\\\"${text('ino-label', 'Select a file to upload')}\\\"\\n    ino-label-selected=\\\"${text('ino-label-selected', 'ausgewählt')}\\\">\\n  </ino-input-file>\\n</div>\\n`;\\n\",\"locationsMap\":{\"default-usage\":{\"startLoc\":{\"col\":28,\"line\":48},\"endLoc\":{\"col\":1,\"line\":60},\"startBody\":{\"col\":28,\"line\":48},\"endBody\":{\"col\":1,\"line\":60}}}},\n    actions: {\n      handles: ['changeFile .customizable-input']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class=\"story-input customizable-input\">\n  <ino-input-file\n    accept=\"${text('accept', '')}\"\n    autofocus=\"${boolean('autofocus', false)}\"\n    disabled=\"${boolean('disabled', false)}\"\n    multiple=\"${boolean('multiple', false)}\"\n    required=\"${boolean('required', false)}\"\n    ino-label=\"${text('ino-label', 'Select a file to upload')}\"\n    ino-label-selected=\"${text('ino-label-selected', 'ausgewählt')}\">\n  </ino-input-file>\n</div>\n`;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:56},endLoc:{col:1,line:68},startBody:{col:28,line:56},endBody:{col:1,line:68}}}}},_defineProperty(_parameters,"storySource",{source:"import { boolean, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-input-file/readme.md';\nimport './ino-input-file.scss';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== 'ino-input-file') {\n      return;\n    }\n\n    const fileNames = e.detail.files\n      .map((f) => [f.name, f.type, f.size + ' bytes'].join(', '))\n      .join('\\n');\n    alert(fileNames);\n  };\n\n  document.addEventListener('changeFile', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('changeFile', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Input/<ino-input-file>',\n  parameters: {\n    actions: {\n      handles: ['changeFile .customizable-input']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class=\"story-input customizable-input\">\n  <ino-input-file\n    accept=\"${text('accept', '')}\"\n    autofocus=\"${boolean('autofocus', false)}\"\n    disabled=\"${boolean('disabled', false)}\"\n    multiple=\"${boolean('multiple', false)}\"\n    required=\"${boolean('required', false)}\"\n    ino-label=\"${text('ino-label', 'Select a file to upload')}\"\n    ino-label-selected=\"${text('ino-label-selected', 'ausgewählt')}\">\n  </ino-input-file>\n</div>\n`;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:48},endLoc:{col:1,line:60},startBody:{col:28,line:48},endBody:{col:1,line:60}}}}),_defineProperty(_parameters,"actions",{handles:["changeFile .customizable-input"]}),_parameters),decorators:[Object(with_stencil_readme.a)("# ino-input-file\n\nAn input component for files. It functions as a wrapper around the native input capabilities having the [`type=\"file\"`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file).\n\nThis component replaces the native behaviour with a custom `ino-button` with logic.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector('ino-datepicker')\n  .addEventListener('changeFile', e => alert(`The new file is: ${e.detail}`));\n```\n\n```html\n<ino-input-file\n  accept=\"<string>\"\n  autofocus\n  disabled\n  multiple\n  name=\"<string>\"\n  required\n\n  ino-label=\"<string>\"\n>\n</ino-input>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from 'react';\nimport { InoInputFile } from '@inovex.de/elements/dist/react';\n\nclass MyComponent extends Component {\n  onChangeFile(e: any) {\n    alert(`The new file is: ${e.detail}`);\n  }\n\n  render() {\n    return <InoInputFile onChangeFile={onChangeFile} />;\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from 'react';\nimport { InoInputFile } from '@inovex.de/elements/dist/react';\nimport { Components } from '@inovex.de/elements/dist/types/components';\n\nconst FileInput: React.FunctionComponent<Components.InoInputFile> = props => {\n  const onFileChange = (e: any) => {\n    alert(`The new file is: ${e.detail}`);\n  };\n\n  return <InoInputFile onFileChange={onFileChange} />;\n};\n\nclass MyComponent extends Component {\n  render() {\n    return <FileInput />;\n  }\n}\n```\n\n## Additional Hints\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property    | Attribute   | Description                                              | Type      | Default         |\n| ----------- | ----------- | -------------------------------------------------------- | --------- | --------------- |\n| `accept`    | `accept`    | The types of files accepted by the server.               | `string`  | `undefined`     |\n| `autoFocus` | `autofocus` | The autofocus of this element.                           | `boolean` | `undefined`     |\n| `disabled`  | `disabled`  | Disables this element.                                   | `boolean` | `undefined`     |\n| `inoLabel`  | `ino-label` | Sets the label of the select files button.               | `string`  | `'Select file'` |\n| `multiple`  | `multiple`  | Indicates whether the user can enter one or more values. | `boolean` | `undefined`     |\n| `name`      | `name`      | The name of this input field.                            | `string`  | `undefined`     |\n| `required`  | `required`  | Marks this element as required.                          | `boolean` | `undefined`     |\n\n\n## Events\n\n| Event        | Description                   | Type                                        |\n| ------------ | ----------------------------- | ------------------------------------------- |\n| `changeFile` | Emits when the value changes. | `CustomEvent<{ e: any; files: object[]; }>` |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-button](../ino-button)\n- [ino-icon](../ino-icon)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-input-file --\x3e ino-button\n  ino-input-file --\x3e ino-icon\n  ino-button --\x3e ino-spinner\n  style ino-input-file fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){if("ino-input-file"===e.target.tagName.toLowerCase()){var fileNames=e.detail.files.map((function(f){return[f.name,f.type,f.size+" bytes"].join(", ")})).join("\n");alert(fileNames)}};return document.addEventListener("changeFile",eventHandler),function(){document.removeEventListener("changeFile",eventHandler)}}(),story()}]};var ino_input_file_stories_DefaultUsage=function DefaultUsage(){return'\n<div class="story-input customizable-input">\n  <ino-input-file\n    accept="'.concat(Object(dist.text)("accept",""),'"\n    autofocus="').concat(Object(dist.boolean)("autofocus",!1),'"\n    disabled="').concat(Object(dist.boolean)("disabled",!1),'"\n    multiple="').concat(Object(dist.boolean)("multiple",!1),'"\n    required="').concat(Object(dist.boolean)("required",!1),'"\n    ino-label="').concat(Object(dist.text)("ino-label","Select a file to upload"),'"\n    ino-label-selected="').concat(Object(dist.text)("ino-label-selected","ausgewählt"),'">\n  </ino-input-file>\n</div>\n')}},1361:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_input_stories_DefaultUsage}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1292);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Input/<ino-input>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, number, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-input/readme.md\';\\nimport \'./ino-input.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName && el.tagName.toLowerCase() !== \'ino-input\') {\\n      return;\\n    }\\n\\n    e.target.setAttribute(\'value\', e.detail);\\n  };\\n\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-input>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'inoIconClick .customizable-input\', \'valueChange .customizable-input\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-input\\">\\n  <style>\\n\\n  </style>\\n  <ino-input class=\\"customizable-input\\" id=\\"customizable-input\\" valueChange={action(\'value-changes\')}\\n    type=\\"${select(\'type\', [\'text\', \'number\', \'password\', \'email\'], \'text\', \'STANDARD\')}\\"\\n    step=\\"${text(\'step\', \'5\', \'STANDARD\')}\\"\\n    maxlength=\\"${number(\'maxlength\', 100, [\'maxlength\'], \'STANDARD\')}\\"\\n    ino-label=\\"${text(\'ino-label\', \'Customizable input\', \'STANDARD\')}\\"\\n    placeholder=\\"${text(\'placeholder\', \'\', \'STANDARD\')}\\"\\n    ino-outline=\\"${boolean(\'ino-outline\', false, \'STANDARD\')}\\"\\n    disabled=\\"${boolean(\'disabled\', false, \'STANDARD\')}\\"\\n    required=\\"${boolean(\'required\', false, \'STANDARD\')}\\"\\n    ino-show-label-hint=\\"${boolean(\'ino-show-label-hint\', false, \'STANDARD\')}\\"\\n\\n    pattern=\\"${text(\'pattern\', \'\', \'STANDARD\')}\\"\\n    ino-error=\\"${boolean(\'ino-error\', false, \'STANDARD\')}\\"\\n    ino-helper=\\"${text(\'ino-helper\', \'Helper message\', \'HELPER TEXT\')}\\"\\n    ino-helper-persistent=\\"${boolean(\'ino-helper-persistent\', false, \'HELPER TEXT\')}\\"\\n    ino-helper-validation=\\"${boolean(\'ino-helper-validation\', false, \'HELPER TEXT\')}\\"\\n\\n    ino-helper-character-counter=\\"${boolean(\'ino-helper-character-counter\', false, \'HELPER TEXT\')}\\"\\n  >\\n  </ino-input>\\n\\n  <h4>Types</h4>\\n  <ino-input placeholder=\\"type = text\\"></ino-input>\\n  <ino-input placeholder=\\"type = email\\" type=\\"email\\"></ino-input>\\n  <ino-input type=\\"number\\" placeholder=\\"type = number\\"></ino-input>\\n  <ino-input type=\\"number\\" placeholder=\\"type = number with steps=5\\" step=\\"5\\"></ino-input>\\n  <ino-input type=\\"number\\" placeholder=\\"type = number with step=\'any\' (decimal numbers)\\" step=\\"any\\"></ino-input>\\n  <ino-input type=\\"password\\" placeholder=\\"type = password\\"></ino-input>\\n\\n  <h4 class=\\"outline\\">Outlined</h4>\\n  <ino-input placeholder=\\"Outline\\" ino-outline></ino-input>\\n\\n  <h4>Datalist</h4>\\n  <ino-input ino-label=\\"Datalist\\" ino-data-list=\\"languages\\">\\n    <datalist id=\\"languages\\">\\n      <option>HTML</option>\\n      <option>Java</option>\\n      <option>Perl</option>\\n      <option>PHP</option>\\n      <option>Ruby on Rails</option>\\n    </datalist>\\n  </ino-input>\\n\\n  <h4>Number Formats</h4>\\n  <ino-input ino-decimal-places=\\"2\\" placeholder=\\"With 2 decimal places\\"></ino-input>\\n  <ino-input ino-thousands-separator placeholder=\\"With thousands separator\\"></ino-input>\\n\\n  <h4>Metadata</h4>\\n  <ino-input value=\\"2,00\\" ino-decimal-places=\\"2\\" ino-thousands-separator ino-unit=\\"€\\" ino-label=\\"Euro Input\\"></ino-input>\\n  <ino-input value=\\"2\\" type=\\"number\\" ino-unit=\\"h\\" ino-label=\\"Hours input\\"></ino-input>\\n\\n  <h4>Labels</h4>\\n  <ino-input ino-label=\\"Floating label\\"></ino-input>\\n  <ino-input ino-label=\\"Floating label\\" value=\\"With value\\"></ino-input>\\n\\n  <ino-input ino-label=\\"Outlined floating label\\" ino-outline></ino-input>\\n  <ino-input ino-label=\\"Outlined floating label\\" value=\\"With value\\" ino-outline></ino-input>\\n\\n  <h4>Helper texts</h4>\\n  <ino-input placeholder=\\"Helper text on focus (default)\\" ino-helper=\\"Helper text\\"></ino-input>\\n  <ino-input placeholder=\\"Persistent helper text\\" ino-helper=\\"Persistent helper text\\" ino-helper-persistent></ino-input>\\n  <ino-input required placeholder=\\"Validation message for required input\\" ino-helper=\\"This field is required\\" ino-helper-validation></ino-input>\\n  <ino-input value=\\"Length of 12\\" ino-helper-character-counter maxlength=25></ino-input>\\n\\n  <h4>States</h4>\\n  <ino-input placeholder=\\"Disabled\\" disabled></ino-input>\\n  <ino-input ino-label=\\"Optional\\" ino-show-label-hint></ino-input>\\n  <ino-input ino-label=\\"Required\\" required ino-show-label-hint></ino-input>\\n\\n  <ino-input placeholder=\\"Outline disabled\\" ino-outline disabled></ino-input>\\n  <ino-input ino-label=\\"Outline optional\\" ino-outline ino-show-label-hint></ino-input>\\n  <ino-input ino-label=\\"Outline required\\" ino-outline ino-show-label-hint required></ino-input>\\n\\n  <h4>Icons</h4>\\n  <ino-input ino-icon-leading ino-label=\\"Leading icon\\">\\n    <ino-icon slot=\\"ino-icon-leading\\" ino-icon=\\"search\\"></ino-icon>\\n  </ino-input>\\n  <ino-input ino-icon-trailing ino-label=\\"Trailing icon\\">\\n    <ino-icon slot=\\"ino-icon-trailing\\" ino-icon=\\"search\\"></ino-icon>\\n  </ino-input>\\n  <ino-input ino-icon-leading ino-icon-trailing ino-label=\\"Leading and Trailing icon\\">\\n   <ino-icon slot=\\"ino-icon-leading\\" ino-icon=\\"search\\"></ino-icon>\\n   <ino-icon slot=\\"ino-icon-trailing\\" ino-icon=\\"add\\"></ino-icon>\\n  </ino-input>\\n  <ino-input ino-icon-trailing ino-label=\\"Clickable Icon\\">\\n    <ino-icon ino-clickable slot=\\"ino-icon-trailing\\" ino-icon=\\"search\\"></ino-icon>\\n  </ino-input>\\n </div>\\n`;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":45},"endLoc":{"col":1,"line":138},"startBody":{"col":28,"line":45},"endBody":{"col":1,"line":138}}};\n    \nimport { boolean, number, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-input/readme.md\';\nimport \'./ino-input.scss\';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName && el.tagName.toLowerCase() !== \'ino-input\') {\n      return;\n    }\n\n    e.target.setAttribute(\'value\', e.detail);\n  };\n\n  document.addEventListener(\'valueChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'valueChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Input/<ino-input>\',\n  parameters: {"storySource":{"source":"import { boolean, number, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-input/readme.md\';\\nimport \'./ino-input.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName && el.tagName.toLowerCase() !== \'ino-input\') {\\n      return;\\n    }\\n\\n    e.target.setAttribute(\'value\', e.detail);\\n  };\\n\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-input>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'inoIconClick .customizable-input\', \'valueChange .customizable-input\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-input\\">\\n  <style>\\n\\n  </style>\\n  <ino-input class=\\"customizable-input\\" id=\\"customizable-input\\" valueChange={action(\'value-changes\')}\\n    type=\\"${select(\'type\', [\'text\', \'number\', \'password\', \'email\'], \'text\', \'STANDARD\')}\\"\\n    step=\\"${text(\'step\', \'5\', \'STANDARD\')}\\"\\n    maxlength=\\"${number(\'maxlength\', 100, [\'maxlength\'], \'STANDARD\')}\\"\\n    ino-label=\\"${text(\'ino-label\', \'Customizable input\', \'STANDARD\')}\\"\\n    placeholder=\\"${text(\'placeholder\', \'\', \'STANDARD\')}\\"\\n    ino-outline=\\"${boolean(\'ino-outline\', false, \'STANDARD\')}\\"\\n    disabled=\\"${boolean(\'disabled\', false, \'STANDARD\')}\\"\\n    required=\\"${boolean(\'required\', false, \'STANDARD\')}\\"\\n    ino-show-label-hint=\\"${boolean(\'ino-show-label-hint\', false, \'STANDARD\')}\\"\\n\\n    pattern=\\"${text(\'pattern\', \'\', \'STANDARD\')}\\"\\n    ino-error=\\"${boolean(\'ino-error\', false, \'STANDARD\')}\\"\\n    ino-helper=\\"${text(\'ino-helper\', \'Helper message\', \'HELPER TEXT\')}\\"\\n    ino-helper-persistent=\\"${boolean(\'ino-helper-persistent\', false, \'HELPER TEXT\')}\\"\\n    ino-helper-validation=\\"${boolean(\'ino-helper-validation\', false, \'HELPER TEXT\')}\\"\\n\\n    ino-helper-character-counter=\\"${boolean(\'ino-helper-character-counter\', false, \'HELPER TEXT\')}\\"\\n  >\\n  </ino-input>\\n\\n  <h4>Types</h4>\\n  <ino-input placeholder=\\"type = text\\"></ino-input>\\n  <ino-input placeholder=\\"type = email\\" type=\\"email\\"></ino-input>\\n  <ino-input type=\\"number\\" placeholder=\\"type = number\\"></ino-input>\\n  <ino-input type=\\"number\\" placeholder=\\"type = number with steps=5\\" step=\\"5\\"></ino-input>\\n  <ino-input type=\\"number\\" placeholder=\\"type = number with step=\'any\' (decimal numbers)\\" step=\\"any\\"></ino-input>\\n  <ino-input type=\\"password\\" placeholder=\\"type = password\\"></ino-input>\\n\\n  <h4 class=\\"outline\\">Outlined</h4>\\n  <ino-input placeholder=\\"Outline\\" ino-outline></ino-input>\\n\\n  <h4>Datalist</h4>\\n  <ino-input ino-label=\\"Datalist\\" ino-data-list=\\"languages\\">\\n    <datalist id=\\"languages\\">\\n      <option>HTML</option>\\n      <option>Java</option>\\n      <option>Perl</option>\\n      <option>PHP</option>\\n      <option>Ruby on Rails</option>\\n    </datalist>\\n  </ino-input>\\n\\n  <h4>Number Formats</h4>\\n  <ino-input ino-decimal-places=\\"2\\" placeholder=\\"With 2 decimal places\\"></ino-input>\\n  <ino-input ino-thousands-separator placeholder=\\"With thousands separator\\"></ino-input>\\n\\n  <h4>Metadata</h4>\\n  <ino-input value=\\"2,00\\" ino-decimal-places=\\"2\\" ino-thousands-separator ino-unit=\\"€\\" ino-label=\\"Euro Input\\"></ino-input>\\n  <ino-input value=\\"2\\" type=\\"number\\" ino-unit=\\"h\\" ino-label=\\"Hours input\\"></ino-input>\\n\\n  <h4>Labels</h4>\\n  <ino-input ino-label=\\"Floating label\\"></ino-input>\\n  <ino-input ino-label=\\"Floating label\\" value=\\"With value\\"></ino-input>\\n\\n  <ino-input ino-label=\\"Outlined floating label\\" ino-outline></ino-input>\\n  <ino-input ino-label=\\"Outlined floating label\\" value=\\"With value\\" ino-outline></ino-input>\\n\\n  <h4>Helper texts</h4>\\n  <ino-input placeholder=\\"Helper text on focus (default)\\" ino-helper=\\"Helper text\\"></ino-input>\\n  <ino-input placeholder=\\"Persistent helper text\\" ino-helper=\\"Persistent helper text\\" ino-helper-persistent></ino-input>\\n  <ino-input required placeholder=\\"Validation message for required input\\" ino-helper=\\"This field is required\\" ino-helper-validation></ino-input>\\n  <ino-input value=\\"Length of 12\\" ino-helper-character-counter maxlength=25></ino-input>\\n\\n  <h4>States</h4>\\n  <ino-input placeholder=\\"Disabled\\" disabled></ino-input>\\n  <ino-input ino-label=\\"Optional\\" ino-show-label-hint></ino-input>\\n  <ino-input ino-label=\\"Required\\" required ino-show-label-hint></ino-input>\\n\\n  <ino-input placeholder=\\"Outline disabled\\" ino-outline disabled></ino-input>\\n  <ino-input ino-label=\\"Outline optional\\" ino-outline ino-show-label-hint></ino-input>\\n  <ino-input ino-label=\\"Outline required\\" ino-outline ino-show-label-hint required></ino-input>\\n\\n  <h4>Icons</h4>\\n  <ino-input ino-icon-leading ino-label=\\"Leading icon\\">\\n    <ino-icon slot=\\"ino-icon-leading\\" ino-icon=\\"search\\"></ino-icon>\\n  </ino-input>\\n  <ino-input ino-icon-trailing ino-label=\\"Trailing icon\\">\\n    <ino-icon slot=\\"ino-icon-trailing\\" ino-icon=\\"search\\"></ino-icon>\\n  </ino-input>\\n  <ino-input ino-icon-leading ino-icon-trailing ino-label=\\"Leading and Trailing icon\\">\\n   <ino-icon slot=\\"ino-icon-leading\\" ino-icon=\\"search\\"></ino-icon>\\n   <ino-icon slot=\\"ino-icon-trailing\\" ino-icon=\\"add\\"></ino-icon>\\n  </ino-input>\\n  <ino-input ino-icon-trailing ino-label=\\"Clickable Icon\\">\\n    <ino-icon ino-clickable slot=\\"ino-icon-trailing\\" ino-icon=\\"search\\"></ino-icon>\\n  </ino-input>\\n </div>\\n`;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":45},"endLoc":{"col":1,"line":138},"startBody":{"col":28,"line":45},"endBody":{"col":1,"line":138}}}},\n    actions: {\n      handles: [\'inoIconClick .customizable-input\', \'valueChange .customizable-input\']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-input">\n  <style>\n\n  </style>\n  <ino-input class="customizable-input" id="customizable-input" valueChange={action(\'value-changes\')}\n    type="${select(\'type\', [\'text\', \'number\', \'password\', \'email\'], \'text\', \'STANDARD\')}"\n    step="${text(\'step\', \'5\', \'STANDARD\')}"\n    maxlength="${number(\'maxlength\', 100, [\'maxlength\'], \'STANDARD\')}"\n    ino-label="${text(\'ino-label\', \'Customizable input\', \'STANDARD\')}"\n    placeholder="${text(\'placeholder\', \'\', \'STANDARD\')}"\n    ino-outline="${boolean(\'ino-outline\', false, \'STANDARD\')}"\n    disabled="${boolean(\'disabled\', false, \'STANDARD\')}"\n    required="${boolean(\'required\', false, \'STANDARD\')}"\n    ino-show-label-hint="${boolean(\'ino-show-label-hint\', false, \'STANDARD\')}"\n\n    pattern="${text(\'pattern\', \'\', \'STANDARD\')}"\n    ino-error="${boolean(\'ino-error\', false, \'STANDARD\')}"\n    ino-helper="${text(\'ino-helper\', \'Helper message\', \'HELPER TEXT\')}"\n    ino-helper-persistent="${boolean(\'ino-helper-persistent\', false, \'HELPER TEXT\')}"\n    ino-helper-validation="${boolean(\'ino-helper-validation\', false, \'HELPER TEXT\')}"\n\n    ino-helper-character-counter="${boolean(\'ino-helper-character-counter\', false, \'HELPER TEXT\')}"\n  >\n  </ino-input>\n\n  <h4>Types</h4>\n  <ino-input placeholder="type = text"></ino-input>\n  <ino-input placeholder="type = email" type="email"></ino-input>\n  <ino-input type="number" placeholder="type = number"></ino-input>\n  <ino-input type="number" placeholder="type = number with steps=5" step="5"></ino-input>\n  <ino-input type="number" placeholder="type = number with step=\'any\' (decimal numbers)" step="any"></ino-input>\n  <ino-input type="password" placeholder="type = password"></ino-input>\n\n  <h4 class="outline">Outlined</h4>\n  <ino-input placeholder="Outline" ino-outline></ino-input>\n\n  <h4>Datalist</h4>\n  <ino-input ino-label="Datalist" ino-data-list="languages">\n    <datalist id="languages">\n      <option>HTML</option>\n      <option>Java</option>\n      <option>Perl</option>\n      <option>PHP</option>\n      <option>Ruby on Rails</option>\n    </datalist>\n  </ino-input>\n\n  <h4>Number Formats</h4>\n  <ino-input ino-decimal-places="2" placeholder="With 2 decimal places"></ino-input>\n  <ino-input ino-thousands-separator placeholder="With thousands separator"></ino-input>\n\n  <h4>Metadata</h4>\n  <ino-input value="2,00" ino-decimal-places="2" ino-thousands-separator ino-unit="€" ino-label="Euro Input"></ino-input>\n  <ino-input value="2" type="number" ino-unit="h" ino-label="Hours input"></ino-input>\n\n  <h4>Labels</h4>\n  <ino-input ino-label="Floating label"></ino-input>\n  <ino-input ino-label="Floating label" value="With value"></ino-input>\n\n  <ino-input ino-label="Outlined floating label" ino-outline></ino-input>\n  <ino-input ino-label="Outlined floating label" value="With value" ino-outline></ino-input>\n\n  <h4>Helper texts</h4>\n  <ino-input placeholder="Helper text on focus (default)" ino-helper="Helper text"></ino-input>\n  <ino-input placeholder="Persistent helper text" ino-helper="Persistent helper text" ino-helper-persistent></ino-input>\n  <ino-input required placeholder="Validation message for required input" ino-helper="This field is required" ino-helper-validation></ino-input>\n  <ino-input value="Length of 12" ino-helper-character-counter maxlength=25></ino-input>\n\n  <h4>States</h4>\n  <ino-input placeholder="Disabled" disabled></ino-input>\n  <ino-input ino-label="Optional" ino-show-label-hint></ino-input>\n  <ino-input ino-label="Required" required ino-show-label-hint></ino-input>\n\n  <ino-input placeholder="Outline disabled" ino-outline disabled></ino-input>\n  <ino-input ino-label="Outline optional" ino-outline ino-show-label-hint></ino-input>\n  <ino-input ino-label="Outline required" ino-outline ino-show-label-hint required></ino-input>\n\n  <h4>Icons</h4>\n  <ino-input ino-icon-leading ino-label="Leading icon">\n    <ino-icon slot="ino-icon-leading" ino-icon="search"></ino-icon>\n  </ino-input>\n  <ino-input ino-icon-trailing ino-label="Trailing icon">\n    <ino-icon slot="ino-icon-trailing" ino-icon="search"></ino-icon>\n  </ino-input>\n  <ino-input ino-icon-leading ino-icon-trailing ino-label="Leading and Trailing icon">\n   <ino-icon slot="ino-icon-leading" ino-icon="search"></ino-icon>\n   <ino-icon slot="ino-icon-trailing" ino-icon="add"></ino-icon>\n  </ino-input>\n  <ino-input ino-icon-trailing ino-label="Clickable Icon">\n    <ino-icon ino-clickable slot="ino-icon-trailing" ino-icon="search"></ino-icon>\n  </ino-input>\n </div>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:53},endLoc:{col:1,line:146},startBody:{col:28,line:53},endBody:{col:1,line:146}}}}},_defineProperty(_parameters,"storySource",{source:'import { boolean, number, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-input/readme.md\';\nimport \'./ino-input.scss\';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName && el.tagName.toLowerCase() !== \'ino-input\') {\n      return;\n    }\n\n    e.target.setAttribute(\'value\', e.detail);\n  };\n\n  document.addEventListener(\'valueChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'valueChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Input/<ino-input>\',\n  parameters: {\n    actions: {\n      handles: [\'inoIconClick .customizable-input\', \'valueChange .customizable-input\']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-input">\n  <style>\n\n  </style>\n  <ino-input class="customizable-input" id="customizable-input" valueChange={action(\'value-changes\')}\n    type="${select(\'type\', [\'text\', \'number\', \'password\', \'email\'], \'text\', \'STANDARD\')}"\n    step="${text(\'step\', \'5\', \'STANDARD\')}"\n    maxlength="${number(\'maxlength\', 100, [\'maxlength\'], \'STANDARD\')}"\n    ino-label="${text(\'ino-label\', \'Customizable input\', \'STANDARD\')}"\n    placeholder="${text(\'placeholder\', \'\', \'STANDARD\')}"\n    ino-outline="${boolean(\'ino-outline\', false, \'STANDARD\')}"\n    disabled="${boolean(\'disabled\', false, \'STANDARD\')}"\n    required="${boolean(\'required\', false, \'STANDARD\')}"\n    ino-show-label-hint="${boolean(\'ino-show-label-hint\', false, \'STANDARD\')}"\n\n    pattern="${text(\'pattern\', \'\', \'STANDARD\')}"\n    ino-error="${boolean(\'ino-error\', false, \'STANDARD\')}"\n    ino-helper="${text(\'ino-helper\', \'Helper message\', \'HELPER TEXT\')}"\n    ino-helper-persistent="${boolean(\'ino-helper-persistent\', false, \'HELPER TEXT\')}"\n    ino-helper-validation="${boolean(\'ino-helper-validation\', false, \'HELPER TEXT\')}"\n\n    ino-helper-character-counter="${boolean(\'ino-helper-character-counter\', false, \'HELPER TEXT\')}"\n  >\n  </ino-input>\n\n  <h4>Types</h4>\n  <ino-input placeholder="type = text"></ino-input>\n  <ino-input placeholder="type = email" type="email"></ino-input>\n  <ino-input type="number" placeholder="type = number"></ino-input>\n  <ino-input type="number" placeholder="type = number with steps=5" step="5"></ino-input>\n  <ino-input type="number" placeholder="type = number with step=\'any\' (decimal numbers)" step="any"></ino-input>\n  <ino-input type="password" placeholder="type = password"></ino-input>\n\n  <h4 class="outline">Outlined</h4>\n  <ino-input placeholder="Outline" ino-outline></ino-input>\n\n  <h4>Datalist</h4>\n  <ino-input ino-label="Datalist" ino-data-list="languages">\n    <datalist id="languages">\n      <option>HTML</option>\n      <option>Java</option>\n      <option>Perl</option>\n      <option>PHP</option>\n      <option>Ruby on Rails</option>\n    </datalist>\n  </ino-input>\n\n  <h4>Number Formats</h4>\n  <ino-input ino-decimal-places="2" placeholder="With 2 decimal places"></ino-input>\n  <ino-input ino-thousands-separator placeholder="With thousands separator"></ino-input>\n\n  <h4>Metadata</h4>\n  <ino-input value="2,00" ino-decimal-places="2" ino-thousands-separator ino-unit="€" ino-label="Euro Input"></ino-input>\n  <ino-input value="2" type="number" ino-unit="h" ino-label="Hours input"></ino-input>\n\n  <h4>Labels</h4>\n  <ino-input ino-label="Floating label"></ino-input>\n  <ino-input ino-label="Floating label" value="With value"></ino-input>\n\n  <ino-input ino-label="Outlined floating label" ino-outline></ino-input>\n  <ino-input ino-label="Outlined floating label" value="With value" ino-outline></ino-input>\n\n  <h4>Helper texts</h4>\n  <ino-input placeholder="Helper text on focus (default)" ino-helper="Helper text"></ino-input>\n  <ino-input placeholder="Persistent helper text" ino-helper="Persistent helper text" ino-helper-persistent></ino-input>\n  <ino-input required placeholder="Validation message for required input" ino-helper="This field is required" ino-helper-validation></ino-input>\n  <ino-input value="Length of 12" ino-helper-character-counter maxlength=25></ino-input>\n\n  <h4>States</h4>\n  <ino-input placeholder="Disabled" disabled></ino-input>\n  <ino-input ino-label="Optional" ino-show-label-hint></ino-input>\n  <ino-input ino-label="Required" required ino-show-label-hint></ino-input>\n\n  <ino-input placeholder="Outline disabled" ino-outline disabled></ino-input>\n  <ino-input ino-label="Outline optional" ino-outline ino-show-label-hint></ino-input>\n  <ino-input ino-label="Outline required" ino-outline ino-show-label-hint required></ino-input>\n\n  <h4>Icons</h4>\n  <ino-input ino-icon-leading ino-label="Leading icon">\n    <ino-icon slot="ino-icon-leading" ino-icon="search"></ino-icon>\n  </ino-input>\n  <ino-input ino-icon-trailing ino-label="Trailing icon">\n    <ino-icon slot="ino-icon-trailing" ino-icon="search"></ino-icon>\n  </ino-input>\n  <ino-input ino-icon-leading ino-icon-trailing ino-label="Leading and Trailing icon">\n   <ino-icon slot="ino-icon-leading" ino-icon="search"></ino-icon>\n   <ino-icon slot="ino-icon-trailing" ino-icon="add"></ino-icon>\n  </ino-input>\n  <ino-input ino-icon-trailing ino-label="Clickable Icon">\n    <ino-icon ino-clickable slot="ino-icon-trailing" ino-icon="search"></ino-icon>\n  </ino-input>\n </div>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:45},endLoc:{col:1,line:138},startBody:{col:28,line:45},endBody:{col:1,line:138}}}}),_defineProperty(_parameters,"actions",{handles:["inoIconClick .customizable-input","valueChange .customizable-input"]}),_parameters),decorators:[Object(with_stencil_readme.a)('# ino-input\n\nAn input component with styles. It functions as a wrapper around the material [textfield](https://github.com/material-components/material-components-web/tree/master/packages/mdc-textfield) component.\n\nUse this element for **simple types** like `text`, `password`, `number` or `email`. For more complex types, there are elements like a [Radio Button](../ino-radio), a [Checkbox](../ino-checkbox), a [Datepicker](../ino-datepicker) and many more.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector(\'ino-input\')\n  .addEventListener(\'valueChange\', e =>\n    alert(`The new input value is: ${e.detail}`)\n  );\n```\n\n```html\n<ino-input\n  autocomplete="<string>"\n  autofocus\n  disabled\n  min="<string>"\n  max="<string>"\n  step="<number>"\n  name="<string>"\n  pattern="<string>"\n  placeholder="<string>"\n  required\n  size="<number>"\n  type="<string>"\n  value="<string>"\n  ino-error\n  ino-outline\n  ino-label="<string>"\n  ino-icon-leading\n  ino-icon-trailing\n  ino-icon-clickable\n  ino-helper="<string>"\n  ino-helper-persistent\n  ino-helper-validation\n  ino-data-list="<string>"\n>\n    <datalist id="<string>">\n        <option>...</option>\n    </datalist>\n    <ino-icon slot="ino-icon-leading" ino-icon="..."></ino-icon>\n    <ino-icon slot="ino-icon-trailing" ino-icon="..."></ino-icon>\n</ino-input>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoInput } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  onValueChange(e: any) {\n    alert(`The new value is ${e.detail}`);\n  }\n\n  render() {\n    return (\n      <InoInput\n        placeholder="You can insert some text..."\n        onValueChange={onValueChange}\n      />\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoInput } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Input: React.FunctionComponent<Components.InoInputAttributes> = props => {\n  const { inoPlaceholder } = props;\n\n  const onValueChange = (e: any) => {\n    alert(`The new value is ${e.detail}`);\n  };\n\n  return (\n    <InoInput\n      placeholder="You can insert some text..."\n      onValueChange={onValueChange}\n    />\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return <Input inoPlaceholder="You can insert some text..." />;\n  }\n}\n```\n\n## Additional Hints\n\n**Outlined**: The component is by default a box component with ripple underline. Provide `ino-outline` to use the material outline design.\n\n**Labels**: The component shows a floating label containing the value of `ino-label`.\n\n**Helper Text**: The component shows an optional helper text underneath the input field (`ino-helper`). By default, the helper text will be visible as soon as the user focuses on the input field. Set `ino-helper-persistent` to show it all the time. Furthermore, use `ino-helper-validation` to style the helper text as validation message.\n\n**Icons**: There are currently two options two place an icon: at the start/left (`ino-icon-leading`) or at the end/right (`ino-icon-trailing`). To specify an icon, use either the `ino-icon`-Component (preferred) or use an icon of your choice and place it inside the `ino-input`-Element. Additionally you have to provide either `slot=ino-icon-leading` or `slot="ino-icon-trailing`to your icon element.\n\n**Datalist**: Provide the id of the datalist child and a list with possible selectable values will be displayed and filtered with every keystroke. See [datalist](https://developer.mozilla.org/de/docs/Web/HTML/Element/datalist) for more information.\n### Control flow\n\nThe input has a controlled (unmanaged) attribute `value`. For this reason, the value doesn\'t change on user interaction but on updates of `value`. Listen to `valueChange`, sync it with your local state and pass the new value to the component again to change value of input.\n\n```js\ndocument.querySelector(\'ino-input\').addEventListener(\'valueChange\', e => {\n  // ...\n});\n```\n\n```html\n<ino-input value="Here\'s some text"></ino-input>\n```\n\n### Event Behaviour\n\nThe component is based on a native input with additional features. Thus, the component bubbles events triggered by the native [HTMLInputElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) like `keyup`. The native `input` and `change` event is not bubbled because the value will only change when the value attribute changes.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                    | Attribute                      | Description                                                                                                                                                                                                                                               | Type              | Default     |\n| --------------------------- | ------------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------- | ----------- |\n| `autoFocus`                 | `auto-focus`                   | The autofocus of this element.                                                                                                                                                                                                                            | `boolean`         | `undefined` |\n| `autocomplete`              | `autocomplete`                 | The autocomplete property of this element.                                                                                                                                                                                                                | `string`          | `undefined` |\n| `disabled`                  | `disabled`                     | Disables this element.                                                                                                                                                                                                                                    | `boolean`         | `undefined` |\n| `inoDataList`               | `ino-data-list`                | The id of the datalist child                                                                                                                                                                                                                              | `string`          | `undefined` |\n| `inoDecimalPlaces`          | `ino-decimal-places`           | The number of decimal places. Only works on \'text\' type input.                                                                                                                                                                                            | `number`          | `undefined` |\n| `inoError`                  | `ino-error`                    | Displays the input field as invalid if set to true. If the property is not set or set to false, the validation is handled by the `pattern` property. This functionality might be useful if the input validation is (additionally) handled by the backend. | `boolean`         | `undefined` |\n| `inoHelper`                 | `ino-helper`                   | The optional helper text.                                                                                                                                                                                                                                 | `string`          | `undefined` |\n| `inoHelperCharacterCounter` | `ino-helper-character-counter` | Displays the number of characters. The maxlength-property must be set. This helper text will be displayed persistently.                                                                                                                                   | `boolean`         | `undefined` |\n| `inoHelperPersistent`       | `ino-helper-persistent`        | Displays the helper permanently.                                                                                                                                                                                                                          | `boolean`         | `undefined` |\n| `inoHelperValidation`       | `ino-helper-validation`        | Styles the helper text as a validation message.                                                                                                                                                                                                           | `boolean`         | `undefined` |\n| `inoIconLeading`            | `ino-icon-leading`             | Positions the icon at the beginning of the input field.                                                                                                                                                                                                   | `boolean`         | `false`     |\n| `inoIconTrailing`           | `ino-icon-trailing`            | Positions the icon trailing after the input field.                                                                                                                                                                                                        | `boolean`         | `false`     |\n| `inoLabel`                  | `ino-label`                    | The optional floating label of this input field.                                                                                                                                                                                                          | `string`          | `undefined` |\n| `inoOutline`                | `ino-outline`                  | Styles the input field as outlined element.                                                                                                                                                                                                               | `boolean`         | `undefined` |\n| `inoShowLabelHint`          | `ino-show-label-hint`          | If true, an *optional* message is displayed if not required, otherwise a * marker is displayed if required                                                                                                                                                | `boolean`         | `undefined` |\n| `inoThousandsSeparator`     | `ino-thousands-separator`      | Shows a dot as a thousands separator. Only works on \'text\' type input.                                                                                                                                                                                    | `boolean`         | `undefined` |\n| `inoUnit`                   | `ino-unit`                     | Displays the given unit at the end of the input field.                                                                                                                                                                                                    | `string`          | `undefined` |\n| `max`                       | `max`                          | The max value of this element.                                                                                                                                                                                                                            | `string`          | `undefined` |\n| `maxlength`                 | `maxlength`                    | Limits the number of possible characters to the given number                                                                                                                                                                                              | `number`          | `undefined` |\n| `min`                       | `min`                          | The min value of this element.                                                                                                                                                                                                                            | `string`          | `undefined` |\n| `name`                      | `name`                         | The name of this element.                                                                                                                                                                                                                                 | `string`          | `undefined` |\n| `pattern`                   | `pattern`                      | The validation pattern of this element.                                                                                                                                                                                                                   | `string`          | `undefined` |\n| `placeholder`               | `placeholder`                  | The placeholder of this element.                                                                                                                                                                                                                          | `string`          | `undefined` |\n| `required`                  | `required`                     | Marks this element as required.                                                                                                                                                                                                                           | `boolean`         | `undefined` |\n| `size`                      | `size`                         | The size of this element.                                                                                                                                                                                                                                 | `number`          | `undefined` |\n| `step`                      | `step`                         | The step value of this element. Use `any` for decimal numbers                                                                                                                                                                                             | `"any" \\| number` | `1`         |\n| `type`                      | `type`                         | The type of this element (default = text).                                                                                                                                                                                                                | `string`          | `\'text\'`    |\n| `value`                     | `value`                        | The value of this element. (**unmanaged**)                                                                                                                                                                                                                | `string`          | `\'\'`        |\n\n\n## Events\n\n| Event         | Description                                                                    | Type                  |\n| ------------- | ------------------------------------------------------------------------------ | --------------------- |\n| `inoBlur`     | Emits when the input field is blurred and validates email input                | `CustomEvent<void>`   |\n| `inoFocus`    | Emits when the input field is focused                                          | `CustomEvent<void>`   |\n| `valueChange` | Emits when the user types something in. Contains typed input in `event.detail` | `CustomEvent<string>` |\n\n\n## Methods\n\n### `getInputElement() => Promise<HTMLInputElement>`\n\nReturns the native input element used under the hood.\n\n#### Returns\n\nType: `Promise<HTMLInputElement>`\n\n\n\n\n## CSS Custom Properties\n\n| Name                      | Description        |\n| ------------------------- | ------------------ |\n| `--ino-input-caret-color` | color of the caret |\n| `--ino-input-icon-color`  | icon color         |\n| `--ino-input-label-color` | color of the label |\n| `--ino-input-line-color`  | line color         |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-datepicker](../ino-datepicker)\n\n### Depends on\n\n- [ino-icon](../ino-icon)\n- [ino-label](../ino-label)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-input --\x3e ino-icon\n  ino-input --\x3e ino-label\n  ino-datepicker --\x3e ino-input\n  style ino-input fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;el.tagName&&"ino-input"!==el.tagName.toLowerCase()||e.target.setAttribute("value",e.detail)};return document.addEventListener("valueChange",eventHandler),function(){document.removeEventListener("valueChange",eventHandler)}}(),story()}]};var ino_input_stories_DefaultUsage=function DefaultUsage(){return'\n<div class="story-input">\n  <style>\n\n  </style>\n  <ino-input class="customizable-input" id="customizable-input" valueChange={action(\'value-changes\')}\n    type="'.concat(Object(dist.select)("type",["text","number","password","email"],"text","STANDARD"),'"\n    step="').concat(Object(dist.text)("step","5","STANDARD"),'"\n    maxlength="').concat(Object(dist.number)("maxlength",100,["maxlength"],"STANDARD"),'"\n    ino-label="').concat(Object(dist.text)("ino-label","Customizable input","STANDARD"),'"\n    placeholder="').concat(Object(dist.text)("placeholder","","STANDARD"),'"\n    ino-outline="').concat(Object(dist.boolean)("ino-outline",!1,"STANDARD"),'"\n    disabled="').concat(Object(dist.boolean)("disabled",!1,"STANDARD"),'"\n    required="').concat(Object(dist.boolean)("required",!1,"STANDARD"),'"\n    ino-show-label-hint="').concat(Object(dist.boolean)("ino-show-label-hint",!1,"STANDARD"),'"\n\n    pattern="').concat(Object(dist.text)("pattern","","STANDARD"),'"\n    ino-error="').concat(Object(dist.boolean)("ino-error",!1,"STANDARD"),'"\n    ino-helper="').concat(Object(dist.text)("ino-helper","Helper message","HELPER TEXT"),'"\n    ino-helper-persistent="').concat(Object(dist.boolean)("ino-helper-persistent",!1,"HELPER TEXT"),'"\n    ino-helper-validation="').concat(Object(dist.boolean)("ino-helper-validation",!1,"HELPER TEXT"),'"\n\n    ino-helper-character-counter="').concat(Object(dist.boolean)("ino-helper-character-counter",!1,"HELPER TEXT"),'"\n  >\n  </ino-input>\n\n  <h4>Types</h4>\n  <ino-input placeholder="type = text"></ino-input>\n  <ino-input placeholder="type = email" type="email"></ino-input>\n  <ino-input type="number" placeholder="type = number"></ino-input>\n  <ino-input type="number" placeholder="type = number with steps=5" step="5"></ino-input>\n  <ino-input type="number" placeholder="type = number with step=\'any\' (decimal numbers)" step="any"></ino-input>\n  <ino-input type="password" placeholder="type = password"></ino-input>\n\n  <h4 class="outline">Outlined</h4>\n  <ino-input placeholder="Outline" ino-outline></ino-input>\n\n  <h4>Datalist</h4>\n  <ino-input ino-label="Datalist" ino-data-list="languages">\n    <datalist id="languages">\n      <option>HTML</option>\n      <option>Java</option>\n      <option>Perl</option>\n      <option>PHP</option>\n      <option>Ruby on Rails</option>\n    </datalist>\n  </ino-input>\n\n  <h4>Number Formats</h4>\n  <ino-input ino-decimal-places="2" placeholder="With 2 decimal places"></ino-input>\n  <ino-input ino-thousands-separator placeholder="With thousands separator"></ino-input>\n\n  <h4>Metadata</h4>\n  <ino-input value="2,00" ino-decimal-places="2" ino-thousands-separator ino-unit="€" ino-label="Euro Input"></ino-input>\n  <ino-input value="2" type="number" ino-unit="h" ino-label="Hours input"></ino-input>\n\n  <h4>Labels</h4>\n  <ino-input ino-label="Floating label"></ino-input>\n  <ino-input ino-label="Floating label" value="With value"></ino-input>\n\n  <ino-input ino-label="Outlined floating label" ino-outline></ino-input>\n  <ino-input ino-label="Outlined floating label" value="With value" ino-outline></ino-input>\n\n  <h4>Helper texts</h4>\n  <ino-input placeholder="Helper text on focus (default)" ino-helper="Helper text"></ino-input>\n  <ino-input placeholder="Persistent helper text" ino-helper="Persistent helper text" ino-helper-persistent></ino-input>\n  <ino-input required placeholder="Validation message for required input" ino-helper="This field is required" ino-helper-validation></ino-input>\n  <ino-input value="Length of 12" ino-helper-character-counter maxlength=25></ino-input>\n\n  <h4>States</h4>\n  <ino-input placeholder="Disabled" disabled></ino-input>\n  <ino-input ino-label="Optional" ino-show-label-hint></ino-input>\n  <ino-input ino-label="Required" required ino-show-label-hint></ino-input>\n\n  <ino-input placeholder="Outline disabled" ino-outline disabled></ino-input>\n  <ino-input ino-label="Outline optional" ino-outline ino-show-label-hint></ino-input>\n  <ino-input ino-label="Outline required" ino-outline ino-show-label-hint required></ino-input>\n\n  <h4>Icons</h4>\n  <ino-input ino-icon-leading ino-label="Leading icon">\n    <ino-icon slot="ino-icon-leading" ino-icon="search"></ino-icon>\n  </ino-input>\n  <ino-input ino-icon-trailing ino-label="Trailing icon">\n    <ino-icon slot="ino-icon-trailing" ino-icon="search"></ino-icon>\n  </ino-input>\n  <ino-input ino-icon-leading ino-icon-trailing ino-label="Leading and Trailing icon">\n   <ino-icon slot="ino-icon-leading" ino-icon="search"></ino-icon>\n   <ino-icon slot="ino-icon-trailing" ino-icon="add"></ino-icon>\n  </ino-input>\n  <ino-input ino-icon-trailing ino-label="Clickable Icon">\n    <ino-icon ino-clickable slot="ino-icon-trailing" ino-icon="search"></ino-icon>\n  </ino-input>\n </div>\n')}},1362:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_menu_stories_DefaultUsage}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1296);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-menu/readme.md\';\\nimport \'./ino-menu.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const innerText = e.target.innerText;\\n\\n    if (!innerText.startsWith(\'OPEN\')) {\\n      return;\\n    }\\n\\n    const clickedMenuId = innerText === \'OPEN MENU\' ? \'custom-menu\' : \'custom-menu-2\';\\n    const el = document.getElementById(clickedMenuId);\\n\\n    if (!el) {\\n      return;\\n    }\\n\\n    const isMenuOpen = el.getAttribute(\'ino-open\');\\n    el.setAttribute(\'ino-open\', isMenuOpen === \'false\' ? \'true\' : \'false\');\\n  };\\n\\n  document.addEventListener(\'click\', eventHandler);\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'click\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-menu>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-menu\\">\\n      <h4>Customizable Menu</h4>\\n      <ino-button id=\\"button-custom-menu\\">Open menu</ino-button>\\n      <ino-menu\\n        id=\\"custom-menu\\"\\n        ino-for=\\"button\\"\\n        ino-open=\\"${boolean(\'ino-open\', false)}\\"\\n      >\\n        <ino-list-item ino-text=\\"Item\\"></ino-list-item>\\n        <ino-list-item ino-text=\\"Item 2\\"></ino-list-item>\\n      </ino-menu>\\n\\n      <h4>Variation with divider</h4>\\n      <ino-button id=\\"menu-2\\">Open divided menu</ino-button>\\n      <ino-menu id=\\"custom-menu-2\\" ino-for=\\"menu-2\\" ino-open=\\"${boolean(\'ino-open\', false)}\\">\\n        <ino-list-item ino-text=\\"Home\\"></ino-list-item>\\n        <ino-list-item ino-text=\\"Projects\\"></ino-list-item>\\n        <ino-list-divider></ino-list-divider>\\n        <ino-list-item ino-text=\\"User\\"></ino-list-item>\\n        <ino-list-item ino-text=\\"Settings\\"></ino-list-item>\\n      </ino-menu>\\n    </div>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":48},"endLoc":{"col":3,"line":71},"startBody":{"col":28,"line":48},"endBody":{"col":3,"line":71}}};\n    \nimport { boolean } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-menu/readme.md\';\nimport \'./ino-menu.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const innerText = e.target.innerText;\n\n    if (!innerText.startsWith(\'OPEN\')) {\n      return;\n    }\n\n    const clickedMenuId = innerText === \'OPEN MENU\' ? \'custom-menu\' : \'custom-menu-2\';\n    const el = document.getElementById(clickedMenuId);\n\n    if (!el) {\n      return;\n    }\n\n    const isMenuOpen = el.getAttribute(\'ino-open\');\n    el.setAttribute(\'ino-open\', isMenuOpen === \'false\' ? \'true\' : \'false\');\n  };\n\n  document.addEventListener(\'click\', eventHandler);\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'click\', eventHandler);\n  };\n}\n\nexport default {parameters: {"storySource":{"source":"import { boolean } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-menu/readme.md\';\\nimport \'./ino-menu.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const innerText = e.target.innerText;\\n\\n    if (!innerText.startsWith(\'OPEN\')) {\\n      return;\\n    }\\n\\n    const clickedMenuId = innerText === \'OPEN MENU\' ? \'custom-menu\' : \'custom-menu-2\';\\n    const el = document.getElementById(clickedMenuId);\\n\\n    if (!el) {\\n      return;\\n    }\\n\\n    const isMenuOpen = el.getAttribute(\'ino-open\');\\n    el.setAttribute(\'ino-open\', isMenuOpen === \'false\' ? \'true\' : \'false\');\\n  };\\n\\n  document.addEventListener(\'click\', eventHandler);\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'click\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-menu>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-menu\\">\\n      <h4>Customizable Menu</h4>\\n      <ino-button id=\\"button-custom-menu\\">Open menu</ino-button>\\n      <ino-menu\\n        id=\\"custom-menu\\"\\n        ino-for=\\"button\\"\\n        ino-open=\\"${boolean(\'ino-open\', false)}\\"\\n      >\\n        <ino-list-item ino-text=\\"Item\\"></ino-list-item>\\n        <ino-list-item ino-text=\\"Item 2\\"></ino-list-item>\\n      </ino-menu>\\n\\n      <h4>Variation with divider</h4>\\n      <ino-button id=\\"menu-2\\">Open divided menu</ino-button>\\n      <ino-menu id=\\"custom-menu-2\\" ino-for=\\"menu-2\\" ino-open=\\"${boolean(\'ino-open\', false)}\\">\\n        <ino-list-item ino-text=\\"Home\\"></ino-list-item>\\n        <ino-list-item ino-text=\\"Projects\\"></ino-list-item>\\n        <ino-list-divider></ino-list-divider>\\n        <ino-list-item ino-text=\\"User\\"></ino-list-item>\\n        <ino-list-item ino-text=\\"Settings\\"></ino-list-item>\\n      </ino-menu>\\n    </div>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":48},"endLoc":{"col":3,"line":71},"startBody":{"col":28,"line":48},"endBody":{"col":3,"line":71}}}},},\n  title: \'Structure/<ino-menu>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-menu">\n      <h4>Customizable Menu</h4>\n      <ino-button id="button-custom-menu">Open menu</ino-button>\n      <ino-menu\n        id="custom-menu"\n        ino-for="button"\n        ino-open="${boolean(\'ino-open\', false)}"\n      >\n        <ino-list-item ino-text="Item"></ino-list-item>\n        <ino-list-item ino-text="Item 2"></ino-list-item>\n      </ino-menu>\n\n      <h4>Variation with divider</h4>\n      <ino-button id="menu-2">Open divided menu</ino-button>\n      <ino-menu id="custom-menu-2" ino-for="menu-2" ino-open="${boolean(\'ino-open\', false)}">\n        <ino-list-item ino-text="Home"></ino-list-item>\n        <ino-list-item ino-text="Projects"></ino-list-item>\n        <ino-list-divider></ino-list-divider>\n        <ino-list-item ino-text="User"></ino-list-item>\n        <ino-list-item ino-text="Settings"></ino-list-item>\n      </ino-menu>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:56},endLoc:{col:3,line:79},startBody:{col:28,line:56},endBody:{col:3,line:79}}}}},"storySource",{source:"import { boolean } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-menu/readme.md';\nimport './ino-menu.scss';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const innerText = e.target.innerText;\n\n    if (!innerText.startsWith('OPEN')) {\n      return;\n    }\n\n    const clickedMenuId = innerText === 'OPEN MENU' ? 'custom-menu' : 'custom-menu-2';\n    const el = document.getElementById(clickedMenuId);\n\n    if (!el) {\n      return;\n    }\n\n    const isMenuOpen = el.getAttribute('ino-open');\n    el.setAttribute('ino-open', isMenuOpen === 'false' ? 'true' : 'false');\n  };\n\n  document.addEventListener('click', eventHandler);\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('click', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Structure/<ino-menu>',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class=\"story-menu\">\n      <h4>Customizable Menu</h4>\n      <ino-button id=\"button-custom-menu\">Open menu</ino-button>\n      <ino-menu\n        id=\"custom-menu\"\n        ino-for=\"button\"\n        ino-open=\"${boolean('ino-open', false)}\"\n      >\n        <ino-list-item ino-text=\"Item\"></ino-list-item>\n        <ino-list-item ino-text=\"Item 2\"></ino-list-item>\n      </ino-menu>\n\n      <h4>Variation with divider</h4>\n      <ino-button id=\"menu-2\">Open divided menu</ino-button>\n      <ino-menu id=\"custom-menu-2\" ino-for=\"menu-2\" ino-open=\"${boolean('ino-open', false)}\">\n        <ino-list-item ino-text=\"Home\"></ino-list-item>\n        <ino-list-item ino-text=\"Projects\"></ino-list-item>\n        <ino-list-divider></ino-list-divider>\n        <ino-list-item ino-text=\"User\"></ino-list-item>\n        <ino-list-item ino-text=\"Settings\"></ino-list-item>\n      </ino-menu>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:48},endLoc:{col:3,line:71},startBody:{col:28,line:48},endBody:{col:3,line:71}}}}),title:"Structure/<ino-menu>",decorators:[Object(with_stencil_readme.a)('# ino-menu\n\nA menu component that displays a list of choices on a temporary surface. It functions as a wrapper around the material [menu](https://github.com/material-components/material-components-web/blob/master/packages/mdc-menu/) component.\nThe anchor element is the parent element.\n\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-menu ino-open ino-for="<string>">\n  <ino-list-item ...></ino-list-item>\n  <ino-list-divider></ino-list-divider>\n</ino-menu>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport {\n  InoButton,\n  InoMenu,\n  InoListItem,\n  InoDivider\n} from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoMenu inoFor="menu">\n        <InoListItem inoText="Home" />\n        <InoListItem inoText="Projects" />\n        <InoDivider />\n        <InoListItem inoText="User" />\n        <InoListItem inoText="Settings" />\n      </InoMenu>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport {\n  InoButton,\n  InoMenu,\n  InoListItem,\n  InoDivider\n} from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Menu: React.FunctionComponent<Components.InoMenuAttributes> = props => {\n  const { inoFor } = props;\n\n  return (\n    <div>\n      <InoButton id={inoFor}>Open menu</InoButton>\n      <InoMenu inoFor={inoFor} inoOpen={true}>\n        {props.children}\n      </InoMenu>\n    </div>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <Menu inoFor="menu">\n        <InoListItem inoText="Home" />\n        <InoListItem inoText="Projects" />\n        <InoDivider />\n        <InoListItem inoText="User" />\n        <InoListItem inoText="Settings" />\n      </Menu>\n    );\n  }\n}\n```\n\n## Additional Hints\n\nThe menu creates a temporary surface with an empty list composer. The items of the list are provided via the slot (see example above). For more details about the list capabilities itself, check the documentation of `ino-list` and `ino-list-item` component.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property  | Attribute  | Description                       | Type      | Default     |\n| --------- | ---------- | --------------------------------- | --------- | ----------- |\n| `inoFor`  | `ino-for`  | Anchor element for the menu       | `string`  | `undefined` |\n| `inoOpen` | `ino-open` | Set this option to show the menu. | `boolean` | `false`     |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-list](../ino-list)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-menu --\x3e ino-list\n  style ino-menu fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var innerText=e.target.innerText;if(innerText.startsWith("OPEN")){var clickedMenuId="OPEN MENU"===innerText?"custom-menu":"custom-menu-2",el=document.getElementById(clickedMenuId);if(el){var isMenuOpen=el.getAttribute("ino-open");el.setAttribute("ino-open","false"===isMenuOpen?"true":"false")}}};return document.addEventListener("click",eventHandler),function(){document.removeEventListener("click",eventHandler)}}(),story()}]};var ino_menu_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-menu">\n      <h4>Customizable Menu</h4>\n      <ino-button id="button-custom-menu">Open menu</ino-button>\n      <ino-menu\n        id="custom-menu"\n        ino-for="button"\n        ino-open="'.concat(Object(dist.boolean)("ino-open",!1),'"\n      >\n        <ino-list-item ino-text="Item"></ino-list-item>\n        <ino-list-item ino-text="Item 2"></ino-list-item>\n      </ino-menu>\n\n      <h4>Variation with divider</h4>\n      <ino-button id="menu-2">Open divided menu</ino-button>\n      <ino-menu id="custom-menu-2" ino-for="menu-2" ino-open="').concat(Object(dist.boolean)("ino-open",!1),'">\n        <ino-list-item ino-text="Home"></ino-list-item>\n        <ino-list-item ino-text="Projects"></ino-list-item>\n        <ino-list-divider></ino-list-divider>\n        <ino-list-item ino-text="User"></ino-list-item>\n        <ino-list-item ino-text="Settings"></ino-list-item>\n      </ino-menu>\n    </div>\n  ')}},1363:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_nav_drawer_stories_DefaultUsage})),__webpack_require__.d(__webpack_exports__,"Dismissible",(function(){return Dismissible})),__webpack_require__.d(__webpack_exports__,"Modal",(function(){return Modal}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1298);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var openChangeHandle=function openChangeHandle(e){var el=e.target;"ino-nav-drawer"===el.tagName.toLowerCase()&&el.setAttribute("ino-open",!!e.detail)},clickHandler=function clickHandler(e){e.preventDefault(),e.stopPropagation();var el=e.target;if(el.className.includes("toggle-nav")){var drawer=el.parentElement.parentElement,oldState=drawer.getAttribute("ino-open");drawer.setAttribute("ino-open","true"===oldState?"false":"true")}else if(el.className.includes("nav-drawer-modal"))el.setAttribute("ino-open","true"===el.getAttribute("ino-open")?"false":"true");else if("ino-list-item"===el.tagName.toLowerCase()){var navItemNodes=el.parentElement.parentElement.parentElement.parentElement.querySelectorAll("ino-list-item");return navItemNodes&&navItemNodes.forEach((function(link){link.setAttribute("ino-activated",!1)})),void el.setAttribute("ino-activated",!0)}};function unsubscribeFromComponentEvents(){document.removeEventListener("openChange",openChangeHandle),document.removeEventListener("click",clickHandler),document.removeEventListener("clickEl",clickHandler)}__webpack_exports__.default={title:"Structure/<ino-nav-drawer>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, select, text } from \'@storybook/addon-knobs\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-nav-drawer/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport \'./ino-nav-drawer.scss\';\\n\\n// == event block\\nconst openChangeHandle = function(e) {\\n  const el = e.target;\\n  if (el.tagName.toLowerCase() !== \'ino-nav-drawer\') {\\n    return;\\n  }\\n  el.setAttribute(\'ino-open\', !!e.detail);\\n};\\n\\nconst clickHandler = function(e) {\\n  e.preventDefault();\\n  e.stopPropagation();\\n\\n  const el = e.target;\\n  if (el.className.includes(\'toggle-nav\')) {\\n    // go up to the ino drawer\\n    const drawer = el.parentElement.parentElement;\\n    const oldState = drawer.getAttribute(\'ino-open\');\\n    drawer.setAttribute(\'ino-open\', oldState === \'true\' ? \'false\' : \'true\');\\n    return;\\n  }\\n  // variant: modal, click on scrim\\n  if (el.className.includes(\'nav-drawer-modal\')) {\\n    el.setAttribute(\'ino-open\', el.getAttribute(\'ino-open\') === \'true\' ? \'false\' : \'true\');\\n    return;\\n  }\\n\\n  if (el.tagName.toLowerCase() === \'ino-list-item\') {\\n    const parentDrawer =\\n      el.parentElement.parentElement.parentElement.parentElement;\\n    const navItemNodes = parentDrawer.querySelectorAll(\'ino-list-item\');\\n    navItemNodes &&\\n    navItemNodes.forEach(link => {\\n      link.setAttribute(\'ino-activated\', false);\\n    });\\n    el.setAttribute(\'ino-activated\', true);\\n    return;\\n  }\\n};\\n\\nfunction unsubscribeFromComponentEvents() {\\n  document.removeEventListener(\'openChange\', openChangeHandle);\\n  document.removeEventListener(\'click\', clickHandler);\\n  document.removeEventListener(\'clickEl\', clickHandler);\\n}\\n\\nfunction subscribeToComponentEvents() {\\n  document.addEventListener(\'openChange\', openChangeHandle);\\n  document.addEventListener(\'click\', clickHandler);\\n  document.addEventListener(\'clickEl\', clickHandler);\\n\\n  // unsubscribe function will be called by Storybook\\n  return unsubscribeFromComponentEvents;\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-nav-drawer>\',\\n  parameters: {\\n    actions: {\\n      handles: [\\n        \'openChange .customizable-drawer\',\\n        \'click .toggle-nav\',\\n        \'clickEl ino-nav-item\'\\n      ]\\n    }\\n  },\\n  decorators: [\\n   story => {\\n      subscribeToComponentEvents();\\n      return story();\\n    }]\\n};\\n\\nconst navContent = /*html*/ `\\n<ino-img slot=\\"logo\\"\\n    src=\\"https://app-uat.james.inma.inovex.io/static/media/james-logo.e7e70758.png\\"\\n    width=\\"50\\"\\n></ino-img>\\n<div slot=\\"subtitle\\">inovex</div>\\n\\n<ino-list slot=\\"content\\">\\n  <ino-nav-item ino-text=\\"Some Link\\" ino-activated>\\n    <ino-icon\\n      ino-icon=\\"onboarding\\"\\n    ></ino-icon>\\n  </ino-nav-item>\\n  <ino-nav-item ino-text=\\"Some other Link\\">\\n    <ino-icon\\n      ino-icon=\\"calendar\\"\\n    ></ino-icon>\\n  </ino-nav-item>\\n  <ino-nav-item ino-text=\\"Some other Link\\">\\n    <ino-icon\\n      ino-icon=\\"employee\\"\\n    ></ino-icon>\\n  </ino-nav-item>\\n  <ino-list-divider></ino-list-divider>\\n  <ino-nav-item ino-text=\\"Some settings link\\">\\n    <ino-icon\\n      ino-icon=\\"settings\\"\\n    ></ino-icon>\\n  </ino-nav-item>\\n</ino-list>\\n\\n<ino-list slot=\\"footer\\">\\n  <ino-nav-item ino-text=\\"My Profile\\">\\n    <ino-img src=\\"https://picsum.photos/id/1027/250/250.jpg\\" style=\\"border-radius: 50%\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n  </ino-nav-item>\\n</ino-list>\\n`;\\n\\nconst mainContent = /* html */ `\\n<p>At some point someone will replace this block of text with useful words so customers can learn more about the products and services you offer! Placeholder text is useful when you need to see what a page design looks like, but the actual content isn\'t available. It\'s like having someone with identical measurements check the fit of a dress before trying it on yourself. </p> <p>You are currently reading Honest Ipsum, the placeholder text that needs no explanation. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This is just temporary placeholder text; like when a friend saves a spot for you in line, only to be replaced by you when you return. </p> <p>A web developer will often use filler text so they can focus on the design of the web page. It will be replaced with real content later. It is useful for a web developer to use placeholder text so they can easily see what different fonts look like on a realistic paragraph. </p> <p>Once the final copy for the web page has been created, it will go here. You are currently reading some filler text. A web developer will often use filler text so they can focus on the design of the web page. It will be replaced with real content later. </p> <p>We aren\'t quite sure what to put here yet. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This text is only here to validate the layout. It isn\'t worth reading. What you are reading now is not what you will be reading in this space once this web page is completed. </p> <p>We aren\'t quite sure what to put here yet. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This text is only here to validate the layout. It isn\'t worth reading. What you are reading now is not what you will be reading in this space once this web page is completed. </p>\\n`;\\n\\nexport const DefaultUsage = () => /* html */ `\\n      <style>\\n        .customizable-drawer {\\n          --ino-nav-drawer-background: ${text(\\n  \'--ino-nav-drawer-background\',\\n  \'#ffffff\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-text-color: ${text(\\n  \'--ino-nav-drawer-text-color\',\\n  \'#003c7e\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-width-open: ${text(\\n  \'--ino-nav-drawer-width-open\',\\n  \'250px\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-width-closed: ${text(\\n  \'--ino-nav-drawer-width-closed\',\\n  \'72px\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-height: ${text(\\n  \'--ino-nav-drawer-height\',\\n  \'100%\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-transition-duration: ${text(\\n  \'--ino-nav-drawer-transition-duration\',\\n  \'0.25s\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-timing-function: ${text(\\n  \'--ino-nav-drawer-timing-function\',\\n  \'(0.4, 0, 0.2, 1)\',\\n  \'Custom Properties\'\\n)};\\n        }\\n\\n        ino-nav-item {\\n          --ino-nav-item-color: ${text(\'--ino-nav-item-color\', \'gray\', \'Custom Properties\')};\\n          --ino-nav-item-color-active: ${text(\'--ino-nav-item-color-active\', \'#3d40f5\', \'Custom Properties\')};\\n        }\\n      </style>\\n\\n      <div class=\\"story-nav-drawer\\">\\n        <h4>Customizable</h4>\\n        <div class=\\"story-nav-drawer__default\\">\\n          <ino-nav-drawer\\n            ino-open=${boolean(\'ino-open\', false, \'Props\')}\\n            ino-anchor=\\"${select(\\n  \'ino-anchor\',\\n  { left: \'left\', right: \'right\' },\\n  \'left\',\\n  \'Props\'\\n)}\\"\\n            ino-variant=\\"${select(\\n  \'ino-variant\',\\n  { docked: \'docked\', dismissible: \'dismissible\', modal: \'modal\' },\\n  \'docked\',\\n  \'Props\'\\n)}\\"\\n            class=\\"customizable-drawer\\"\\n          >\\n            <div slot=\\"header\\">\\n              <ino-img\\n                src=\\"${text(\\n  \'header - image src\',\\n  \'https://app-uat.james.inma.inovex.io/static/media/james-logo.e7e70758.png\',\\n  \'Slots\'\\n)}\\"\\n                width=\\"50\\"\\n              ></ino-img>\\n              <p>inovex</p>\\n            </div>\\n            <ino-list slot=\\"content\\">\\n              <ino-nav-item ino-text=\\"${text(\\n  \'default - 1st list item\',\\n  \'Some Link\',\\n  \'Slots\'\\n)}\\" ino-activated>\\n                <ino-icon\\n                  ino-icon=\\"onboarding\\"\\n                ></ino-icon>\\n              </ino-nav-item>\\n            </ino-list>\\n            <ino-list slot=\\"footer\\">\\n              <ino-nav-item ino-text=\\"${text(\\n  \'footer - 1st list item\',\\n  \'My Profile\',\\n  \'Slots\'\\n)}\\">\\n              <ino-icon ino-icon=\\"employee\\"></ino-icon>\\n              </ino-nav-item>\\n            </ino-list>\\n\\n            <main slot=\\"app\\" class=\\"main-content\\">\\n              <ino-button ino-fill=\\"outline\\" ino-dense class=\\"toggle-nav\\">Toggle Navigation</ino-button>\\n              <br /> <br />\\n              ${text(\\n  \'App Content\',\\n  `Your App goes here 🤘`,\\n  \'Slots\'\\n)}\\n              ${mainContent}\\n              <br/><br />\\n            </main>\\n          </ino-nav-drawer>\\n        </div>\\n\\n        <h4>Variant: Docked, right side</h4>\\n        <div class=\\"story-nav-drawer__docked_anchor--right\\">\\n          <ino-nav-drawer\\n            ino-open=\\"false\\"\\n            ino-anchor=\\"right\\"\\n            class=\\"nav-drawer-docked-right\\"\\n          >\\n            ${navContent}\\n            <main slot=\\"app\\" class=\\"main-content\\">\\n              ${mainContent}\\n            </main>\\n          </ino-nav-drawer>\\n        </div>\\n      </div>\\n  `;\\n\\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\\n\\nexport const Dismissible = () => {\\n  return /* html */ `\\n    <h4>Variant: Dismissble</h4>\\n    <div class=\\"story-nav-drawer__dismissible\\">\\n      <ino-nav-drawer\\n        ino-open=\\"false\\"\\n        ino-variant=\\"dismissible\\"\\n        class=\\"nav-drawer-dismissible\\"\\n      >\\n       ${navContent}\\n       <main slot=\\"app\\" class=\\"main-content\\">\\n         <ino-button ino-fill=\\"outline\\" ino-dense class=\\"toggle-nav\\">Toggle Navigation</ino-button>\\n         ${mainContent}\\n       </main>\\n      </ino-nav-drawer>\\n    </div>\\n  `;\\n};\\n\\nexport const Modal = () => {\\n  return /* html */ `\\n      <div class=\\"story-nav-drawer__modal\\">\\n        <ino-nav-drawer\\n          ino-open=\\"false\\"\\n          ino-variant=\\"modal\\"\\n          class=\\"nav-drawer-modal\\"\\n        >\\n        ${navContent}\\n        <main slot=\\"app\\" class=\\"main-content\\">\\n          <h4>Variant: Modal</h4>\\n          <ino-button ino-fill=\\"outline\\" ino-dense class=\\"toggle-nav\\">Toggle Navigation</ino-button>\\n           ${mainContent}\\n         </main>\\n        </ino-nav-drawer>\\n      </div>\\n    `;\\n};\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":123},"endLoc":{"col":3,"line":248},"startBody":{"col":28,"line":123},"endBody":{"col":3,"line":248}},"Dismissible":{"startLoc":{"col":27,"line":252},"endLoc":{"col":1,"line":269},"startBody":{"col":27,"line":252},"endBody":{"col":1,"line":269}},"Modal":{"startLoc":{"col":21,"line":271},"endLoc":{"col":1,"line":288},"startBody":{"col":21,"line":271},"endBody":{"col":1,"line":288}}};\n    \nimport { boolean, select, text } from \'@storybook/addon-knobs\';\n\nimport componentReadme from \'_local-elements/src/components/ino-nav-drawer/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport \'./ino-nav-drawer.scss\';\n\n// == event block\nconst openChangeHandle = function(e) {\n  const el = e.target;\n  if (el.tagName.toLowerCase() !== \'ino-nav-drawer\') {\n    return;\n  }\n  el.setAttribute(\'ino-open\', !!e.detail);\n};\n\nconst clickHandler = function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n\n  const el = e.target;\n  if (el.className.includes(\'toggle-nav\')) {\n    // go up to the ino drawer\n    const drawer = el.parentElement.parentElement;\n    const oldState = drawer.getAttribute(\'ino-open\');\n    drawer.setAttribute(\'ino-open\', oldState === \'true\' ? \'false\' : \'true\');\n    return;\n  }\n  // variant: modal, click on scrim\n  if (el.className.includes(\'nav-drawer-modal\')) {\n    el.setAttribute(\'ino-open\', el.getAttribute(\'ino-open\') === \'true\' ? \'false\' : \'true\');\n    return;\n  }\n\n  if (el.tagName.toLowerCase() === \'ino-list-item\') {\n    const parentDrawer =\n      el.parentElement.parentElement.parentElement.parentElement;\n    const navItemNodes = parentDrawer.querySelectorAll(\'ino-list-item\');\n    navItemNodes &&\n    navItemNodes.forEach(link => {\n      link.setAttribute(\'ino-activated\', false);\n    });\n    el.setAttribute(\'ino-activated\', true);\n    return;\n  }\n};\n\nfunction unsubscribeFromComponentEvents() {\n  document.removeEventListener(\'openChange\', openChangeHandle);\n  document.removeEventListener(\'click\', clickHandler);\n  document.removeEventListener(\'clickEl\', clickHandler);\n}\n\nfunction subscribeToComponentEvents() {\n  document.addEventListener(\'openChange\', openChangeHandle);\n  document.addEventListener(\'click\', clickHandler);\n  document.addEventListener(\'clickEl\', clickHandler);\n\n  // unsubscribe function will be called by Storybook\n  return unsubscribeFromComponentEvents;\n}\n\nexport default {\n  title: \'Structure/<ino-nav-drawer>\',\n  parameters: {"storySource":{"source":"import { boolean, select, text } from \'@storybook/addon-knobs\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-nav-drawer/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport \'./ino-nav-drawer.scss\';\\n\\n// == event block\\nconst openChangeHandle = function(e) {\\n  const el = e.target;\\n  if (el.tagName.toLowerCase() !== \'ino-nav-drawer\') {\\n    return;\\n  }\\n  el.setAttribute(\'ino-open\', !!e.detail);\\n};\\n\\nconst clickHandler = function(e) {\\n  e.preventDefault();\\n  e.stopPropagation();\\n\\n  const el = e.target;\\n  if (el.className.includes(\'toggle-nav\')) {\\n    // go up to the ino drawer\\n    const drawer = el.parentElement.parentElement;\\n    const oldState = drawer.getAttribute(\'ino-open\');\\n    drawer.setAttribute(\'ino-open\', oldState === \'true\' ? \'false\' : \'true\');\\n    return;\\n  }\\n  // variant: modal, click on scrim\\n  if (el.className.includes(\'nav-drawer-modal\')) {\\n    el.setAttribute(\'ino-open\', el.getAttribute(\'ino-open\') === \'true\' ? \'false\' : \'true\');\\n    return;\\n  }\\n\\n  if (el.tagName.toLowerCase() === \'ino-list-item\') {\\n    const parentDrawer =\\n      el.parentElement.parentElement.parentElement.parentElement;\\n    const navItemNodes = parentDrawer.querySelectorAll(\'ino-list-item\');\\n    navItemNodes &&\\n    navItemNodes.forEach(link => {\\n      link.setAttribute(\'ino-activated\', false);\\n    });\\n    el.setAttribute(\'ino-activated\', true);\\n    return;\\n  }\\n};\\n\\nfunction unsubscribeFromComponentEvents() {\\n  document.removeEventListener(\'openChange\', openChangeHandle);\\n  document.removeEventListener(\'click\', clickHandler);\\n  document.removeEventListener(\'clickEl\', clickHandler);\\n}\\n\\nfunction subscribeToComponentEvents() {\\n  document.addEventListener(\'openChange\', openChangeHandle);\\n  document.addEventListener(\'click\', clickHandler);\\n  document.addEventListener(\'clickEl\', clickHandler);\\n\\n  // unsubscribe function will be called by Storybook\\n  return unsubscribeFromComponentEvents;\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-nav-drawer>\',\\n  parameters: {\\n    actions: {\\n      handles: [\\n        \'openChange .customizable-drawer\',\\n        \'click .toggle-nav\',\\n        \'clickEl ino-nav-item\'\\n      ]\\n    }\\n  },\\n  decorators: [\\n   story => {\\n      subscribeToComponentEvents();\\n      return story();\\n    }]\\n};\\n\\nconst navContent = /*html*/ `\\n<ino-img slot=\\"logo\\"\\n    src=\\"https://app-uat.james.inma.inovex.io/static/media/james-logo.e7e70758.png\\"\\n    width=\\"50\\"\\n></ino-img>\\n<div slot=\\"subtitle\\">inovex</div>\\n\\n<ino-list slot=\\"content\\">\\n  <ino-nav-item ino-text=\\"Some Link\\" ino-activated>\\n    <ino-icon\\n      ino-icon=\\"onboarding\\"\\n    ></ino-icon>\\n  </ino-nav-item>\\n  <ino-nav-item ino-text=\\"Some other Link\\">\\n    <ino-icon\\n      ino-icon=\\"calendar\\"\\n    ></ino-icon>\\n  </ino-nav-item>\\n  <ino-nav-item ino-text=\\"Some other Link\\">\\n    <ino-icon\\n      ino-icon=\\"employee\\"\\n    ></ino-icon>\\n  </ino-nav-item>\\n  <ino-list-divider></ino-list-divider>\\n  <ino-nav-item ino-text=\\"Some settings link\\">\\n    <ino-icon\\n      ino-icon=\\"settings\\"\\n    ></ino-icon>\\n  </ino-nav-item>\\n</ino-list>\\n\\n<ino-list slot=\\"footer\\">\\n  <ino-nav-item ino-text=\\"My Profile\\">\\n    <ino-img src=\\"https://picsum.photos/id/1027/250/250.jpg\\" style=\\"border-radius: 50%\\" ino-ratio-width=\\"1\\" ino-ratio-height=\\"1\\"></ino-img>\\n  </ino-nav-item>\\n</ino-list>\\n`;\\n\\nconst mainContent = /* html */ `\\n<p>At some point someone will replace this block of text with useful words so customers can learn more about the products and services you offer! Placeholder text is useful when you need to see what a page design looks like, but the actual content isn\'t available. It\'s like having someone with identical measurements check the fit of a dress before trying it on yourself. </p> <p>You are currently reading Honest Ipsum, the placeholder text that needs no explanation. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This is just temporary placeholder text; like when a friend saves a spot for you in line, only to be replaced by you when you return. </p> <p>A web developer will often use filler text so they can focus on the design of the web page. It will be replaced with real content later. It is useful for a web developer to use placeholder text so they can easily see what different fonts look like on a realistic paragraph. </p> <p>Once the final copy for the web page has been created, it will go here. You are currently reading some filler text. A web developer will often use filler text so they can focus on the design of the web page. It will be replaced with real content later. </p> <p>We aren\'t quite sure what to put here yet. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This text is only here to validate the layout. It isn\'t worth reading. What you are reading now is not what you will be reading in this space once this web page is completed. </p> <p>We aren\'t quite sure what to put here yet. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This text is only here to validate the layout. It isn\'t worth reading. What you are reading now is not what you will be reading in this space once this web page is completed. </p>\\n`;\\n\\nexport const DefaultUsage = () => /* html */ `\\n      <style>\\n        .customizable-drawer {\\n          --ino-nav-drawer-background: ${text(\\n  \'--ino-nav-drawer-background\',\\n  \'#ffffff\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-text-color: ${text(\\n  \'--ino-nav-drawer-text-color\',\\n  \'#003c7e\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-width-open: ${text(\\n  \'--ino-nav-drawer-width-open\',\\n  \'250px\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-width-closed: ${text(\\n  \'--ino-nav-drawer-width-closed\',\\n  \'72px\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-height: ${text(\\n  \'--ino-nav-drawer-height\',\\n  \'100%\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-transition-duration: ${text(\\n  \'--ino-nav-drawer-transition-duration\',\\n  \'0.25s\',\\n  \'Custom Properties\'\\n)};\\n          --ino-nav-drawer-timing-function: ${text(\\n  \'--ino-nav-drawer-timing-function\',\\n  \'(0.4, 0, 0.2, 1)\',\\n  \'Custom Properties\'\\n)};\\n        }\\n\\n        ino-nav-item {\\n          --ino-nav-item-color: ${text(\'--ino-nav-item-color\', \'gray\', \'Custom Properties\')};\\n          --ino-nav-item-color-active: ${text(\'--ino-nav-item-color-active\', \'#3d40f5\', \'Custom Properties\')};\\n        }\\n      </style>\\n\\n      <div class=\\"story-nav-drawer\\">\\n        <h4>Customizable</h4>\\n        <div class=\\"story-nav-drawer__default\\">\\n          <ino-nav-drawer\\n            ino-open=${boolean(\'ino-open\', false, \'Props\')}\\n            ino-anchor=\\"${select(\\n  \'ino-anchor\',\\n  { left: \'left\', right: \'right\' },\\n  \'left\',\\n  \'Props\'\\n)}\\"\\n            ino-variant=\\"${select(\\n  \'ino-variant\',\\n  { docked: \'docked\', dismissible: \'dismissible\', modal: \'modal\' },\\n  \'docked\',\\n  \'Props\'\\n)}\\"\\n            class=\\"customizable-drawer\\"\\n          >\\n            <div slot=\\"header\\">\\n              <ino-img\\n                src=\\"${text(\\n  \'header - image src\',\\n  \'https://app-uat.james.inma.inovex.io/static/media/james-logo.e7e70758.png\',\\n  \'Slots\'\\n)}\\"\\n                width=\\"50\\"\\n              ></ino-img>\\n              <p>inovex</p>\\n            </div>\\n            <ino-list slot=\\"content\\">\\n              <ino-nav-item ino-text=\\"${text(\\n  \'default - 1st list item\',\\n  \'Some Link\',\\n  \'Slots\'\\n)}\\" ino-activated>\\n                <ino-icon\\n                  ino-icon=\\"onboarding\\"\\n                ></ino-icon>\\n              </ino-nav-item>\\n            </ino-list>\\n            <ino-list slot=\\"footer\\">\\n              <ino-nav-item ino-text=\\"${text(\\n  \'footer - 1st list item\',\\n  \'My Profile\',\\n  \'Slots\'\\n)}\\">\\n              <ino-icon ino-icon=\\"employee\\"></ino-icon>\\n              </ino-nav-item>\\n            </ino-list>\\n\\n            <main slot=\\"app\\" class=\\"main-content\\">\\n              <ino-button ino-fill=\\"outline\\" ino-dense class=\\"toggle-nav\\">Toggle Navigation</ino-button>\\n              <br /> <br />\\n              ${text(\\n  \'App Content\',\\n  `Your App goes here 🤘`,\\n  \'Slots\'\\n)}\\n              ${mainContent}\\n              <br/><br />\\n            </main>\\n          </ino-nav-drawer>\\n        </div>\\n\\n        <h4>Variant: Docked, right side</h4>\\n        <div class=\\"story-nav-drawer__docked_anchor--right\\">\\n          <ino-nav-drawer\\n            ino-open=\\"false\\"\\n            ino-anchor=\\"right\\"\\n            class=\\"nav-drawer-docked-right\\"\\n          >\\n            ${navContent}\\n            <main slot=\\"app\\" class=\\"main-content\\">\\n              ${mainContent}\\n            </main>\\n          </ino-nav-drawer>\\n        </div>\\n      </div>\\n  `;\\n\\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\\n\\nexport const Dismissible = () => {\\n  return /* html */ `\\n    <h4>Variant: Dismissble</h4>\\n    <div class=\\"story-nav-drawer__dismissible\\">\\n      <ino-nav-drawer\\n        ino-open=\\"false\\"\\n        ino-variant=\\"dismissible\\"\\n        class=\\"nav-drawer-dismissible\\"\\n      >\\n       ${navContent}\\n       <main slot=\\"app\\" class=\\"main-content\\">\\n         <ino-button ino-fill=\\"outline\\" ino-dense class=\\"toggle-nav\\">Toggle Navigation</ino-button>\\n         ${mainContent}\\n       </main>\\n      </ino-nav-drawer>\\n    </div>\\n  `;\\n};\\n\\nexport const Modal = () => {\\n  return /* html */ `\\n      <div class=\\"story-nav-drawer__modal\\">\\n        <ino-nav-drawer\\n          ino-open=\\"false\\"\\n          ino-variant=\\"modal\\"\\n          class=\\"nav-drawer-modal\\"\\n        >\\n        ${navContent}\\n        <main slot=\\"app\\" class=\\"main-content\\">\\n          <h4>Variant: Modal</h4>\\n          <ino-button ino-fill=\\"outline\\" ino-dense class=\\"toggle-nav\\">Toggle Navigation</ino-button>\\n           ${mainContent}\\n         </main>\\n        </ino-nav-drawer>\\n      </div>\\n    `;\\n};\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":123},"endLoc":{"col":3,"line":248},"startBody":{"col":28,"line":123},"endBody":{"col":3,"line":248}},"dismissible":{"startLoc":{"col":27,"line":252},"endLoc":{"col":1,"line":269},"startBody":{"col":27,"line":252},"endBody":{"col":1,"line":269}},"modal":{"startLoc":{"col":21,"line":271},"endLoc":{"col":1,"line":288},"startBody":{"col":21,"line":271},"endBody":{"col":1,"line":288}}}},\n    actions: {\n      handles: [\n        \'openChange .customizable-drawer\',\n        \'click .toggle-nav\',\n        \'clickEl ino-nav-item\'\n      ]\n    }\n  },\n  decorators: [\n   story => {\n      subscribeToComponentEvents();\n      return story();\n    }]\n};\n\nconst navContent = /*html*/ `\n<ino-img slot="logo"\n    src="https://app-uat.james.inma.inovex.io/static/media/james-logo.e7e70758.png"\n    width="50"\n></ino-img>\n<div slot="subtitle">inovex</div>\n\n<ino-list slot="content">\n  <ino-nav-item ino-text="Some Link" ino-activated>\n    <ino-icon\n      ino-icon="onboarding"\n    ></ino-icon>\n  </ino-nav-item>\n  <ino-nav-item ino-text="Some other Link">\n    <ino-icon\n      ino-icon="calendar"\n    ></ino-icon>\n  </ino-nav-item>\n  <ino-nav-item ino-text="Some other Link">\n    <ino-icon\n      ino-icon="employee"\n    ></ino-icon>\n  </ino-nav-item>\n  <ino-list-divider></ino-list-divider>\n  <ino-nav-item ino-text="Some settings link">\n    <ino-icon\n      ino-icon="settings"\n    ></ino-icon>\n  </ino-nav-item>\n</ino-list>\n\n<ino-list slot="footer">\n  <ino-nav-item ino-text="My Profile">\n    <ino-img src="https://picsum.photos/id/1027/250/250.jpg" style="border-radius: 50%" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n  </ino-nav-item>\n</ino-list>\n`;\n\nconst mainContent = /* html */ `\n<p>At some point someone will replace this block of text with useful words so customers can learn more about the products and services you offer! Placeholder text is useful when you need to see what a page design looks like, but the actual content isn\'t available. It\'s like having someone with identical measurements check the fit of a dress before trying it on yourself. </p> <p>You are currently reading Honest Ipsum, the placeholder text that needs no explanation. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This is just temporary placeholder text; like when a friend saves a spot for you in line, only to be replaced by you when you return. </p> <p>A web developer will often use filler text so they can focus on the design of the web page. It will be replaced with real content later. It is useful for a web developer to use placeholder text so they can easily see what different fonts look like on a realistic paragraph. </p> <p>Once the final copy for the web page has been created, it will go here. You are currently reading some filler text. A web developer will often use filler text so they can focus on the design of the web page. It will be replaced with real content later. </p> <p>We aren\'t quite sure what to put here yet. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This text is only here to validate the layout. It isn\'t worth reading. What you are reading now is not what you will be reading in this space once this web page is completed. </p> <p>We aren\'t quite sure what to put here yet. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This text is only here to validate the layout. It isn\'t worth reading. What you are reading now is not what you will be reading in this space once this web page is completed. </p>\n`;\n\nexport const DefaultUsage = () => /* html */ `\n      <style>\n        .customizable-drawer {\n          --ino-nav-drawer-background: ${text(\n  \'--ino-nav-drawer-background\',\n  \'#ffffff\',\n  \'Custom Properties\'\n)};\n          --ino-nav-drawer-text-color: ${text(\n  \'--ino-nav-drawer-text-color\',\n  \'#003c7e\',\n  \'Custom Properties\'\n)};\n          --ino-nav-drawer-width-open: ${text(\n  \'--ino-nav-drawer-width-open\',\n  \'250px\',\n  \'Custom Properties\'\n)};\n          --ino-nav-drawer-width-closed: ${text(\n  \'--ino-nav-drawer-width-closed\',\n  \'72px\',\n  \'Custom Properties\'\n)};\n          --ino-nav-drawer-height: ${text(\n  \'--ino-nav-drawer-height\',\n  \'100%\',\n  \'Custom Properties\'\n)};\n          --ino-nav-drawer-transition-duration: ${text(\n  \'--ino-nav-drawer-transition-duration\',\n  \'0.25s\',\n  \'Custom Properties\'\n)};\n          --ino-nav-drawer-timing-function: ${text(\n  \'--ino-nav-drawer-timing-function\',\n  \'(0.4, 0, 0.2, 1)\',\n  \'Custom Properties\'\n)};\n        }\n\n        ino-nav-item {\n          --ino-nav-item-color: ${text(\'--ino-nav-item-color\', \'gray\', \'Custom Properties\')};\n          --ino-nav-item-color-active: ${text(\'--ino-nav-item-color-active\', \'#3d40f5\', \'Custom Properties\')};\n        }\n      </style>\n\n      <div class="story-nav-drawer">\n        <h4>Customizable</h4>\n        <div class="story-nav-drawer__default">\n          <ino-nav-drawer\n            ino-open=${boolean(\'ino-open\', false, \'Props\')}\n            ino-anchor="${select(\n  \'ino-anchor\',\n  { left: \'left\', right: \'right\' },\n  \'left\',\n  \'Props\'\n)}"\n            ino-variant="${select(\n  \'ino-variant\',\n  { docked: \'docked\', dismissible: \'dismissible\', modal: \'modal\' },\n  \'docked\',\n  \'Props\'\n)}"\n            class="customizable-drawer"\n          >\n            <div slot="header">\n              <ino-img\n                src="${text(\n  \'header - image src\',\n  \'https://app-uat.james.inma.inovex.io/static/media/james-logo.e7e70758.png\',\n  \'Slots\'\n)}"\n                width="50"\n              ></ino-img>\n              <p>inovex</p>\n            </div>\n            <ino-list slot="content">\n              <ino-nav-item ino-text="${text(\n  \'default - 1st list item\',\n  \'Some Link\',\n  \'Slots\'\n)}" ino-activated>\n                <ino-icon\n                  ino-icon="onboarding"\n                ></ino-icon>\n              </ino-nav-item>\n            </ino-list>\n            <ino-list slot="footer">\n              <ino-nav-item ino-text="${text(\n  \'footer - 1st list item\',\n  \'My Profile\',\n  \'Slots\'\n)}">\n              <ino-icon ino-icon="employee"></ino-icon>\n              </ino-nav-item>\n            </ino-list>\n\n            <main slot="app" class="main-content">\n              <ino-button ino-fill="outline" ino-dense class="toggle-nav">Toggle Navigation</ino-button>\n              <br /> <br />\n              ${text(\n  \'App Content\',\n  `Your App goes here 🤘`,\n  \'Slots\'\n)}\n              ${mainContent}\n              <br/><br />\n            </main>\n          </ino-nav-drawer>\n        </div>\n\n        <h4>Variant: Docked, right side</h4>\n        <div class="story-nav-drawer__docked_anchor--right">\n          <ino-nav-drawer\n            ino-open="false"\n            ino-anchor="right"\n            class="nav-drawer-docked-right"\n          >\n            ${navContent}\n            <main slot="app" class="main-content">\n              ${mainContent}\n            </main>\n          </ino-nav-drawer>\n        </div>\n      </div>\n  `;;\n\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\n\nexport const Dismissible = () => {\n  return /* html */ `\n    <h4>Variant: Dismissble</h4>\n    <div class="story-nav-drawer__dismissible">\n      <ino-nav-drawer\n        ino-open="false"\n        ino-variant="dismissible"\n        class="nav-drawer-dismissible"\n      >\n       ${navContent}\n       <main slot="app" class="main-content">\n         <ino-button ino-fill="outline" ino-dense class="toggle-nav">Toggle Navigation</ino-button>\n         ${mainContent}\n       </main>\n      </ino-nav-drawer>\n    </div>\n  `;\n};;\n\nexport const Modal = () => {\n  return /* html */ `\n      <div class="story-nav-drawer__modal">\n        <ino-nav-drawer\n          ino-open="false"\n          ino-variant="modal"\n          class="nav-drawer-modal"\n        >\n        ${navContent}\n        <main slot="app" class="main-content">\n          <h4>Variant: Modal</h4>\n          <ino-button ino-fill="outline" ino-dense class="toggle-nav">Toggle Navigation</ino-button>\n           ${mainContent}\n         </main>\n        </ino-nav-drawer>\n      </div>\n    `;\n};\n',locationsMap:{"default-usage":{startLoc:{col:28,line:131},endLoc:{col:3,line:256},startBody:{col:28,line:131},endBody:{col:3,line:256}},dismissible:{startLoc:{col:27,line:260},endLoc:{col:1,line:277},startBody:{col:27,line:260},endBody:{col:1,line:277}},modal:{startLoc:{col:21,line:279},endLoc:{col:1,line:296},startBody:{col:21,line:279},endBody:{col:1,line:296}}}}},_defineProperty(_parameters,"storySource",{source:"import { boolean, select, text } from '@storybook/addon-knobs';\n\nimport componentReadme from '_local-elements/src/components/ino-nav-drawer/readme.md';\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport './ino-nav-drawer.scss';\n\n// == event block\nconst openChangeHandle = function(e) {\n  const el = e.target;\n  if (el.tagName.toLowerCase() !== 'ino-nav-drawer') {\n    return;\n  }\n  el.setAttribute('ino-open', !!e.detail);\n};\n\nconst clickHandler = function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n\n  const el = e.target;\n  if (el.className.includes('toggle-nav')) {\n    // go up to the ino drawer\n    const drawer = el.parentElement.parentElement;\n    const oldState = drawer.getAttribute('ino-open');\n    drawer.setAttribute('ino-open', oldState === 'true' ? 'false' : 'true');\n    return;\n  }\n  // variant: modal, click on scrim\n  if (el.className.includes('nav-drawer-modal')) {\n    el.setAttribute('ino-open', el.getAttribute('ino-open') === 'true' ? 'false' : 'true');\n    return;\n  }\n\n  if (el.tagName.toLowerCase() === 'ino-list-item') {\n    const parentDrawer =\n      el.parentElement.parentElement.parentElement.parentElement;\n    const navItemNodes = parentDrawer.querySelectorAll('ino-list-item');\n    navItemNodes &&\n    navItemNodes.forEach(link => {\n      link.setAttribute('ino-activated', false);\n    });\n    el.setAttribute('ino-activated', true);\n    return;\n  }\n};\n\nfunction unsubscribeFromComponentEvents() {\n  document.removeEventListener('openChange', openChangeHandle);\n  document.removeEventListener('click', clickHandler);\n  document.removeEventListener('clickEl', clickHandler);\n}\n\nfunction subscribeToComponentEvents() {\n  document.addEventListener('openChange', openChangeHandle);\n  document.addEventListener('click', clickHandler);\n  document.addEventListener('clickEl', clickHandler);\n\n  // unsubscribe function will be called by Storybook\n  return unsubscribeFromComponentEvents;\n}\n\nexport default {\n  title: 'Structure/<ino-nav-drawer>',\n  parameters: {\n    actions: {\n      handles: [\n        'openChange .customizable-drawer',\n        'click .toggle-nav',\n        'clickEl ino-nav-item'\n      ]\n    }\n  },\n  decorators: [\n   story => {\n      subscribeToComponentEvents();\n      return story();\n    }]\n};\n\nconst navContent = /*html*/ `\n<ino-img slot=\"logo\"\n    src=\"https://app-uat.james.inma.inovex.io/static/media/james-logo.e7e70758.png\"\n    width=\"50\"\n></ino-img>\n<div slot=\"subtitle\">inovex</div>\n\n<ino-list slot=\"content\">\n  <ino-nav-item ino-text=\"Some Link\" ino-activated>\n    <ino-icon\n      ino-icon=\"onboarding\"\n    ></ino-icon>\n  </ino-nav-item>\n  <ino-nav-item ino-text=\"Some other Link\">\n    <ino-icon\n      ino-icon=\"calendar\"\n    ></ino-icon>\n  </ino-nav-item>\n  <ino-nav-item ino-text=\"Some other Link\">\n    <ino-icon\n      ino-icon=\"employee\"\n    ></ino-icon>\n  </ino-nav-item>\n  <ino-list-divider></ino-list-divider>\n  <ino-nav-item ino-text=\"Some settings link\">\n    <ino-icon\n      ino-icon=\"settings\"\n    ></ino-icon>\n  </ino-nav-item>\n</ino-list>\n\n<ino-list slot=\"footer\">\n  <ino-nav-item ino-text=\"My Profile\">\n    <ino-img src=\"https://picsum.photos/id/1027/250/250.jpg\" style=\"border-radius: 50%\" ino-ratio-width=\"1\" ino-ratio-height=\"1\"></ino-img>\n  </ino-nav-item>\n</ino-list>\n`;\n\nconst mainContent = /* html */ `\n<p>At some point someone will replace this block of text with useful words so customers can learn more about the products and services you offer! Placeholder text is useful when you need to see what a page design looks like, but the actual content isn't available. It's like having someone with identical measurements check the fit of a dress before trying it on yourself. </p> <p>You are currently reading Honest Ipsum, the placeholder text that needs no explanation. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This is just temporary placeholder text; like when a friend saves a spot for you in line, only to be replaced by you when you return. </p> <p>A web developer will often use filler text so they can focus on the design of the web page. It will be replaced with real content later. It is useful for a web developer to use placeholder text so they can easily see what different fonts look like on a realistic paragraph. </p> <p>Once the final copy for the web page has been created, it will go here. You are currently reading some filler text. A web developer will often use filler text so they can focus on the design of the web page. It will be replaced with real content later. </p> <p>We aren't quite sure what to put here yet. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This text is only here to validate the layout. It isn't worth reading. What you are reading now is not what you will be reading in this space once this web page is completed. </p> <p>We aren't quite sure what to put here yet. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This text is only here to validate the layout. It isn't worth reading. What you are reading now is not what you will be reading in this space once this web page is completed. </p>\n`;\n\nexport const DefaultUsage = () => /* html */ `\n      <style>\n        .customizable-drawer {\n          --ino-nav-drawer-background: ${text(\n  '--ino-nav-drawer-background',\n  '#ffffff',\n  'Custom Properties'\n)};\n          --ino-nav-drawer-text-color: ${text(\n  '--ino-nav-drawer-text-color',\n  '#003c7e',\n  'Custom Properties'\n)};\n          --ino-nav-drawer-width-open: ${text(\n  '--ino-nav-drawer-width-open',\n  '250px',\n  'Custom Properties'\n)};\n          --ino-nav-drawer-width-closed: ${text(\n  '--ino-nav-drawer-width-closed',\n  '72px',\n  'Custom Properties'\n)};\n          --ino-nav-drawer-height: ${text(\n  '--ino-nav-drawer-height',\n  '100%',\n  'Custom Properties'\n)};\n          --ino-nav-drawer-transition-duration: ${text(\n  '--ino-nav-drawer-transition-duration',\n  '0.25s',\n  'Custom Properties'\n)};\n          --ino-nav-drawer-timing-function: ${text(\n  '--ino-nav-drawer-timing-function',\n  '(0.4, 0, 0.2, 1)',\n  'Custom Properties'\n)};\n        }\n\n        ino-nav-item {\n          --ino-nav-item-color: ${text('--ino-nav-item-color', 'gray', 'Custom Properties')};\n          --ino-nav-item-color-active: ${text('--ino-nav-item-color-active', '#3d40f5', 'Custom Properties')};\n        }\n      </style>\n\n      <div class=\"story-nav-drawer\">\n        <h4>Customizable</h4>\n        <div class=\"story-nav-drawer__default\">\n          <ino-nav-drawer\n            ino-open=${boolean('ino-open', false, 'Props')}\n            ino-anchor=\"${select(\n  'ino-anchor',\n  { left: 'left', right: 'right' },\n  'left',\n  'Props'\n)}\"\n            ino-variant=\"${select(\n  'ino-variant',\n  { docked: 'docked', dismissible: 'dismissible', modal: 'modal' },\n  'docked',\n  'Props'\n)}\"\n            class=\"customizable-drawer\"\n          >\n            <div slot=\"header\">\n              <ino-img\n                src=\"${text(\n  'header - image src',\n  'https://app-uat.james.inma.inovex.io/static/media/james-logo.e7e70758.png',\n  'Slots'\n)}\"\n                width=\"50\"\n              ></ino-img>\n              <p>inovex</p>\n            </div>\n            <ino-list slot=\"content\">\n              <ino-nav-item ino-text=\"${text(\n  'default - 1st list item',\n  'Some Link',\n  'Slots'\n)}\" ino-activated>\n                <ino-icon\n                  ino-icon=\"onboarding\"\n                ></ino-icon>\n              </ino-nav-item>\n            </ino-list>\n            <ino-list slot=\"footer\">\n              <ino-nav-item ino-text=\"${text(\n  'footer - 1st list item',\n  'My Profile',\n  'Slots'\n)}\">\n              <ino-icon ino-icon=\"employee\"></ino-icon>\n              </ino-nav-item>\n            </ino-list>\n\n            <main slot=\"app\" class=\"main-content\">\n              <ino-button ino-fill=\"outline\" ino-dense class=\"toggle-nav\">Toggle Navigation</ino-button>\n              <br /> <br />\n              ${text(\n  'App Content',\n  `Your App goes here 🤘`,\n  'Slots'\n)}\n              ${mainContent}\n              <br/><br />\n            </main>\n          </ino-nav-drawer>\n        </div>\n\n        <h4>Variant: Docked, right side</h4>\n        <div class=\"story-nav-drawer__docked_anchor--right\">\n          <ino-nav-drawer\n            ino-open=\"false\"\n            ino-anchor=\"right\"\n            class=\"nav-drawer-docked-right\"\n          >\n            ${navContent}\n            <main slot=\"app\" class=\"main-content\">\n              ${mainContent}\n            </main>\n          </ino-nav-drawer>\n        </div>\n      </div>\n  `;\n\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\n\nexport const Dismissible = () => {\n  return /* html */ `\n    <h4>Variant: Dismissble</h4>\n    <div class=\"story-nav-drawer__dismissible\">\n      <ino-nav-drawer\n        ino-open=\"false\"\n        ino-variant=\"dismissible\"\n        class=\"nav-drawer-dismissible\"\n      >\n       ${navContent}\n       <main slot=\"app\" class=\"main-content\">\n         <ino-button ino-fill=\"outline\" ino-dense class=\"toggle-nav\">Toggle Navigation</ino-button>\n         ${mainContent}\n       </main>\n      </ino-nav-drawer>\n    </div>\n  `;\n};\n\nexport const Modal = () => {\n  return /* html */ `\n      <div class=\"story-nav-drawer__modal\">\n        <ino-nav-drawer\n          ino-open=\"false\"\n          ino-variant=\"modal\"\n          class=\"nav-drawer-modal\"\n        >\n        ${navContent}\n        <main slot=\"app\" class=\"main-content\">\n          <h4>Variant: Modal</h4>\n          <ino-button ino-fill=\"outline\" ino-dense class=\"toggle-nav\">Toggle Navigation</ino-button>\n           ${mainContent}\n         </main>\n        </ino-nav-drawer>\n      </div>\n    `;\n};\n",locationsMap:{"default-usage":{startLoc:{col:28,line:123},endLoc:{col:3,line:248},startBody:{col:28,line:123},endBody:{col:3,line:248}},dismissible:{startLoc:{col:27,line:252},endLoc:{col:1,line:269},startBody:{col:27,line:252},endBody:{col:1,line:269}},modal:{startLoc:{col:21,line:271},endLoc:{col:1,line:288},startBody:{col:21,line:271},endBody:{col:1,line:288}}}}),_defineProperty(_parameters,"actions",{handles:["openChange .customizable-drawer","click .toggle-nav","clickEl ino-nav-item"]}),_parameters),decorators:[function(story){return function subscribeToComponentEvents(){return document.addEventListener("openChange",openChangeHandle),document.addEventListener("click",clickHandler),document.addEventListener("clickEl",clickHandler),unsubscribeFromComponentEvents}(),story()}]};var navContent='\n<ino-img slot="logo"\n    src="https://app-uat.james.inma.inovex.io/static/media/james-logo.e7e70758.png"\n    width="50"\n></ino-img>\n<div slot="subtitle">inovex</div>\n\n<ino-list slot="content">\n  <ino-nav-item ino-text="Some Link" ino-activated>\n    <ino-icon\n      ino-icon="onboarding"\n    ></ino-icon>\n  </ino-nav-item>\n  <ino-nav-item ino-text="Some other Link">\n    <ino-icon\n      ino-icon="calendar"\n    ></ino-icon>\n  </ino-nav-item>\n  <ino-nav-item ino-text="Some other Link">\n    <ino-icon\n      ino-icon="employee"\n    ></ino-icon>\n  </ino-nav-item>\n  <ino-list-divider></ino-list-divider>\n  <ino-nav-item ino-text="Some settings link">\n    <ino-icon\n      ino-icon="settings"\n    ></ino-icon>\n  </ino-nav-item>\n</ino-list>\n\n<ino-list slot="footer">\n  <ino-nav-item ino-text="My Profile">\n    <ino-img src="https://picsum.photos/id/1027/250/250.jpg" style="border-radius: 50%" ino-ratio-width="1" ino-ratio-height="1"></ino-img>\n  </ino-nav-item>\n</ino-list>\n',mainContent="\n<p>At some point someone will replace this block of text with useful words so customers can learn more about the products and services you offer! Placeholder text is useful when you need to see what a page design looks like, but the actual content isn't available. It's like having someone with identical measurements check the fit of a dress before trying it on yourself. </p> <p>You are currently reading Honest Ipsum, the placeholder text that needs no explanation. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This is just temporary placeholder text; like when a friend saves a spot for you in line, only to be replaced by you when you return. </p> <p>A web developer will often use filler text so they can focus on the design of the web page. It will be replaced with real content later. It is useful for a web developer to use placeholder text so they can easily see what different fonts look like on a realistic paragraph. </p> <p>Once the final copy for the web page has been created, it will go here. You are currently reading some filler text. A web developer will often use filler text so they can focus on the design of the web page. It will be replaced with real content later. </p> <p>We aren't quite sure what to put here yet. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This text is only here to validate the layout. It isn't worth reading. What you are reading now is not what you will be reading in this space once this web page is completed. </p> <p>We aren't quite sure what to put here yet. Determining whether the typeface works or not is only possible if there is text for it to be applied to. This text is only here to validate the layout. It isn't worth reading. What you are reading now is not what you will be reading in this space once this web page is completed. </p>\n",ino_nav_drawer_stories_DefaultUsage=function DefaultUsage(){return"\n      <style>\n        .customizable-drawer {\n          --ino-nav-drawer-background: ".concat(Object(dist.text)("--ino-nav-drawer-background","#ffffff","Custom Properties"),";\n          --ino-nav-drawer-text-color: ").concat(Object(dist.text)("--ino-nav-drawer-text-color","#003c7e","Custom Properties"),";\n          --ino-nav-drawer-width-open: ").concat(Object(dist.text)("--ino-nav-drawer-width-open","250px","Custom Properties"),";\n          --ino-nav-drawer-width-closed: ").concat(Object(dist.text)("--ino-nav-drawer-width-closed","72px","Custom Properties"),";\n          --ino-nav-drawer-height: ").concat(Object(dist.text)("--ino-nav-drawer-height","100%","Custom Properties"),";\n          --ino-nav-drawer-transition-duration: ").concat(Object(dist.text)("--ino-nav-drawer-transition-duration","0.25s","Custom Properties"),";\n          --ino-nav-drawer-timing-function: ").concat(Object(dist.text)("--ino-nav-drawer-timing-function","(0.4, 0, 0.2, 1)","Custom Properties"),";\n        }\n\n        ino-nav-item {\n          --ino-nav-item-color: ").concat(Object(dist.text)("--ino-nav-item-color","gray","Custom Properties"),";\n          --ino-nav-item-color-active: ").concat(Object(dist.text)("--ino-nav-item-color-active","#3d40f5","Custom Properties"),';\n        }\n      </style>\n\n      <div class="story-nav-drawer">\n        <h4>Customizable</h4>\n        <div class="story-nav-drawer__default">\n          <ino-nav-drawer\n            ino-open=').concat(Object(dist.boolean)("ino-open",!1,"Props"),'\n            ino-anchor="').concat(Object(dist.select)("ino-anchor",{left:"left",right:"right"},"left","Props"),'"\n            ino-variant="').concat(Object(dist.select)("ino-variant",{docked:"docked",dismissible:"dismissible",modal:"modal"},"docked","Props"),'"\n            class="customizable-drawer"\n          >\n            <div slot="header">\n              <ino-img\n                src="').concat(Object(dist.text)("header - image src","https://app-uat.james.inma.inovex.io/static/media/james-logo.e7e70758.png","Slots"),'"\n                width="50"\n              ></ino-img>\n              <p>inovex</p>\n            </div>\n            <ino-list slot="content">\n              <ino-nav-item ino-text="').concat(Object(dist.text)("default - 1st list item","Some Link","Slots"),'" ino-activated>\n                <ino-icon\n                  ino-icon="onboarding"\n                ></ino-icon>\n              </ino-nav-item>\n            </ino-list>\n            <ino-list slot="footer">\n              <ino-nav-item ino-text="').concat(Object(dist.text)("footer - 1st list item","My Profile","Slots"),'">\n              <ino-icon ino-icon="employee"></ino-icon>\n              </ino-nav-item>\n            </ino-list>\n\n            <main slot="app" class="main-content">\n              <ino-button ino-fill="outline" ino-dense class="toggle-nav">Toggle Navigation</ino-button>\n              <br /> <br />\n              ').concat(Object(dist.text)("App Content","Your App goes here 🤘","Slots"),"\n              ").concat(mainContent,'\n              <br/><br />\n            </main>\n          </ino-nav-drawer>\n        </div>\n\n        <h4>Variant: Docked, right side</h4>\n        <div class="story-nav-drawer__docked_anchor--right">\n          <ino-nav-drawer\n            ino-open="false"\n            ino-anchor="right"\n            class="nav-drawer-docked-right"\n          >\n            ').concat(navContent,'\n            <main slot="app" class="main-content">\n              ').concat(mainContent,"\n            </main>\n          </ino-nav-drawer>\n        </div>\n      </div>\n  ")};ino_nav_drawer_stories_DefaultUsage.decorators=[Object(with_stencil_readme.a)('# ino-nav-drawer\n\nA navigation drawer component with different variants, setting up the base layout for your app.\nIt functions as a wrapper around the material [drawer](https://github.com/material-components/material-components-web/blob/master/packages/mdc-drawer/) component.\n\n> Note: The navigation drawer works best with `ino-list` and `ino-nav-item`s inside.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n  .querySelector(\'ino-nav-drawer\')\n  .addEventListener(\'openChange\', _ => alert(\'Drawer was toggled!\')) // watch for toggle change\n  .setAttribute(\'ino-open\', true); // open drawer\n```\n\n```html\n<ino-nav-drawer\n  ino-open="<boolean>"\n  ino-anchor="left|right"\n  ino-variant="docked|dismissible|modal"\n>\n  <ino-list slot="content">\n    <ino-nav-item ino-text="View1">\n      <ino-icon ino-icon="user">\n    </ino-nav-item>\n    <ino-nav-item ino-text="View2">\n      <ino-icon ino-icon="settings">\n    </ino-nav-item>\n  </ino-list>\n\n  <main slot="app">\n    App Content\n  </main>\n</ino-nav-drawer>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoNavDrawer } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoNavDrawer\n        inoOpen="false"\n        inoAnchor="left"\n        inoVariant="docked"\n        onOpen={_ => alert(\'Yeah, you just opened the drawer!\')}\n      >\n        <ino-list slot="header">\n          <ino-img src="https://picsum.photos/50/50" />\n        </ino-list>\n        <ino-list slot="content">\n          <ino-nav-item ino-text="Some Link">\n            <ino-icon ino-icon="onboarding"></ino-icon>\n          </ino-nav-item>\n        </ino-list>\n        <ino-list slot="footer">\n          <ino-nav-item ino-text="My Profile">\n            <ino-img\n              src="https://picsum.photos/id/1027/250/250.jpg"\n              style="border-radius: 50%"\n              ino-ratio-width="1"\n              ino-ratio-height="1"\n            ></ino-img>\n          </ino-nav-item>\n        </ino-list>\n\n        <main slot="app">\n          <App /> /* Your app goes here */\n        </main>\n      </InoNavDrawer>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoNavDrawer } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Drawer: React.FunctionComponent<Components.InoNavDrawerAttributes> = props => {\n  const { inoOpen, inoVariant, inoAnchor } = props;\n\n  return (\n    <InoNavDrawer\n      inoOpen={inoOpen}\n      inoVariant={inoVariant}\n      onClick={onClick}\n    >\n      Drawer Content\n\n      <main slot="app">\n        App Content\n      </main>\n    </InoNavDrawer>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <Drawer\n        inoVariant="dismissible"\n        inoAnchor="left"\n        inoOpen="true"\n      />\n    );\n  }\n}\n```\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property     | Attribute     | Description                                                                                    | Type                                   | Default    |\n| ------------ | ------------- | ---------------------------------------------------------------------------------------------- | -------------------------------------- | ---------- |\n| `inoAnchor`  | `ino-anchor`  | Side from which the drawer will appear. Possible values: `left` (default), `right`.            | `"left" \\| "right"`                    | `\'left\'`   |\n| `inoOpen`    | `ino-open`    | Marks this element as open. (**unmanaged**)                                                    | `boolean`                              | `false`    |\n| `inoVariant` | `ino-variant` | The variant to use for the drawer Possible values: `docked` (default), `dismissible`, `modal`. | `"dismissible" \\| "docked" \\| "modal"` | `\'docked\'` |\n\n\n## Events\n\n| Event        | Description                                                                                                           | Type                   |\n| ------------ | --------------------------------------------------------------------------------------------------------------------- | ---------------------- |\n| `openChange` | Emits when the user clicks on the drawer toggle icon to change the open state. Contains the status in `event.detail`. | `CustomEvent<boolean>` |\n\n\n## CSS Custom Properties\n\n| Name                                   | Description                                             |\n| -------------------------------------- | ------------------------------------------------------- |\n| `--ino-nav-drawer-background`          | Background of the drawer.                               |\n| `--ino-nav-drawer-height`              | Height of the drawer.                                   |\n| `--ino-nav-drawer-text-color`          | Color of text inside the drawer.                        |\n| `--ino-nav-drawer-timing-function`     | Timing function of the slide animation of the drawer.   |\n| `--ino-nav-drawer-transition-duration` | Duration of the slide animation of the drawer.          |\n| `--ino-nav-drawer-width-closed`        | Docked variant only! The width of the collapsed drawer. |\n| `--ino-nav-drawer-width-open`          | The width of the open drawer.                           |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-icon-button](../ino-icon-button)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-nav-drawer --\x3e ino-icon-button\n  ino-icon-button --\x3e ino-icon\n  style ino-nav-drawer fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')];var Dismissible=function Dismissible(){return'\n    <h4>Variant: Dismissble</h4>\n    <div class="story-nav-drawer__dismissible">\n      <ino-nav-drawer\n        ino-open="false"\n        ino-variant="dismissible"\n        class="nav-drawer-dismissible"\n      >\n       '.concat(navContent,'\n       <main slot="app" class="main-content">\n         <ino-button ino-fill="outline" ino-dense class="toggle-nav">Toggle Navigation</ino-button>\n         ').concat(mainContent,"\n       </main>\n      </ino-nav-drawer>\n    </div>\n  ")},Modal=function Modal(){return'\n      <div class="story-nav-drawer__modal">\n        <ino-nav-drawer\n          ino-open="false"\n          ino-variant="modal"\n          class="nav-drawer-modal"\n        >\n        '.concat(navContent,'\n        <main slot="app" class="main-content">\n          <h4>Variant: Modal</h4>\n          <ino-button ino-fill="outline" ino-dense class="toggle-nav">Toggle Navigation</ino-button>\n           ').concat(mainContent,"\n         </main>\n        </ino-nav-drawer>\n      </div>\n    ")}},1364:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_popover_stories_DefaultUsage}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1300);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-popover/readme.md\';\\nimport \'./ino-popover.scss\';\\n\\nexport default {\\n  title: \'Notification/<ino-popover>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-popover\\">\\n      <ino-button id=\\"popover-target\\">Popover</ino-button>\\n      <ino-popover\\n        ino-for=\\"${text(\'ino-for\', \'popover-target\')}\\"\\n        ino-placement=\\"${select(\'ino-placement\', [\'top\', \'right\', \'bottom\', \'left\'], \'top\')}\\"\\n        ino-color-scheme=\\"${select(\\n          \'ino-color-scheme\',\\n          [\'primary\', \'secondary\', \'light\', \'transparent\'],\\n          \'transparent\'\\n        )}\\"\\n        ino-trigger=\\"${select(\\n          \'ino-trigger\',\\n          [\\n            \'mouseenter\',\\n            \'focus\',\\n            \'click\',\\n            \'mouseenter focus\',\\n            \'mouseenter click\',\\n            \'focus click\',\\n            \'mouseenter focus click\',\\n          ],\\n          \'mouseenter focus\'\\n        )}\\">\\n        <div class=\\"styled-popover\\"><ino-icon ino-icon=\\"user\\"></ino-icon> This is a styled popover.</div>\\n      </ino-popover>\\n\\n      <h4>Placements</h4>\\n      <ino-popover ino-placement=\\"left\\" ino-for=\\"popover-positions-target\\">This is a simple popover on the left</ino-popover>\\n      <ino-popover ino-placement=\\"right\\" ino-for=\\"popover-positions-target\\">This is a simple popover on the right</ino-popover>\\n      <ino-popover ino-placement=\\"top\\" ino-for=\\"popover-positions-target\\">This is a simple popover on the top</ino-popover>\\n      <ino-popover ino-placement=\\"bottom\\" ino-for=\\"popover-positions-target\\">This is a simple popover on the bottom</ino-popover>\\n      <ino-button class=\\"placement-button\\" id=\\"popover-positions-target\\">Popover</ino-button>\\n\\n      <h4>Triggers</h4>\\n      <ino-button id=\\"popover-hover-focus\\">Hover & focus</ino-button>\\n      <ino-popover ino-for=\\"popover-hover-focus\\">This popover occurs on hover and focus.</ino-popover>\\n\\n      <ino-button id=\\"popover-click\\">Click</ino-button>\\n      <ino-popover ino-for=\\"popover-click\\" ino-trigger=\\"click\\">This popover occurs on click.</ino-popover>\\n    </div>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":13},"endLoc":{"col":3,"line":54},"startBody":{"col":28,"line":13},"endBody":{"col":3,"line":54}}};\n    \nimport { select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-popover/readme.md\';\nimport \'./ino-popover.scss\';\n\nexport default {parameters: {"storySource":{"source":"import { select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-popover/readme.md\';\\nimport \'./ino-popover.scss\';\\n\\nexport default {\\n  title: \'Notification/<ino-popover>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-popover\\">\\n      <ino-button id=\\"popover-target\\">Popover</ino-button>\\n      <ino-popover\\n        ino-for=\\"${text(\'ino-for\', \'popover-target\')}\\"\\n        ino-placement=\\"${select(\'ino-placement\', [\'top\', \'right\', \'bottom\', \'left\'], \'top\')}\\"\\n        ino-color-scheme=\\"${select(\\n          \'ino-color-scheme\',\\n          [\'primary\', \'secondary\', \'light\', \'transparent\'],\\n          \'transparent\'\\n        )}\\"\\n        ino-trigger=\\"${select(\\n          \'ino-trigger\',\\n          [\\n            \'mouseenter\',\\n            \'focus\',\\n            \'click\',\\n            \'mouseenter focus\',\\n            \'mouseenter click\',\\n            \'focus click\',\\n            \'mouseenter focus click\',\\n          ],\\n          \'mouseenter focus\'\\n        )}\\">\\n        <div class=\\"styled-popover\\"><ino-icon ino-icon=\\"user\\"></ino-icon> This is a styled popover.</div>\\n      </ino-popover>\\n\\n      <h4>Placements</h4>\\n      <ino-popover ino-placement=\\"left\\" ino-for=\\"popover-positions-target\\">This is a simple popover on the left</ino-popover>\\n      <ino-popover ino-placement=\\"right\\" ino-for=\\"popover-positions-target\\">This is a simple popover on the right</ino-popover>\\n      <ino-popover ino-placement=\\"top\\" ino-for=\\"popover-positions-target\\">This is a simple popover on the top</ino-popover>\\n      <ino-popover ino-placement=\\"bottom\\" ino-for=\\"popover-positions-target\\">This is a simple popover on the bottom</ino-popover>\\n      <ino-button class=\\"placement-button\\" id=\\"popover-positions-target\\">Popover</ino-button>\\n\\n      <h4>Triggers</h4>\\n      <ino-button id=\\"popover-hover-focus\\">Hover & focus</ino-button>\\n      <ino-popover ino-for=\\"popover-hover-focus\\">This popover occurs on hover and focus.</ino-popover>\\n\\n      <ino-button id=\\"popover-click\\">Click</ino-button>\\n      <ino-popover ino-for=\\"popover-click\\" ino-trigger=\\"click\\">This popover occurs on click.</ino-popover>\\n    </div>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":13},"endLoc":{"col":3,"line":54},"startBody":{"col":28,"line":13},"endBody":{"col":3,"line":54}}}},},\n  title: \'Notification/<ino-popover>\',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-popover">\n      <ino-button id="popover-target">Popover</ino-button>\n      <ino-popover\n        ino-for="${text(\'ino-for\', \'popover-target\')}"\n        ino-placement="${select(\'ino-placement\', [\'top\', \'right\', \'bottom\', \'left\'], \'top\')}"\n        ino-color-scheme="${select(\n          \'ino-color-scheme\',\n          [\'primary\', \'secondary\', \'light\', \'transparent\'],\n          \'transparent\'\n        )}"\n        ino-trigger="${select(\n          \'ino-trigger\',\n          [\n            \'mouseenter\',\n            \'focus\',\n            \'click\',\n            \'mouseenter focus\',\n            \'mouseenter click\',\n            \'focus click\',\n            \'mouseenter focus click\',\n          ],\n          \'mouseenter focus\'\n        )}">\n        <div class="styled-popover"><ino-icon ino-icon="user"></ino-icon> This is a styled popover.</div>\n      </ino-popover>\n\n      <h4>Placements</h4>\n      <ino-popover ino-placement="left" ino-for="popover-positions-target">This is a simple popover on the left</ino-popover>\n      <ino-popover ino-placement="right" ino-for="popover-positions-target">This is a simple popover on the right</ino-popover>\n      <ino-popover ino-placement="top" ino-for="popover-positions-target">This is a simple popover on the top</ino-popover>\n      <ino-popover ino-placement="bottom" ino-for="popover-positions-target">This is a simple popover on the bottom</ino-popover>\n      <ino-button class="placement-button" id="popover-positions-target">Popover</ino-button>\n\n      <h4>Triggers</h4>\n      <ino-button id="popover-hover-focus">Hover & focus</ino-button>\n      <ino-popover ino-for="popover-hover-focus">This popover occurs on hover and focus.</ino-popover>\n\n      <ino-button id="popover-click">Click</ino-button>\n      <ino-popover ino-for="popover-click" ino-trigger="click">This popover occurs on click.</ino-popover>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:21},endLoc:{col:3,line:62},startBody:{col:28,line:21},endBody:{col:3,line:62}}}}},"storySource",{source:"import { select, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-popover/readme.md';\nimport './ino-popover.scss';\n\nexport default {\n  title: 'Notification/<ino-popover>',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class=\"story-popover\">\n      <ino-button id=\"popover-target\">Popover</ino-button>\n      <ino-popover\n        ino-for=\"${text('ino-for', 'popover-target')}\"\n        ino-placement=\"${select('ino-placement', ['top', 'right', 'bottom', 'left'], 'top')}\"\n        ino-color-scheme=\"${select(\n          'ino-color-scheme',\n          ['primary', 'secondary', 'light', 'transparent'],\n          'transparent'\n        )}\"\n        ino-trigger=\"${select(\n          'ino-trigger',\n          [\n            'mouseenter',\n            'focus',\n            'click',\n            'mouseenter focus',\n            'mouseenter click',\n            'focus click',\n            'mouseenter focus click',\n          ],\n          'mouseenter focus'\n        )}\">\n        <div class=\"styled-popover\"><ino-icon ino-icon=\"user\"></ino-icon> This is a styled popover.</div>\n      </ino-popover>\n\n      <h4>Placements</h4>\n      <ino-popover ino-placement=\"left\" ino-for=\"popover-positions-target\">This is a simple popover on the left</ino-popover>\n      <ino-popover ino-placement=\"right\" ino-for=\"popover-positions-target\">This is a simple popover on the right</ino-popover>\n      <ino-popover ino-placement=\"top\" ino-for=\"popover-positions-target\">This is a simple popover on the top</ino-popover>\n      <ino-popover ino-placement=\"bottom\" ino-for=\"popover-positions-target\">This is a simple popover on the bottom</ino-popover>\n      <ino-button class=\"placement-button\" id=\"popover-positions-target\">Popover</ino-button>\n\n      <h4>Triggers</h4>\n      <ino-button id=\"popover-hover-focus\">Hover & focus</ino-button>\n      <ino-popover ino-for=\"popover-hover-focus\">This popover occurs on hover and focus.</ino-popover>\n\n      <ino-button id=\"popover-click\">Click</ino-button>\n      <ino-popover ino-for=\"popover-click\" ino-trigger=\"click\">This popover occurs on click.</ino-popover>\n    </div>\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:13},endLoc:{col:3,line:54},startBody:{col:28,line:13},endBody:{col:3,line:54}}}}),title:"Notification/<ino-popover>",decorators:[Object(with_stencil_readme.a)('# ino-popover\n\nA Popover is a dialog which is bound to a specific element and appears on top of the current page. It uses [tippy.js](https://atomiks.github.io/tippyjs/) to position the popover correctly.\n\nThe Popover and [Tooltip](https://elements.inovex.de/dist/latest/storybook/?path=/story/notification-ino-tooltip--default-usage) components are very similar. \nHowever, popovers are complex dialogs consisting of several HTML elements, while tooltips can only display plain text.\n\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-popover ino-for="<string>" ino-placement="<string" ino-trigger="<string>">\n  Any desired HTML\n</ino-popover>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoPopover } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoPopover inoPlacement="left" inoFor="popover-positions-target">\n        This is a simple popover on the left\n      </InoPopover>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoPopover } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Popover: React.FunctionComponent<Components.InoPopoverAttributes> = props => {\n  const { inoPlacement, inoFor } = props;\n\n  return (\n    <InoPopover inoPlacement={inoPlacement} inoFor={inoFor}>\n      {props.children}\n    </InoPopover>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <Popover inoPlacement="left" inoFor="popover-positions-target">\n        This is a simple popover on the left\n      </Popover>\n    );\n  }\n}\n```\n\n## Additional Hints\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property         | Attribute          | Description                                                                                                                              | Type                                                                                                                                                                                                                                                                                                                                   | Default              |\n| ---------------- | ------------------ | ---------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------- |\n| `inoColorScheme` | `ino-color-scheme` | Sets the color scheme of the popup Valid options include: \'primary\', \'secondary\', \'light\', \'transparent\'                                 | `string`                                                                                                                                                                                                                                                                                                                               | `\'primary\'`          |\n| `inoFor`         | `ino-for`          | The target id the tooltip belongs to. If not given, the tooltip is attached to the parent component.                                     | `string`                                                                                                                                                                                                                                                                                                                               | `undefined`          |\n| `inoPlacement`   | `ino-placement`    | The placement of this popover. Accepted values: `top(-start, -end)`, `right(-start, -end)`, `bottom(-start, -end)`, `left(-start, -end)` | `"auto" \\| "auto-end" \\| "auto-start" \\| "bottom" \\| "bottom-end" \\| "bottom-start" \\| "left" \\| "left-end" \\| "left-start" \\| "right" \\| "right-end" \\| "right-start" \\| "top" \\| "top-end" \\| "top-start"`                                                                                                                           | `\'auto\'`             |\n| `inoTrigger`     | `ino-trigger`      | The trigger to show the tooltip - either click, hover or focus. Multiple triggers are possible by separating them with a space.          | `"click focus mouseenter" \\| "click focus" \\| "click mouseenter focus" \\| "click mouseenter" \\| "click" \\| "focus click mouseenter" \\| "focus click" \\| "focus mouseenter click" \\| "focus mouseenter" \\| "focus" \\| "mouseenter click focus" \\| "mouseenter click" \\| "mouseenter focus click" \\| "mouseenter focus" \\| "mouseenter"` | `\'mouseenter focus\'` |\n\n\n## Methods\n\n### `getTippyInstance() => Promise<any>`\n\nReturns the internally used tippy.js instance\nFor more informations see: https://atomiks.github.io/tippyjs/\n\n#### Returns\n\nType: `Promise<any>`\n\n\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')]};var ino_popover_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-popover">\n      <ino-button id="popover-target">Popover</ino-button>\n      <ino-popover\n        ino-for="'.concat(Object(dist.text)("ino-for","popover-target"),'"\n        ino-placement="').concat(Object(dist.select)("ino-placement",["top","right","bottom","left"],"top"),'"\n        ino-color-scheme="').concat(Object(dist.select)("ino-color-scheme",["primary","secondary","light","transparent"],"transparent"),'"\n        ino-trigger="').concat(Object(dist.select)("ino-trigger",["mouseenter","focus","click","mouseenter focus","mouseenter click","focus click","mouseenter focus click"],"mouseenter focus"),'">\n        <div class="styled-popover"><ino-icon ino-icon="user"></ino-icon> This is a styled popover.</div>\n      </ino-popover>\n\n      <h4>Placements</h4>\n      <ino-popover ino-placement="left" ino-for="popover-positions-target">This is a simple popover on the left</ino-popover>\n      <ino-popover ino-placement="right" ino-for="popover-positions-target">This is a simple popover on the right</ino-popover>\n      <ino-popover ino-placement="top" ino-for="popover-positions-target">This is a simple popover on the top</ino-popover>\n      <ino-popover ino-placement="bottom" ino-for="popover-positions-target">This is a simple popover on the bottom</ino-popover>\n      <ino-button class="placement-button" id="popover-positions-target">Popover</ino-button>\n\n      <h4>Triggers</h4>\n      <ino-button id="popover-hover-focus">Hover & focus</ino-button>\n      <ino-popover ino-for="popover-hover-focus">This popover occurs on hover and focus.</ino-popover>\n\n      <ino-button id="popover-click">Click</ino-button>\n      <ino-popover ino-for="popover-click" ino-trigger="click">This popover occurs on click.</ino-popover>\n    </div>\n  ')}},1365:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return DefaultUsage}));var with_stencil_readme=__webpack_require__(2);__webpack_require__(1302);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import componentReadme from \'_local-elements/src/components/ino-progress-bar/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport \'./ino-progress-bar.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n\\n  const handleFileSelection = (e) => {\\n    const bar = document.querySelector(\'#example\');\\n    let totalFileSize = 0;\\n    let loaded = 0;\\n    const files = e.detail.files;\\n\\n    if (files) {\\n      for (let i = 0; i < files.length; i++) {\\n        totalFileSize += files[i].size;\\n      }\\n      for (let i = 0; i < files.length; i++) {\\n        let reader = new FileReader();\\n        reader.onloadend = (e) => {\\n          loaded += e.total;\\n        };\\n        reader.onprogress = (e) => {\\n          bar.inoProgress = (loaded + e.loaded) / totalFileSize;\\n        };\\n        reader.readAsDataURL(files[i]);\\n      }\\n    }\\n  };\\n\\n  const handleClick = (e) => {\\n    if (e.target.tagName.toLowerCase() === \'ino-button\') {\\n      const bar = document.querySelector(\'#example\');\\n      bar.inoProgress = 0;\\n    }\\n  };\\n\\n  document.addEventListener(\'changeFile\', handleFileSelection);\\n  document.addEventListener(\'click\', handleClick);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'changeFile\', handleFileSelection);\\n    document.removeEventListener(\'click\', handleClick);\\n  };\\n}\\n\\nexport default {\\n  title: \'Notification/<ino-progress-bar>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /* html */ `\\n\\n    <h4>With custom max and min values</h4>\\n    <ino-progress-bar ino-progress=\\"9\\"></ino-progress-bar>\\n\\n\\n    <h3>Example</h3>\\n    <div class=\\"progress-bar-example\\">\\n        <ino-progress-bar ino-progress=\\"0\\" ino-buffer=\\"1\\" id=\\"example\\"></ino-progress-bar>\\n        <ino-input-file ino-label=\\"Upload\\" multiple></ino-input-file>\\n    </div>\\n\\n\\n    <h3>Variants</h3>\\n    <h4>With buffering dots</h4>\\n    <ino-progress-bar ino-buffer=\\"0.8\\" ino-progress=\\"0.3\\"></ino-progress-bar>\\n\\n    <h4>Without buffering dots</h4>\\n    <ino-progress-bar ino-buffer=\\"1\\" ino-progress=\\"0.3\\"></ino-progress-bar>\\n\\n    <h4>Indeterminate progress bar</h4>\\n    <ino-progress-bar ino-indeterminate></ino-progress-bar>\\n\\n    <h4>Inverted progress bar</h4>\\n    <ino-progress-bar ino-reversed ino-progress=\\"0.6\\" ino-buffer=\\"0.8\\"></ino-progress-bar>\\n    `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":61},"endLoc":{"col":5,"line":86},"startBody":{"col":28,"line":61},"endBody":{"col":5,"line":86}}};\n    \nimport componentReadme from \'_local-elements/src/components/ino-progress-bar/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport \'./ino-progress-bar.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n\n  const handleFileSelection = (e) => {\n    const bar = document.querySelector(\'#example\');\n    let totalFileSize = 0;\n    let loaded = 0;\n    const files = e.detail.files;\n\n    if (files) {\n      for (let i = 0; i < files.length; i++) {\n        totalFileSize += files[i].size;\n      }\n      for (let i = 0; i < files.length; i++) {\n        let reader = new FileReader();\n        reader.onloadend = (e) => {\n          loaded += e.total;\n        };\n        reader.onprogress = (e) => {\n          bar.inoProgress = (loaded + e.loaded) / totalFileSize;\n        };\n        reader.readAsDataURL(files[i]);\n      }\n    }\n  };\n\n  const handleClick = (e) => {\n    if (e.target.tagName.toLowerCase() === \'ino-button\') {\n      const bar = document.querySelector(\'#example\');\n      bar.inoProgress = 0;\n    }\n  };\n\n  document.addEventListener(\'changeFile\', handleFileSelection);\n  document.addEventListener(\'click\', handleClick);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'changeFile\', handleFileSelection);\n    document.removeEventListener(\'click\', handleClick);\n  };\n}\n\nexport default {parameters: {"storySource":{"source":"import componentReadme from \'_local-elements/src/components/ino-progress-bar/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport \'./ino-progress-bar.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n\\n  const handleFileSelection = (e) => {\\n    const bar = document.querySelector(\'#example\');\\n    let totalFileSize = 0;\\n    let loaded = 0;\\n    const files = e.detail.files;\\n\\n    if (files) {\\n      for (let i = 0; i < files.length; i++) {\\n        totalFileSize += files[i].size;\\n      }\\n      for (let i = 0; i < files.length; i++) {\\n        let reader = new FileReader();\\n        reader.onloadend = (e) => {\\n          loaded += e.total;\\n        };\\n        reader.onprogress = (e) => {\\n          bar.inoProgress = (loaded + e.loaded) / totalFileSize;\\n        };\\n        reader.readAsDataURL(files[i]);\\n      }\\n    }\\n  };\\n\\n  const handleClick = (e) => {\\n    if (e.target.tagName.toLowerCase() === \'ino-button\') {\\n      const bar = document.querySelector(\'#example\');\\n      bar.inoProgress = 0;\\n    }\\n  };\\n\\n  document.addEventListener(\'changeFile\', handleFileSelection);\\n  document.addEventListener(\'click\', handleClick);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'changeFile\', handleFileSelection);\\n    document.removeEventListener(\'click\', handleClick);\\n  };\\n}\\n\\nexport default {\\n  title: \'Notification/<ino-progress-bar>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /* html */ `\\n\\n    <h4>With custom max and min values</h4>\\n    <ino-progress-bar ino-progress=\\"9\\"></ino-progress-bar>\\n\\n\\n    <h3>Example</h3>\\n    <div class=\\"progress-bar-example\\">\\n        <ino-progress-bar ino-progress=\\"0\\" ino-buffer=\\"1\\" id=\\"example\\"></ino-progress-bar>\\n        <ino-input-file ino-label=\\"Upload\\" multiple></ino-input-file>\\n    </div>\\n\\n\\n    <h3>Variants</h3>\\n    <h4>With buffering dots</h4>\\n    <ino-progress-bar ino-buffer=\\"0.8\\" ino-progress=\\"0.3\\"></ino-progress-bar>\\n\\n    <h4>Without buffering dots</h4>\\n    <ino-progress-bar ino-buffer=\\"1\\" ino-progress=\\"0.3\\"></ino-progress-bar>\\n\\n    <h4>Indeterminate progress bar</h4>\\n    <ino-progress-bar ino-indeterminate></ino-progress-bar>\\n\\n    <h4>Inverted progress bar</h4>\\n    <ino-progress-bar ino-reversed ino-progress=\\"0.6\\" ino-buffer=\\"0.8\\"></ino-progress-bar>\\n    `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":61},"endLoc":{"col":5,"line":86},"startBody":{"col":28,"line":61},"endBody":{"col":5,"line":86}}}},},\n  title: \'Notification/<ino-progress-bar>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /* html */ `\n\n    <h4>With custom max and min values</h4>\n    <ino-progress-bar ino-progress="9"></ino-progress-bar>\n\n\n    <h3>Example</h3>\n    <div class="progress-bar-example">\n        <ino-progress-bar ino-progress="0" ino-buffer="1" id="example"></ino-progress-bar>\n        <ino-input-file ino-label="Upload" multiple></ino-input-file>\n    </div>\n\n\n    <h3>Variants</h3>\n    <h4>With buffering dots</h4>\n    <ino-progress-bar ino-buffer="0.8" ino-progress="0.3"></ino-progress-bar>\n\n    <h4>Without buffering dots</h4>\n    <ino-progress-bar ino-buffer="1" ino-progress="0.3"></ino-progress-bar>\n\n    <h4>Indeterminate progress bar</h4>\n    <ino-progress-bar ino-indeterminate></ino-progress-bar>\n\n    <h4>Inverted progress bar</h4>\n    <ino-progress-bar ino-reversed ino-progress="0.6" ino-buffer="0.8"></ino-progress-bar>\n    `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:69},endLoc:{col:5,line:94},startBody:{col:28,line:69},endBody:{col:5,line:94}}}}},"storySource",{source:'import componentReadme from \'_local-elements/src/components/ino-progress-bar/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport \'./ino-progress-bar.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n\n  const handleFileSelection = (e) => {\n    const bar = document.querySelector(\'#example\');\n    let totalFileSize = 0;\n    let loaded = 0;\n    const files = e.detail.files;\n\n    if (files) {\n      for (let i = 0; i < files.length; i++) {\n        totalFileSize += files[i].size;\n      }\n      for (let i = 0; i < files.length; i++) {\n        let reader = new FileReader();\n        reader.onloadend = (e) => {\n          loaded += e.total;\n        };\n        reader.onprogress = (e) => {\n          bar.inoProgress = (loaded + e.loaded) / totalFileSize;\n        };\n        reader.readAsDataURL(files[i]);\n      }\n    }\n  };\n\n  const handleClick = (e) => {\n    if (e.target.tagName.toLowerCase() === \'ino-button\') {\n      const bar = document.querySelector(\'#example\');\n      bar.inoProgress = 0;\n    }\n  };\n\n  document.addEventListener(\'changeFile\', handleFileSelection);\n  document.addEventListener(\'click\', handleClick);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'changeFile\', handleFileSelection);\n    document.removeEventListener(\'click\', handleClick);\n  };\n}\n\nexport default {\n  title: \'Notification/<ino-progress-bar>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /* html */ `\n\n    <h4>With custom max and min values</h4>\n    <ino-progress-bar ino-progress="9"></ino-progress-bar>\n\n\n    <h3>Example</h3>\n    <div class="progress-bar-example">\n        <ino-progress-bar ino-progress="0" ino-buffer="1" id="example"></ino-progress-bar>\n        <ino-input-file ino-label="Upload" multiple></ino-input-file>\n    </div>\n\n\n    <h3>Variants</h3>\n    <h4>With buffering dots</h4>\n    <ino-progress-bar ino-buffer="0.8" ino-progress="0.3"></ino-progress-bar>\n\n    <h4>Without buffering dots</h4>\n    <ino-progress-bar ino-buffer="1" ino-progress="0.3"></ino-progress-bar>\n\n    <h4>Indeterminate progress bar</h4>\n    <ino-progress-bar ino-indeterminate></ino-progress-bar>\n\n    <h4>Inverted progress bar</h4>\n    <ino-progress-bar ino-reversed ino-progress="0.6" ino-buffer="0.8"></ino-progress-bar>\n    `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:61},endLoc:{col:5,line:86},startBody:{col:28,line:61},endBody:{col:5,line:86}}}}),title:"Notification/<ino-progress-bar>",decorators:[Object(with_stencil_readme.a)("# ino-progress-bar\nThe ino-progress-bar is a linear progress bar based on the mcw-linear-progress component.\n\n## Usage\n\nThe component can be used as follows:\n\n```html\n<ino-progress-bar\n    ino-buffer=\"0.7\"\n    ino-progress=\"0.4\"\n    ino-reversed\n    ino-indeterminate\n    ino-label=\"Progress Bar\"\n>\n</ino-progress-bar>\n```\n\n```jsx harmony\nimport React from 'react';\nimport { Component } from 'react';\nimport { InoProgressBar, InoButton } from '@inovex.de/elements/dist/react';\n\nclass MyComponent extends Component {\n    state = {\n      indeterminate: false\n    };\n  \n    handleClick = () => {\n      this.setState((state) => ({\n        indeterminate: !state.indeterminate\n      }));\n    };\n\n    render() {\n      return (\n        <InoButton onClick={() => this.handleClick()}>Click me!</InoButton>\n        <InoProgressBar inoIndeterminate={this.state.indeterminate}></InoProgressBar>\n      )\n    }\n}\n```\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property           | Attribute           | Description                                                            | Type      | Default     |\n| ------------------ | ------------------- | ---------------------------------------------------------------------- | --------- | ----------- |\n| `inoBuffer`        | `ino-buffer`        | Sets the buffer progress                                               | `number`  | `0`         |\n| `inoIndeterminate` | `ino-indeterminate` | Indicates whether the state of the progress bar is indeterminate       | `boolean` | `false`     |\n| `inoLabel`         | `ino-label`         | Sets the label of the progress bar                                     | `string`  | `undefined` |\n| `inoProgress`      | `ino-progress`      | Sets the progress of the progress bar Should always be between 0 and 1 | `number`  | `0`         |\n| `inoReversed`      | `ino-reversed`      | Reverses the progress bar                                              | `boolean` | `false`     |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"),function(story){return function subscribeToComponentEvents(){var handleFileSelection=function handleFileSelection(e){var bar=document.querySelector("#example"),totalFileSize=0,loaded=0,files=e.detail.files;if(files){for(var i=0;i<files.length;i++)totalFileSize+=files[i].size;for(var _i=0;_i<files.length;_i++){var reader=new FileReader;reader.onloadend=function(e){loaded+=e.total},reader.onprogress=function(e){bar.inoProgress=(loaded+e.loaded)/totalFileSize},reader.readAsDataURL(files[_i])}}},handleClick=function handleClick(e){"ino-button"===e.target.tagName.toLowerCase()&&(document.querySelector("#example").inoProgress=0)};return document.addEventListener("changeFile",handleFileSelection),document.addEventListener("click",handleClick),function(){document.removeEventListener("changeFile",handleFileSelection),document.removeEventListener("click",handleClick)}}(),story()}]};var DefaultUsage=function DefaultUsage(){return'\n\n    <h4>With custom max and min values</h4>\n    <ino-progress-bar ino-progress="9"></ino-progress-bar>\n\n\n    <h3>Example</h3>\n    <div class="progress-bar-example">\n        <ino-progress-bar ino-progress="0" ino-buffer="1" id="example"></ino-progress-bar>\n        <ino-input-file ino-label="Upload" multiple></ino-input-file>\n    </div>\n\n\n    <h3>Variants</h3>\n    <h4>With buffering dots</h4>\n    <ino-progress-bar ino-buffer="0.8" ino-progress="0.3"></ino-progress-bar>\n\n    <h4>Without buffering dots</h4>\n    <ino-progress-bar ino-buffer="1" ino-progress="0.3"></ino-progress-bar>\n\n    <h4>Indeterminate progress bar</h4>\n    <ino-progress-bar ino-indeterminate></ino-progress-bar>\n\n    <h4>Inverted progress bar</h4>\n    <ino-progress-bar ino-reversed ino-progress="0.6" ino-buffer="0.8"></ino-progress-bar>\n    '}},1366:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return DefaultUsage}));var _parameters,with_stencil_readme=__webpack_require__(2);__webpack_require__(1304);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Input/<ino-radio-group>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport componentReadme from \'_local-elements/src/components/ino-radio-group/readme.md\';\\nimport \'./ino-radio-group.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-radio\') {\\n      return;\\n    }\\n    const group = document.querySelector(\'#radio-grp\');\\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\\n  };\\n\\n  document.addEventListener(\'checkedChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'checkedChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-radio-group>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'checkedChange ino-radio\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-radio\\">\\n  <div>\\n    <ino-radio-group id=\\"radio-grp\\" value=\\"1\\">\\n      <ino-radio value=\\"1\\">Opt 1</ino-radio>\\n      <ino-radio value=\\"2\\">Opt 2</ino-radio>\\n      <ino-radio value=\\"3\\">Opt 3</ino-radio>\\n    </ino-radio-group>\\n  </div>\\n</div>\\n`;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":42},"endLoc":{"col":1,"line":52},"startBody":{"col":28,"line":42},"endBody":{"col":1,"line":52}}};\n    \nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport componentReadme from \'_local-elements/src/components/ino-radio-group/readme.md\';\nimport \'./ino-radio-group.scss\';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-radio\') {\n      return;\n    }\n    const group = document.querySelector(\'#radio-grp\');\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\n  };\n\n  document.addEventListener(\'checkedChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'checkedChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Input/<ino-radio-group>\',\n  parameters: {"storySource":{"source":"import withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport componentReadme from \'_local-elements/src/components/ino-radio-group/readme.md\';\\nimport \'./ino-radio-group.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-radio\') {\\n      return;\\n    }\\n    const group = document.querySelector(\'#radio-grp\');\\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\\n  };\\n\\n  document.addEventListener(\'checkedChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'checkedChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-radio-group>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'checkedChange ino-radio\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-radio\\">\\n  <div>\\n    <ino-radio-group id=\\"radio-grp\\" value=\\"1\\">\\n      <ino-radio value=\\"1\\">Opt 1</ino-radio>\\n      <ino-radio value=\\"2\\">Opt 2</ino-radio>\\n      <ino-radio value=\\"3\\">Opt 3</ino-radio>\\n    </ino-radio-group>\\n  </div>\\n</div>\\n`;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":42},"endLoc":{"col":1,"line":52},"startBody":{"col":28,"line":42},"endBody":{"col":1,"line":52}}}},\n    actions: {\n      handles: [\'checkedChange ino-radio\']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-radio">\n  <div>\n    <ino-radio-group id="radio-grp" value="1">\n      <ino-radio value="1">Opt 1</ino-radio>\n      <ino-radio value="2">Opt 2</ino-radio>\n      <ino-radio value="3">Opt 3</ino-radio>\n    </ino-radio-group>\n  </div>\n</div>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:50},endLoc:{col:1,line:60},startBody:{col:28,line:50},endBody:{col:1,line:60}}}}},_defineProperty(_parameters,"storySource",{source:"import withStencilReadme from '_local-storybookcore/with-stencil-readme';\nimport componentReadme from '_local-elements/src/components/ino-radio-group/readme.md';\nimport './ino-radio-group.scss';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== 'ino-radio') {\n      return;\n    }\n    const group = document.querySelector('#radio-grp');\n    group.setAttribute('value', el.getAttribute('value'));\n  };\n\n  document.addEventListener('checkedChange', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('checkedChange', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Input/<ino-radio-group>',\n  parameters: {\n    actions: {\n      handles: ['checkedChange ino-radio']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class=\"story-radio\">\n  <div>\n    <ino-radio-group id=\"radio-grp\" value=\"1\">\n      <ino-radio value=\"1\">Opt 1</ino-radio>\n      <ino-radio value=\"2\">Opt 2</ino-radio>\n      <ino-radio value=\"3\">Opt 3</ino-radio>\n    </ino-radio-group>\n  </div>\n</div>\n`;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:42},endLoc:{col:1,line:52},startBody:{col:28,line:42},endBody:{col:1,line:52}}}}),_defineProperty(_parameters,"actions",{handles:["checkedChange ino-radio"]}),_parameters),decorators:[Object(with_stencil_readme.a)('# ino-radio-group\nA wrapper component to be used for a group of ino-radio-buttons. This component manages the single selection functionality of a group of ino-radio-buttons. Due to the shadow DOM implementation of the `ino-radio`-Element the `name`-Property cannot be used to achieve the single selection functionality.\n\n### Usage\n\n```html\n<ino-radio-group value="Option 1">\n  <ino-radio value="Option 1">I will be checked</ino-radio>\n  <ino-radio value="Option 2">Option 2</ino-radio>\n  <ino-radio value="Option 3">Option 3</ino-radio>\n</ino-radio-group>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoRadio, InoRadioGroup } from \'@inovex.de/elements-react/dist\';\n\nclass MyComponent extends Component {\n\n  state = {\n    selected: \'Option 1\'\n  } ;\n  \n  clickHandler = (value) => {\n    this.setState({selected: value});\n  };\n\n  render() {\n    return (\n      <InoRadioGroup value={this.state.selected}>\n          <InoRadio onValueChange={() => this.clickHandler("Option 1")} value="Option 1">I will be checked</InoRadio>\n          <InoRadio onValueChange={() => this.clickHandler("Option 2")} value="Option 2">Option 2</InoRadio>\n          <InoRadio onValueChange={() => this.clickHandler("Option 3")} value="Option 3">Option 3</InoRadio>\n      </InoRadioGroup>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoRadioGroup } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst RadioGroup: React.FunctionComponent<Components.InoRadioGroupAttributes> = props => {\n  const { value } = props;\n\n  return (\n    <InoRadioGroup value={value}>\n      {props.children}\n    </InoRadioGroup>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <RadioGroup value={\'Option 1\'}>\n        ...\n      </RadioGroup>\n    );\n  }\n}\n```\n\n## Additional Hints\n\n### Control flow\n\nIn order to change the checked element (and uncheck the other ones) listen to the `valueChange`-Event emitted by the `ino-radio` and pass it\'s value to the `ino-radio-group` via the `value`-Property.\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property | Attribute | Description                                                                                                                                                | Type  | Default     |\n| -------- | --------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- | ----------- |\n| `value`  | `value`   | The value of the radio group. If there is an ino-radio-child with the given value, the radio-button will be checked and the other radio-buttons unchecked. | `any` | `undefined` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;"ino-radio"===el.tagName.toLowerCase()&&document.querySelector("#radio-grp").setAttribute("value",el.getAttribute("value"))};return document.addEventListener("checkedChange",eventHandler),function(){document.removeEventListener("checkedChange",eventHandler)}}(),story()}]};var DefaultUsage=function DefaultUsage(){return'\n<div class="story-radio">\n  <div>\n    <ino-radio-group id="radio-grp" value="1">\n      <ino-radio value="1">Opt 1</ino-radio>\n      <ino-radio value="2">Opt 2</ino-radio>\n      <ino-radio value="3">Opt 3</ino-radio>\n    </ino-radio-group>\n  </div>\n</div>\n'}},1367:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_radio_stories_DefaultUsage}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1306);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Input/<ino-radio>",parameters:(_parameters={storySource:{source:"\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import { boolean, text } from '@storybook/addon-knobs';\\n\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\nimport componentReadme from '_local-elements/src/components/ino-radio/readme.md';\\nimport './ino-radio.scss';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== 'ino-radio') {\\n      return;\\n    }\\n\\n    el.setAttribute('checked', true);\\n  };\\n\\n  document.addEventListener('checkedChange', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener('checkedChange', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: 'Input/<ino-radio>',\\n  parameters: {\\n    actions: {\\n      handles: ['checkedChange ino-radio']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\\"story-radio\\\">\\n  <style>\\n          ino-radio.customizable-radio {\\n            --radio-unchecked-color: ${text('--radio-unchecked-color', '#c1c1c1', 'Custom Properties')};\\n            --radio-checked-color: ${text('--radio-checked-color', '#3d40f5', 'Custom Properties')};\\n            --radio-hover-color: ${text('--radio-hover-color', '#5d60f7', 'Custom Properties')};\\n            --radio-active-color: ${text('--radio-active-color', '#0d10f3', 'Custom Properties')};\\n            --radio-disabled-inner-circle-color: ${text('--radio-disabled-inner-circle-color', '#777777', 'Custom Properties')};\\n            --radio-disabled-outer-circle-color: ${text('--radio-disabled-outer-circle-color', '#c1c1c1', 'Custom Properties')};\\n          }\\n      </style>\\n        <ino-radio\\n          class=\\\"customizable-radio\\\"\\n    checked=\\\"${boolean('checked', false)}\\\"\\n    disabled=\\\"${boolean('disabled', false)}\\\"\\n    name=\\\"radio-custom\\\"\\n  >\\n    ${text('<slot />', 'Customizable Radio Button')}\\n  </ino-radio>\\n</div>\\n\\n<h4>States</h4>\\n<div class=\\\"story-radio\\\">\\n  <ino-radio>Unchecked</ino-radio>\\n  <ino-radio checked>Checked</ino-radio>\\n  <ino-radio disabled>Disabled</ino-radio>\\n  <ino-radio checked disabled>Checked and Disabled</ino-radio>\\n</div>\\n`;\\n\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"DefaultUsage\":{\"startLoc\":{\"col\":28,\"line\":44},\"endLoc\":{\"col\":1,\"line\":73},\"startBody\":{\"col\":28,\"line\":44},\"endBody\":{\"col\":1,\"line\":73}}};\n    \nimport { boolean, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\nimport componentReadme from '_local-elements/src/components/ino-radio/readme.md';\nimport './ino-radio.scss';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== 'ino-radio') {\n      return;\n    }\n\n    el.setAttribute('checked', true);\n  };\n\n  document.addEventListener('checkedChange', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('checkedChange', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Input/<ino-radio>',\n  parameters: {\"storySource\":{\"source\":\"import { boolean, text } from '@storybook/addon-knobs';\\n\\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\\nimport componentReadme from '_local-elements/src/components/ino-radio/readme.md';\\nimport './ino-radio.scss';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== 'ino-radio') {\\n      return;\\n    }\\n\\n    el.setAttribute('checked', true);\\n  };\\n\\n  document.addEventListener('checkedChange', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener('checkedChange', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: 'Input/<ino-radio>',\\n  parameters: {\\n    actions: {\\n      handles: ['checkedChange ino-radio']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\\"story-radio\\\">\\n  <style>\\n          ino-radio.customizable-radio {\\n            --radio-unchecked-color: ${text('--radio-unchecked-color', '#c1c1c1', 'Custom Properties')};\\n            --radio-checked-color: ${text('--radio-checked-color', '#3d40f5', 'Custom Properties')};\\n            --radio-hover-color: ${text('--radio-hover-color', '#5d60f7', 'Custom Properties')};\\n            --radio-active-color: ${text('--radio-active-color', '#0d10f3', 'Custom Properties')};\\n            --radio-disabled-inner-circle-color: ${text('--radio-disabled-inner-circle-color', '#777777', 'Custom Properties')};\\n            --radio-disabled-outer-circle-color: ${text('--radio-disabled-outer-circle-color', '#c1c1c1', 'Custom Properties')};\\n          }\\n      </style>\\n        <ino-radio\\n          class=\\\"customizable-radio\\\"\\n    checked=\\\"${boolean('checked', false)}\\\"\\n    disabled=\\\"${boolean('disabled', false)}\\\"\\n    name=\\\"radio-custom\\\"\\n  >\\n    ${text('<slot />', 'Customizable Radio Button')}\\n  </ino-radio>\\n</div>\\n\\n<h4>States</h4>\\n<div class=\\\"story-radio\\\">\\n  <ino-radio>Unchecked</ino-radio>\\n  <ino-radio checked>Checked</ino-radio>\\n  <ino-radio disabled>Disabled</ino-radio>\\n  <ino-radio checked disabled>Checked and Disabled</ino-radio>\\n</div>\\n`;\\n\",\"locationsMap\":{\"default-usage\":{\"startLoc\":{\"col\":28,\"line\":44},\"endLoc\":{\"col\":1,\"line\":73},\"startBody\":{\"col\":28,\"line\":44},\"endBody\":{\"col\":1,\"line\":73}}}},\n    actions: {\n      handles: ['checkedChange ino-radio']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class=\"story-radio\">\n  <style>\n          ino-radio.customizable-radio {\n            --radio-unchecked-color: ${text('--radio-unchecked-color', '#c1c1c1', 'Custom Properties')};\n            --radio-checked-color: ${text('--radio-checked-color', '#3d40f5', 'Custom Properties')};\n            --radio-hover-color: ${text('--radio-hover-color', '#5d60f7', 'Custom Properties')};\n            --radio-active-color: ${text('--radio-active-color', '#0d10f3', 'Custom Properties')};\n            --radio-disabled-inner-circle-color: ${text('--radio-disabled-inner-circle-color', '#777777', 'Custom Properties')};\n            --radio-disabled-outer-circle-color: ${text('--radio-disabled-outer-circle-color', '#c1c1c1', 'Custom Properties')};\n          }\n      </style>\n        <ino-radio\n          class=\"customizable-radio\"\n    checked=\"${boolean('checked', false)}\"\n    disabled=\"${boolean('disabled', false)}\"\n    name=\"radio-custom\"\n  >\n    ${text('<slot />', 'Customizable Radio Button')}\n  </ino-radio>\n</div>\n\n<h4>States</h4>\n<div class=\"story-radio\">\n  <ino-radio>Unchecked</ino-radio>\n  <ino-radio checked>Checked</ino-radio>\n  <ino-radio disabled>Disabled</ino-radio>\n  <ino-radio checked disabled>Checked and Disabled</ino-radio>\n</div>\n`;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:52},endLoc:{col:1,line:81},startBody:{col:28,line:52},endBody:{col:1,line:81}}}}},_defineProperty(_parameters,"storySource",{source:"import { boolean, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\nimport componentReadme from '_local-elements/src/components/ino-radio/readme.md';\nimport './ino-radio.scss';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== 'ino-radio') {\n      return;\n    }\n\n    el.setAttribute('checked', true);\n  };\n\n  document.addEventListener('checkedChange', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('checkedChange', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Input/<ino-radio>',\n  parameters: {\n    actions: {\n      handles: ['checkedChange ino-radio']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class=\"story-radio\">\n  <style>\n          ino-radio.customizable-radio {\n            --radio-unchecked-color: ${text('--radio-unchecked-color', '#c1c1c1', 'Custom Properties')};\n            --radio-checked-color: ${text('--radio-checked-color', '#3d40f5', 'Custom Properties')};\n            --radio-hover-color: ${text('--radio-hover-color', '#5d60f7', 'Custom Properties')};\n            --radio-active-color: ${text('--radio-active-color', '#0d10f3', 'Custom Properties')};\n            --radio-disabled-inner-circle-color: ${text('--radio-disabled-inner-circle-color', '#777777', 'Custom Properties')};\n            --radio-disabled-outer-circle-color: ${text('--radio-disabled-outer-circle-color', '#c1c1c1', 'Custom Properties')};\n          }\n      </style>\n        <ino-radio\n          class=\"customizable-radio\"\n    checked=\"${boolean('checked', false)}\"\n    disabled=\"${boolean('disabled', false)}\"\n    name=\"radio-custom\"\n  >\n    ${text('<slot />', 'Customizable Radio Button')}\n  </ino-radio>\n</div>\n\n<h4>States</h4>\n<div class=\"story-radio\">\n  <ino-radio>Unchecked</ino-radio>\n  <ino-radio checked>Checked</ino-radio>\n  <ino-radio disabled>Disabled</ino-radio>\n  <ino-radio checked disabled>Checked and Disabled</ino-radio>\n</div>\n`;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:44},endLoc:{col:1,line:73},startBody:{col:28,line:44},endBody:{col:1,line:73}}}}),_defineProperty(_parameters,"actions",{handles:["checkedChange ino-radio"]}),_parameters),decorators:[Object(with_stencil_readme.a)('# ino-radio\n\nA radio component that allows the user to select an option from a set of radio-buttons. In order to have a single select functionality, please refer to the `ino-radio-group`-component. This component functions as a wrapper around the material [radio](https://github.com/material-components/material-components-web/tree/master/packages/mdc-radio) component.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector(\'ino-radio\')\n  .addEventListener(\'checkedChange\', _ =>\n    alert(\n      `The radio button should be checked`\n    )\n  );\n```\n\n```html\n<ino-radio\n  checked="<boolean>"\n  disabled="<boolean>"\n  name="<string>"\n  value="<string>"\n  ino-id="<string>"\n  oncheckedChange="handleCheckedChange()"\n>\n  Label\n</ino-radio>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoRadio } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoRadio checked name="radio-1">\n        Checked\n      </InoRadio>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoRadio } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Radio: React.FunctionComponent<Components.InoRadioAttributes> = props => {\n  const { checked, name } = props;\n\n  return (\n    <InoRadio checked={checked} name={name}>\n      {props.children}\n    </InoRadio>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <Radio checked name="radio-1">\n        Checked\n      </Radio>\n    );\n  }\n}\n```\n\n## Additional Hints\n\n### Control flow\n\nClicking on the radio button triggers an event that contains the boolean value `true` (`e.detail`). This event is only triggered if the radio button was not previously selected (`checked=false`). In order to check one element and uncheck the other ones, please refer to the `ino-radio-group`-Component. If (`checked=true`) is passed to an element, the other elements **won\'t** be deselected without the use of the `ino-radio-group`.\n\n```html\n<ino-radio\n  checked={this.state.checked}\n  checkedChange={e => this.state.checked = e.detail}>\n</ino-radio>\n```\n\n## Demo\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property   | Attribute  | Description                                                                                                                                                | Type      | Default     |\n| ---------- | ---------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `checked`  | `checked`  | Initially marks this element as checked. If another ino-radio element in the same group receives `true`, the value will be changed to false automatically. | `boolean` | `false`     |\n| `disabled` | `disabled` | Disables this element.                                                                                                                                     | `boolean` | `undefined` |\n| `name`     | `name`     | The name of this element. Use the same name for radio groups                                                                                               | `string`  | `undefined` |\n| `value`    | `value`    | The value of this element.                                                                                                                                 | `string`  | `undefined` |\n\n\n## Events\n\n| Event           | Description                                                                                                                                                                | Type               |\n| --------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `checkedChange` | Emits when the user interacts with the radio-button. Contains `true` in `event.detail`. This event will only be emitted if the current state of the radio button is false. | `CustomEvent<any>` |\n\n\n## CSS Custom Properties\n\n| Name                                      | Description                           |\n| ----------------------------------------- | ------------------------------------- |\n| `--ino-radio-active-color`                | color of the radio if active          |\n| `--ino-radio-checked-color`               | color of the radio if checked         |\n| `--ino-radio-disabled-inner-circle-color` | color of the inner circle if disabled |\n| `--ino-radio-disabled-outer-circle-color` | color of the outer circle if disabled |\n| `--ino-radio-hover-color`                 | color of the radio on hover           |\n| `--ino-radio-unchecked-color`             | color of the radio if unchecked       |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-control-item](../ino-control-item)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-control-item --\x3e ino-radio\n  style ino-radio fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;"ino-radio"===el.tagName.toLowerCase()&&el.setAttribute("checked",!0)};return document.addEventListener("checkedChange",eventHandler),function(){document.removeEventListener("checkedChange",eventHandler)}}(),story()}]};var ino_radio_stories_DefaultUsage=function DefaultUsage(){return'\n<div class="story-radio">\n  <style>\n          ino-radio.customizable-radio {\n            --radio-unchecked-color: '.concat(Object(dist.text)("--radio-unchecked-color","#c1c1c1","Custom Properties"),";\n            --radio-checked-color: ").concat(Object(dist.text)("--radio-checked-color","#3d40f5","Custom Properties"),";\n            --radio-hover-color: ").concat(Object(dist.text)("--radio-hover-color","#5d60f7","Custom Properties"),";\n            --radio-active-color: ").concat(Object(dist.text)("--radio-active-color","#0d10f3","Custom Properties"),";\n            --radio-disabled-inner-circle-color: ").concat(Object(dist.text)("--radio-disabled-inner-circle-color","#777777","Custom Properties"),";\n            --radio-disabled-outer-circle-color: ").concat(Object(dist.text)("--radio-disabled-outer-circle-color","#c1c1c1","Custom Properties"),';\n          }\n      </style>\n        <ino-radio\n          class="customizable-radio"\n    checked="').concat(Object(dist.boolean)("checked",!1),'"\n    disabled="').concat(Object(dist.boolean)("disabled",!1),'"\n    name="radio-custom"\n  >\n    ').concat(Object(dist.text)("<slot />","Customizable Radio Button"),'\n  </ino-radio>\n</div>\n\n<h4>States</h4>\n<div class="story-radio">\n  <ino-radio>Unchecked</ino-radio>\n  <ino-radio checked>Checked</ino-radio>\n  <ino-radio disabled>Disabled</ino-radio>\n  <ino-radio checked disabled>Checked and Disabled</ino-radio>\n</div>\n')}},1368:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_range_stories_DefaultUsage}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1308);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, number, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-range/readme.md\';\\nimport \'./ino-range.scss\';\\n\\nexport default {\\n  title: \'Input/<ino-range>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-range\\">\\n      <div class=\\"flex-parent-center\\">\\n        <div>\\n          <h4>Customizable Range</h4>\\n          <ino-range\\n            class=\\"customizable-range\\"\\n            autofocus=\\"${boolean(\'autofocus\', false)}\\"\\n            disabled=\\"${boolean(\'disabled\', false)}\\"\\n            min=\\"${number(\'min\', 0)}\\"\\n            max=\\"${number(\'max\', 100)}\\"\\n            name=\\"${text(\'name\', \'\')}\\"\\n            ino-discrete=\\"${boolean(\'ino-discrete\', false)}\\"\\n            ino-markers=\\"${boolean(\'ino-markers\', false)}\\"\\n            value=\\"${number(\'value\', 50)}\\"\\n            required=\\"${boolean(\'required\', false)}\\"\\n            step=\\"${number(\'step\', 1)}\\"\\n            ino-color-scheme=\\"${select(\\n              \'ino-color-scheme\',\\n              [\'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\\n              \'primary\'\\n            )}\\">\\n          </ino-range>\\n        </div>\\n      </div>\\n\\n      <h4>Different Colors</h4>\\n\\n      <div class=\\"flex-parent\\">\\n        <div class=\\"flex-child\\">\\n          <h5>primary</h5>\\n          <ino-range ino-color-scheme=\\"primary\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>secondary</h5>\\n          <ino-range ino-color-scheme=\\"secondary\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>success</h5>\\n          <ino-range ino-color-scheme=\\"success\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>warning</h5>\\n          <ino-range ino-color-scheme=\\"warning\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>error</h5>\\n          <ino-range ino-color-scheme=\\"error\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>light</h5>\\n          <ino-range ino-color-scheme=\\"light\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>dark</h5>\\n          <ino-range ino-color-scheme=\\"dark\\"></ino-range>\\n        </div>\\n      </div>\\n\\n      <h4>Stepped Range</h4>\\n\\n      <div class=\\"flex-parent stepped-range-container\\">\\n        <div class=\\"flex-child\\">\\n          <ino-range ino-color-scheme=\\"primary\\" min=\\"0\\" max=\\"100\\" step=\\"20\\" ino-discrete ino-markers></ino-range>\\n        </div>\\n      </div>\\n    </div>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":13},"endLoc":{"col":3,"line":80},"startBody":{"col":28,"line":13},"endBody":{"col":3,"line":80}}};\n    \nimport { boolean, number, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-range/readme.md\';\nimport \'./ino-range.scss\';\n\nexport default {parameters: {"storySource":{"source":"import { boolean, number, select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-range/readme.md\';\\nimport \'./ino-range.scss\';\\n\\nexport default {\\n  title: \'Input/<ino-range>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-range\\">\\n      <div class=\\"flex-parent-center\\">\\n        <div>\\n          <h4>Customizable Range</h4>\\n          <ino-range\\n            class=\\"customizable-range\\"\\n            autofocus=\\"${boolean(\'autofocus\', false)}\\"\\n            disabled=\\"${boolean(\'disabled\', false)}\\"\\n            min=\\"${number(\'min\', 0)}\\"\\n            max=\\"${number(\'max\', 100)}\\"\\n            name=\\"${text(\'name\', \'\')}\\"\\n            ino-discrete=\\"${boolean(\'ino-discrete\', false)}\\"\\n            ino-markers=\\"${boolean(\'ino-markers\', false)}\\"\\n            value=\\"${number(\'value\', 50)}\\"\\n            required=\\"${boolean(\'required\', false)}\\"\\n            step=\\"${number(\'step\', 1)}\\"\\n            ino-color-scheme=\\"${select(\\n              \'ino-color-scheme\',\\n              [\'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\\n              \'primary\'\\n            )}\\">\\n          </ino-range>\\n        </div>\\n      </div>\\n\\n      <h4>Different Colors</h4>\\n\\n      <div class=\\"flex-parent\\">\\n        <div class=\\"flex-child\\">\\n          <h5>primary</h5>\\n          <ino-range ino-color-scheme=\\"primary\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>secondary</h5>\\n          <ino-range ino-color-scheme=\\"secondary\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>success</h5>\\n          <ino-range ino-color-scheme=\\"success\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>warning</h5>\\n          <ino-range ino-color-scheme=\\"warning\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>error</h5>\\n          <ino-range ino-color-scheme=\\"error\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>light</h5>\\n          <ino-range ino-color-scheme=\\"light\\"></ino-range>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>dark</h5>\\n          <ino-range ino-color-scheme=\\"dark\\"></ino-range>\\n        </div>\\n      </div>\\n\\n      <h4>Stepped Range</h4>\\n\\n      <div class=\\"flex-parent stepped-range-container\\">\\n        <div class=\\"flex-child\\">\\n          <ino-range ino-color-scheme=\\"primary\\" min=\\"0\\" max=\\"100\\" step=\\"20\\" ino-discrete ino-markers></ino-range>\\n        </div>\\n      </div>\\n    </div>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":13},"endLoc":{"col":3,"line":80},"startBody":{"col":28,"line":13},"endBody":{"col":3,"line":80}}}},},\n  title: \'Input/<ino-range>\',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-range">\n      <div class="flex-parent-center">\n        <div>\n          <h4>Customizable Range</h4>\n          <ino-range\n            class="customizable-range"\n            autofocus="${boolean(\'autofocus\', false)}"\n            disabled="${boolean(\'disabled\', false)}"\n            min="${number(\'min\', 0)}"\n            max="${number(\'max\', 100)}"\n            name="${text(\'name\', \'\')}"\n            ino-discrete="${boolean(\'ino-discrete\', false)}"\n            ino-markers="${boolean(\'ino-markers\', false)}"\n            value="${number(\'value\', 50)}"\n            required="${boolean(\'required\', false)}"\n            step="${number(\'step\', 1)}"\n            ino-color-scheme="${select(\n              \'ino-color-scheme\',\n              [\'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\n              \'primary\'\n            )}">\n          </ino-range>\n        </div>\n      </div>\n\n      <h4>Different Colors</h4>\n\n      <div class="flex-parent">\n        <div class="flex-child">\n          <h5>primary</h5>\n          <ino-range ino-color-scheme="primary"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>secondary</h5>\n          <ino-range ino-color-scheme="secondary"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>success</h5>\n          <ino-range ino-color-scheme="success"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>warning</h5>\n          <ino-range ino-color-scheme="warning"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>error</h5>\n          <ino-range ino-color-scheme="error"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>light</h5>\n          <ino-range ino-color-scheme="light"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>dark</h5>\n          <ino-range ino-color-scheme="dark"></ino-range>\n        </div>\n      </div>\n\n      <h4>Stepped Range</h4>\n\n      <div class="flex-parent stepped-range-container">\n        <div class="flex-child">\n          <ino-range ino-color-scheme="primary" min="0" max="100" step="20" ino-discrete ino-markers></ino-range>\n        </div>\n      </div>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:21},endLoc:{col:3,line:88},startBody:{col:28,line:21},endBody:{col:3,line:88}}}}},"storySource",{source:'import { boolean, number, select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-range/readme.md\';\nimport \'./ino-range.scss\';\n\nexport default {\n  title: \'Input/<ino-range>\',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-range">\n      <div class="flex-parent-center">\n        <div>\n          <h4>Customizable Range</h4>\n          <ino-range\n            class="customizable-range"\n            autofocus="${boolean(\'autofocus\', false)}"\n            disabled="${boolean(\'disabled\', false)}"\n            min="${number(\'min\', 0)}"\n            max="${number(\'max\', 100)}"\n            name="${text(\'name\', \'\')}"\n            ino-discrete="${boolean(\'ino-discrete\', false)}"\n            ino-markers="${boolean(\'ino-markers\', false)}"\n            value="${number(\'value\', 50)}"\n            required="${boolean(\'required\', false)}"\n            step="${number(\'step\', 1)}"\n            ino-color-scheme="${select(\n              \'ino-color-scheme\',\n              [\'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\n              \'primary\'\n            )}">\n          </ino-range>\n        </div>\n      </div>\n\n      <h4>Different Colors</h4>\n\n      <div class="flex-parent">\n        <div class="flex-child">\n          <h5>primary</h5>\n          <ino-range ino-color-scheme="primary"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>secondary</h5>\n          <ino-range ino-color-scheme="secondary"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>success</h5>\n          <ino-range ino-color-scheme="success"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>warning</h5>\n          <ino-range ino-color-scheme="warning"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>error</h5>\n          <ino-range ino-color-scheme="error"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>light</h5>\n          <ino-range ino-color-scheme="light"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>dark</h5>\n          <ino-range ino-color-scheme="dark"></ino-range>\n        </div>\n      </div>\n\n      <h4>Stepped Range</h4>\n\n      <div class="flex-parent stepped-range-container">\n        <div class="flex-child">\n          <ino-range ino-color-scheme="primary" min="0" max="100" step="20" ino-discrete ino-markers></ino-range>\n        </div>\n      </div>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:13},endLoc:{col:3,line:80},startBody:{col:28,line:13},endBody:{col:3,line:80}}}}),title:"Input/<ino-range>",decorators:[Object(with_stencil_readme.a)('# ino-range\n\nA range component that allows the user select a number using a slider. It functions as a wrapper around the material [Slider](https://github.com/material-components/material-components-web/tree/master/packages/mdc-slider) component.\n\n> Note: Range sliders with multiple thumbs are not yet implemented.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector(\'ino-datepicker\')\n  .addEventListener(\'valueChange\', e =>\n    alert(`The new range value is: ${e.detail}`)\n  );\n```\n\n```html\n<ino-range\n  min="<number>"\n  max="<number>"\n  value="<number>"\n  name="<string>"\n  step="<number>"\n  disabled\n  ino-color-scheme="<string>"\n  ino-discrete\n  ino-markers\n>\n</ino-range>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoRange } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return <InoRange inoColorScheme="primary" />;\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoRange } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Range: React.FunctionComponent<Components.InoRangeAttributes> = props => {\n  const { inoColorScheme } = props;\n\n  return <InoRange inoColorScheme={inoColorScheme}>{props.children}</InoRange>;\n};\n\nclass MyComponent extends Component {\n  render() {\n    return <Range inoColorScheme="primary" />;\n  }\n}\n```\n\n## Additional Hints\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property         | Attribute          | Description                                                                                                                                        | Type                                                                                 | Default     |\n| ---------------- | ------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ | ----------- |\n| `disabled`       | `disabled`         | Disables this element.                                                                                                                             | `boolean`                                                                            | `undefined` |\n| `inoColorScheme` | `ino-color-scheme` | The name of the color scheme of this component. Possible values: `primary` (default), `secondary`, `success`, `warning`, `error`, `light`, `dark`. | `"dark" \\| "error" \\| "light" \\| "primary" \\| "secondary" \\| "success" \\| "warning"` | `\'primary\'` |\n| `inoDiscrete`    | `ino-discrete`     | Restricts the slider to only allow discrete values.                                                                                                | `boolean`                                                                            | `undefined` |\n| `inoMarkers`     | `ino-markers`      | Mark this slider to show the steps of the range. Only applicable if ino-discrete is true                                                           | `boolean`                                                                            | `undefined` |\n| `max`            | `max`              | The max value of this element.                                                                                                                     | `number`                                                                             | `undefined` |\n| `min`            | `min`              | The min value of this element.                                                                                                                     | `number`                                                                             | `undefined` |\n| `name`           | `name`             | The name of this element.                                                                                                                          | `string`                                                                             | `undefined` |\n| `step`           | `step`             | The step size for this element (default = 1)                                                                                                       | `number`                                                                             | `1`         |\n| `value`          | `value`            | The value of this element. (**unmanaged**)                                                                                                         | `number`                                                                             | `undefined` |\n\n\n## Events\n\n| Event         | Description                                                         | Type               |\n| ------------- | ------------------------------------------------------------------- | ------------------ |\n| `valueChange` | Emits when the value changes. Contains new value in `event.detail`. | `CustomEvent<any>` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')]};var ino_range_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-range">\n      <div class="flex-parent-center">\n        <div>\n          <h4>Customizable Range</h4>\n          <ino-range\n            class="customizable-range"\n            autofocus="'.concat(Object(dist.boolean)("autofocus",!1),'"\n            disabled="').concat(Object(dist.boolean)("disabled",!1),'"\n            min="').concat(Object(dist.number)("min",0),'"\n            max="').concat(Object(dist.number)("max",100),'"\n            name="').concat(Object(dist.text)("name",""),'"\n            ino-discrete="').concat(Object(dist.boolean)("ino-discrete",!1),'"\n            ino-markers="').concat(Object(dist.boolean)("ino-markers",!1),'"\n            value="').concat(Object(dist.number)("value",50),'"\n            required="').concat(Object(dist.boolean)("required",!1),'"\n            step="').concat(Object(dist.number)("step",1),'"\n            ino-color-scheme="').concat(Object(dist.select)("ino-color-scheme",["primary","secondary","success","warning","error","light","dark"],"primary"),'">\n          </ino-range>\n        </div>\n      </div>\n\n      <h4>Different Colors</h4>\n\n      <div class="flex-parent">\n        <div class="flex-child">\n          <h5>primary</h5>\n          <ino-range ino-color-scheme="primary"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>secondary</h5>\n          <ino-range ino-color-scheme="secondary"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>success</h5>\n          <ino-range ino-color-scheme="success"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>warning</h5>\n          <ino-range ino-color-scheme="warning"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>error</h5>\n          <ino-range ino-color-scheme="error"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>light</h5>\n          <ino-range ino-color-scheme="light"></ino-range>\n        </div>\n        <div class="flex-child">\n          <h5>dark</h5>\n          <ino-range ino-color-scheme="dark"></ino-range>\n        </div>\n      </div>\n\n      <h4>Stepped Range</h4>\n\n      <div class="flex-parent stepped-range-container">\n        <div class="flex-child">\n          <ino-range ino-color-scheme="primary" min="0" max="100" step="20" ino-discrete ino-markers></ino-range>\n        </div>\n      </div>\n    </div>\n  ')}},1369:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return DefaultUsage}));var with_stencil_readme=__webpack_require__(2);__webpack_require__(1310);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import componentReadme from \'_local-elements/src/components/ino-segment-button/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport \'./ino-segment-button.scss\';\\n\\nexport default {\\n  title: \'Buttons/<ino-segment-button>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /* html */ `\\n    <div class=\\"story-segment-button\\">\\n        <h4>Enabled, not checked</h4>\\n        <ino-segment-button>Content</ino-segment-button>\\n\\n        <h4>Enabled, checked</h4>\\n        <ino-segment-button checked>Content</ino-segment-button>\\n\\n        <h4>Disabled</h4>\\n        <ino-segment-button disabled>Content</ino-segment-button>\\n\\n        <h4>Dense</h4>\\n        <ino-segment-button ino-dense>Content</ino-segment-button>\\n    </div>\\n\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":10},"endLoc":{"col":3,"line":25},"startBody":{"col":28,"line":10},"endBody":{"col":3,"line":25}}};\n    \nimport componentReadme from \'_local-elements/src/components/ino-segment-button/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport \'./ino-segment-button.scss\';\n\nexport default {parameters: {"storySource":{"source":"import componentReadme from \'_local-elements/src/components/ino-segment-button/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport \'./ino-segment-button.scss\';\\n\\nexport default {\\n  title: \'Buttons/<ino-segment-button>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /* html */ `\\n    <div class=\\"story-segment-button\\">\\n        <h4>Enabled, not checked</h4>\\n        <ino-segment-button>Content</ino-segment-button>\\n\\n        <h4>Enabled, checked</h4>\\n        <ino-segment-button checked>Content</ino-segment-button>\\n\\n        <h4>Disabled</h4>\\n        <ino-segment-button disabled>Content</ino-segment-button>\\n\\n        <h4>Dense</h4>\\n        <ino-segment-button ino-dense>Content</ino-segment-button>\\n    </div>\\n\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":10},"endLoc":{"col":3,"line":25},"startBody":{"col":28,"line":10},"endBody":{"col":3,"line":25}}}},},\n  title: \'Buttons/<ino-segment-button>\',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /* html */ `\n    <div class="story-segment-button">\n        <h4>Enabled, not checked</h4>\n        <ino-segment-button>Content</ino-segment-button>\n\n        <h4>Enabled, checked</h4>\n        <ino-segment-button checked>Content</ino-segment-button>\n\n        <h4>Disabled</h4>\n        <ino-segment-button disabled>Content</ino-segment-button>\n\n        <h4>Dense</h4>\n        <ino-segment-button ino-dense>Content</ino-segment-button>\n    </div>\n\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:18},endLoc:{col:3,line:33},startBody:{col:28,line:18},endBody:{col:3,line:33}}}}},"storySource",{source:"import componentReadme from '_local-elements/src/components/ino-segment-button/readme.md';\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\nimport './ino-segment-button.scss';\n\nexport default {\n  title: 'Buttons/<ino-segment-button>',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /* html */ `\n    <div class=\"story-segment-button\">\n        <h4>Enabled, not checked</h4>\n        <ino-segment-button>Content</ino-segment-button>\n\n        <h4>Enabled, checked</h4>\n        <ino-segment-button checked>Content</ino-segment-button>\n\n        <h4>Disabled</h4>\n        <ino-segment-button disabled>Content</ino-segment-button>\n\n        <h4>Dense</h4>\n        <ino-segment-button ino-dense>Content</ino-segment-button>\n    </div>\n\n  `;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:10},endLoc:{col:3,line:25},startBody:{col:28,line:10},endBody:{col:3,line:25}}}}),title:"Buttons/<ino-segment-button>",decorators:[Object(with_stencil_readme.a)("# ino-segment-button\n\nA button component that can be used in combination with the ino-segment-group component.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n    .querySelector('ino-segment-button')\n    .addEventListener('click', () => alert('Button was clicked!'));\n```\n\n```html\n<ino-segment-button\n    checked\n    disabled\n    name=\"<string>\"\n    ino-dense\n    value=\"<string>\"\n>\n    Button Content\n</ino-segment-button>\n```\n\n### React\n\n```js\nimport { Component } from 'react';\nimport { InoSegmentButton } from '@inovex.de/elements/dist/react';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoSegmentButton\n        onClick={_ => alert('Yeah, you clicked the button!')}\n      >\n        You can click me!\n      </InoSegmentButton>\n    )\n  }\n}\n\n```\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property   | Attribute   | Description                               | Type      | Default     |\n| ---------- | ----------- | ----------------------------------------- | --------- | ----------- |\n| `checked`  | `checked`   | Activates the button                      | `boolean` | `false`     |\n| `disabled` | `disabled`  | Disables the button                       | `boolean` | `false`     |\n| `inoDense` | `ino-dense` | Slightly decreases the size of the button | `boolean` | `false`     |\n| `name`     | `name`      | Name of the element                       | `string`  | `undefined` |\n| `value`    | `value`     | Value of the element                      | `string`  | `undefined` |\n\n\n## Events\n\n| Event           | Description                                                                                                       | Type               |\n| --------------- | ----------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `checkedChange` | Emits if the user interacts with the button. If the button is disabled or checked, the event will not be emitted. | `CustomEvent<any>` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n")]};var DefaultUsage=function DefaultUsage(){return'\n    <div class="story-segment-button">\n        <h4>Enabled, not checked</h4>\n        <ino-segment-button>Content</ino-segment-button>\n\n        <h4>Enabled, checked</h4>\n        <ino-segment-button checked>Content</ino-segment-button>\n\n        <h4>Disabled</h4>\n        <ino-segment-button disabled>Content</ino-segment-button>\n\n        <h4>Dense</h4>\n        <ino-segment-button ino-dense>Content</ino-segment-button>\n    </div>\n\n  '}},1370:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return DefaultUsage}));var with_stencil_readme=__webpack_require__(2);__webpack_require__(1312);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import componentReadme from \'_local-elements/src/components/ino-segment-group/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport \'./ino-segment-group.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-segment-button\') {\\n      return;\\n    }\\n    const group = el.closest(\'ino-segment-group\');\\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\\n  };\\n\\n  document.addEventListener(\'checkedChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'checkedChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Buttons/<ino-segment-group>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /* html */ `\\n    <div class=\\"story-segment-group\\">\\n\\n        <h4>Dense group with third option checked</h4>\\n        <ino-segment-group value=\\"3\\" id=\\"dense-segment-grp\\">\\n            <ino-segment-button ino-dense value=\\"1\\">Option 1</ino-segment-button>\\n            <ino-segment-button ino-dense value=\\"2\\">Option 2</ino-segment-button>\\n            <ino-segment-button ino-dense value=\\"3\\">Option 3</ino-segment-button>\\n            <ino-segment-button ino-dense value=\\"4\\">Option 4</ino-segment-button>\\n        </ino-segment-group>\\n\\n        <h4>Group with no option checked</h4>\\n        <ino-segment-group id=\\"segment-grp\\">\\n            <ino-segment-button value=\\"1\\">Option 1</ino-segment-button>\\n            <ino-segment-button value=\\"2\\">Option 2</ino-segment-button>\\n            <ino-segment-button value=\\"3\\">Option 3</ino-segment-button>\\n            <ino-segment-button value=\\"4\\">Option 4</ino-segment-button>\\n        </ino-segment-group>\\n\\n        <h4>Group with a single button</h4>\\n        <ino-segment-group id=\\"single-segment-grp\\">\\n            <ino-segment-button value=\\"1\\">Option 1</ino-segment-button>\\n        </ino-segment-group>\\n    </div>\\n    `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":37},"endLoc":{"col":5,"line":61},"startBody":{"col":28,"line":37},"endBody":{"col":5,"line":61}}};\n    \nimport componentReadme from \'_local-elements/src/components/ino-segment-group/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport \'./ino-segment-group.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-segment-button\') {\n      return;\n    }\n    const group = el.closest(\'ino-segment-group\');\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\n  };\n\n  document.addEventListener(\'checkedChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'checkedChange\', eventHandler);\n  };\n}\n\nexport default {parameters: {"storySource":{"source":"import componentReadme from \'_local-elements/src/components/ino-segment-group/readme.md\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport \'./ino-segment-group.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-segment-button\') {\\n      return;\\n    }\\n    const group = el.closest(\'ino-segment-group\');\\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\\n  };\\n\\n  document.addEventListener(\'checkedChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'checkedChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Buttons/<ino-segment-group>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /* html */ `\\n    <div class=\\"story-segment-group\\">\\n\\n        <h4>Dense group with third option checked</h4>\\n        <ino-segment-group value=\\"3\\" id=\\"dense-segment-grp\\">\\n            <ino-segment-button ino-dense value=\\"1\\">Option 1</ino-segment-button>\\n            <ino-segment-button ino-dense value=\\"2\\">Option 2</ino-segment-button>\\n            <ino-segment-button ino-dense value=\\"3\\">Option 3</ino-segment-button>\\n            <ino-segment-button ino-dense value=\\"4\\">Option 4</ino-segment-button>\\n        </ino-segment-group>\\n\\n        <h4>Group with no option checked</h4>\\n        <ino-segment-group id=\\"segment-grp\\">\\n            <ino-segment-button value=\\"1\\">Option 1</ino-segment-button>\\n            <ino-segment-button value=\\"2\\">Option 2</ino-segment-button>\\n            <ino-segment-button value=\\"3\\">Option 3</ino-segment-button>\\n            <ino-segment-button value=\\"4\\">Option 4</ino-segment-button>\\n        </ino-segment-group>\\n\\n        <h4>Group with a single button</h4>\\n        <ino-segment-group id=\\"single-segment-grp\\">\\n            <ino-segment-button value=\\"1\\">Option 1</ino-segment-button>\\n        </ino-segment-group>\\n    </div>\\n    `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":37},"endLoc":{"col":5,"line":61},"startBody":{"col":28,"line":37},"endBody":{"col":5,"line":61}}}},},\n  title: \'Buttons/<ino-segment-group>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /* html */ `\n    <div class="story-segment-group">\n\n        <h4>Dense group with third option checked</h4>\n        <ino-segment-group value="3" id="dense-segment-grp">\n            <ino-segment-button ino-dense value="1">Option 1</ino-segment-button>\n            <ino-segment-button ino-dense value="2">Option 2</ino-segment-button>\n            <ino-segment-button ino-dense value="3">Option 3</ino-segment-button>\n            <ino-segment-button ino-dense value="4">Option 4</ino-segment-button>\n        </ino-segment-group>\n\n        <h4>Group with no option checked</h4>\n        <ino-segment-group id="segment-grp">\n            <ino-segment-button value="1">Option 1</ino-segment-button>\n            <ino-segment-button value="2">Option 2</ino-segment-button>\n            <ino-segment-button value="3">Option 3</ino-segment-button>\n            <ino-segment-button value="4">Option 4</ino-segment-button>\n        </ino-segment-group>\n\n        <h4>Group with a single button</h4>\n        <ino-segment-group id="single-segment-grp">\n            <ino-segment-button value="1">Option 1</ino-segment-button>\n        </ino-segment-group>\n    </div>\n    `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:45},endLoc:{col:5,line:69},startBody:{col:28,line:45},endBody:{col:5,line:69}}}}},"storySource",{source:'import componentReadme from \'_local-elements/src/components/ino-segment-group/readme.md\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport \'./ino-segment-group.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-segment-button\') {\n      return;\n    }\n    const group = el.closest(\'ino-segment-group\');\n    group.setAttribute(\'value\', el.getAttribute(\'value\'));\n  };\n\n  document.addEventListener(\'checkedChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'checkedChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Buttons/<ino-segment-group>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /* html */ `\n    <div class="story-segment-group">\n\n        <h4>Dense group with third option checked</h4>\n        <ino-segment-group value="3" id="dense-segment-grp">\n            <ino-segment-button ino-dense value="1">Option 1</ino-segment-button>\n            <ino-segment-button ino-dense value="2">Option 2</ino-segment-button>\n            <ino-segment-button ino-dense value="3">Option 3</ino-segment-button>\n            <ino-segment-button ino-dense value="4">Option 4</ino-segment-button>\n        </ino-segment-group>\n\n        <h4>Group with no option checked</h4>\n        <ino-segment-group id="segment-grp">\n            <ino-segment-button value="1">Option 1</ino-segment-button>\n            <ino-segment-button value="2">Option 2</ino-segment-button>\n            <ino-segment-button value="3">Option 3</ino-segment-button>\n            <ino-segment-button value="4">Option 4</ino-segment-button>\n        </ino-segment-group>\n\n        <h4>Group with a single button</h4>\n        <ino-segment-group id="single-segment-grp">\n            <ino-segment-button value="1">Option 1</ino-segment-button>\n        </ino-segment-group>\n    </div>\n    `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:37},endLoc:{col:5,line:61},startBody:{col:28,line:37},endBody:{col:5,line:61}}}}),title:"Buttons/<ino-segment-group>",decorators:[Object(with_stencil_readme.a)('# ino-segment-group\n\nA button group that can be used as an alternative to drop-down menus.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n    .querySelector(\'ino-segment-group\')\n    .addEventListener(\'checkedChange\', (e) => console.log(`${e.target} was checked!`));\n```\n\n```html\n<ino-segment-group value="1" name="<string>">\n    <ino-segment-button value="1">Option 1</ino-segment-button>\n    <ino-segment-button value="2">Option 2</ino-segment-button>\n    <ino-segment-button value="3">Option 3</ino-segment-button>\n</ino-segment-group>\n```\n\n### React\n\n```js\nimport { Component } from \'react\';\nimport { InoSegmentButton, InoSegmentGroup } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n\n  state = {\n    val: 1\n  };\n\n  handleEvent = (val) => {\n    this.setState({val: val});\n  };\n\n  render() {\n      return (\n      <InoSegmentGroup value={this.state.val} name="my-group">\n        <InoSegmentButton value="1" onCheckedChange={() => this.handleEvent("1")}>Option 1</InoSegmentButton>\n        <InoSegmentButton value="2" onCheckedChange={() => this.handleEvent("2")}>Option 2</InoSegmentButton>\n        <InoSegmentButton value="3" onCheckedChange={() => this.handleEvent("3")}>Option 3</InoSegmentButton>\n      </InoSegmentGroup>\n      );\n  }\n}\n```\n\n## Event handling\nThe `checkedChange` event can be used to set the selected option. Simply subscribe to the event and set the group value \nto the value of the button that emitted the event.\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property | Attribute | Description                | Type     | Default     |\n| -------- | --------- | -------------------------- | -------- | ----------- |\n| `name`   | `name`    | Name of the segment group  | `string` | `undefined` |\n| `value`  | `value`   | Value of the segment group | `any`    | `undefined` |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n'),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;"ino-segment-button"===el.tagName.toLowerCase()&&el.closest("ino-segment-group").setAttribute("value",el.getAttribute("value"))};return document.addEventListener("checkedChange",eventHandler),function(){document.removeEventListener("checkedChange",eventHandler)}}(),story()}]};var DefaultUsage=function DefaultUsage(){return'\n    <div class="story-segment-group">\n\n        <h4>Dense group with third option checked</h4>\n        <ino-segment-group value="3" id="dense-segment-grp">\n            <ino-segment-button ino-dense value="1">Option 1</ino-segment-button>\n            <ino-segment-button ino-dense value="2">Option 2</ino-segment-button>\n            <ino-segment-button ino-dense value="3">Option 3</ino-segment-button>\n            <ino-segment-button ino-dense value="4">Option 4</ino-segment-button>\n        </ino-segment-group>\n\n        <h4>Group with no option checked</h4>\n        <ino-segment-group id="segment-grp">\n            <ino-segment-button value="1">Option 1</ino-segment-button>\n            <ino-segment-button value="2">Option 2</ino-segment-button>\n            <ino-segment-button value="3">Option 3</ino-segment-button>\n            <ino-segment-button value="4">Option 4</ino-segment-button>\n        </ino-segment-group>\n\n        <h4>Group with a single button</h4>\n        <ino-segment-group id="single-segment-grp">\n            <ino-segment-button value="1">Option 1</ino-segment-button>\n        </ino-segment-group>\n    </div>\n    '}},1371:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return DefaultUsage})),__webpack_require__.d(__webpack_exports__,"SidebarLeft",(function(){return SidebarLeft})),__webpack_require__.d(__webpack_exports__,"SidebarRight",(function(){return SidebarRight})),__webpack_require__.d(__webpack_exports__,"SidebarDifferentWidth",(function(){return ino_sidebar_stories_SidebarDifferentWidth}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1316);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { number } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-sidebar/readme.md\';\\nimport \'./ino-sidebar.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n\\n  const handleEvent = function(e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-icon\') {\\n      return;\\n    }\\n    const sidebar = document.querySelector(\'ino-sidebar\');\\n    sidebar.inoOpen = !sidebar.inoOpen;\\n  };\\n\\n  document.addEventListener(\'clickEl\', handleEvent);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'clickEl\', handleEvent);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-sidebar>\',\\n\\n  decorators: [story => {\\n    subscribeToComponentEvents();\\n    return story();\\n  }]\\n};\\n\\nexport const DefaultUsage = () => {\\n  return /*html*/ `\\n    `;\\n};\\n\\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\\n\\nexport const SidebarLeft = () => {\\n  return `\\n    <div class=\\"sidebar-demo\\">\\n      ${header}\\n      <ino-sidebar>\\n        ${sidebarContent}\\n      </ino-sidebar>\\n      ${mainContent}\\n    </div>\\n    `;\\n};\\n\\nexport const SidebarRight = () => {\\n  return `\\n    <div class=\\"sidebar-demo\\">\\n      ${header}\\n      <ino-sidebar ino-align-right>\\n        ${sidebarContent}\\n      </ino-sidebar>\\n      ${mainContent}\\n    </div>\\n    `;\\n};\\n\\nexport const SidebarDifferentWidth = () => {\\n  return `\\n    <div class=\\"sidebar-demo\\">\\n      ${header}\\n      <ino-sidebar style=\\"--ino-sidebar-width:${number(\'--ino-sidebar-width\', 500)}px;\\">\\n        ${sidebarContent}\\n      </ino-sidebar>\\n      ${mainContent}\\n    </div>\\n    `;\\n};\\n\\n\\nconst header = `\\n<div class=\\"header\\">\\n    <div class=\\"header--section\\">\\n        <ino-icon ino-clickable ino-icon=\\"menu\\"></ino-icon>\\n        <p>Sidebar</p>\\n    </div>\\n</div>\\n`;\\n\\nconst sidebarContent = `\\n\\n<div class=\\"sidebar-header\\" slot=\\"header\\">\\n    <ino-icon ino-clickable ino-icon=\\"close\\"/>\\n</div>\\n<div class=\\"sidebar-content\\" slot=\\"content\\">\\n  <ino-list>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n  </ino-list>\\n</div>`;\\n\\nconst mainContent = `\\n<div class=\\"content\\">\\n    <p>Cras magna diam, dictum a pretium non, elementum at nibh. Etiam\\n    laoreet suscipit dui et feugiat. Vivamus id consectetur dolor. Morbi eget nunc vel felis gravida scelerisque.\\n    Proin libero erat, suscipit pretium venenatis vitae, fringilla sed enim. Maecenas elit est, finibus in tellus\\n    id, interdum hendrerit ligula. Nam vitae sagittis enim. Donec pulvinar vel quam a posuere. Maecenas egestas\\n    ex erat, quis convallis turpis blandit a.</p>\\n    <p>Maecenas sodales mauris vitae feugiat egestas. Morbi\\n    porta laoreet odio vel semper. Quisque rutrum varius nulla. Morbi sagittis metus quis nibh congue, eu\\n    vehicula dui congue. Pellentesque ullamcorper eros in nulla interdum auctor. Pellentesque congue, felis vitae\\n    tempor porta, ipsum felis viverra dui, vel porttitor elit nibh sed purus. Nam eu diam magna. Sed nec nunc\\n    lorem. Suspendisse vulputate odio lacus, eget dignissim augue pharetra eget. Ut quis augue eu elit venenatis\\n    faucibus. Nam ut commodo dui. .</p>\\n    <p>Praesent eget augue sed nibh aliquam lacinia ac in lectus. Vivamus sapien urna,\\n    pretium in turpis at, dapibus mattis orci.Maecenas sodales mauris vitae feugiat egestas. Morbi\\n    porta laoreet odio vel semper. Quisque rutrum varius nulla. Morbi sagittis metus quis nibh congue, eu\\n    vehicula dui congue. Pellentesque ullamcorper eros in nulla interdum auctor. Pellentesque congue, felis vitae\\n    tempor porta, ipsum felis viverra dui, vel porttitor elit nibh sed purus. Nam eu diam magna. Sed nec nunc\\n    lorem. Suspendisse vulputate odio lacus, eget dignissim augue pharetra eget. Ut quis augue eu elit venenatis\\n    faucibus. Nam ut commodo dui. Praesent eget augue sed nibh aliquam lacinia ac in lectus. Vivamus sapien urna,\\n    pretium in turpis at, dapibus mattis orci</p>\\n    <p>Proin sem nisi, tincidunt eget ipsum non, vestibulum feugiat tellus. Sed nunc enim, sodales condimentum\\n    hendrerit eleifend, aliquam ac eros. Maecenas ut molestie ligula. Aenean semper nunc felis, at cursus neque congue\\n    in. Sed cursus mauris nunc, et scelerisque leo ornare nec. In nec dui eu sem sodales sodales ac at enim. Integer\\n    sit amet libero vitae magna facilisis malesuada sagittis nec dolor. Aenean eleifend dapibus ante, id accumsan\\n    turpis luctus varius. Etiam accumsan tortor ex, sit amet suscipit turpis vehicula et. Ut ultrices ex nisi, eget\\n    tristique nulla tempor eget. Etiam sed vehicula velit. Nullam lacus libero, convallis in imperdiet sit amet,\\n    hendrerit sed nunc.</p>\\n  </div>\\n`;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":38},"endLoc":{"col":1,"line":41},"startBody":{"col":28,"line":38},"endBody":{"col":1,"line":41}},"SidebarLeft":{"startLoc":{"col":27,"line":45},"endLoc":{"col":1,"line":55},"startBody":{"col":27,"line":45},"endBody":{"col":1,"line":55}},"SidebarRight":{"startLoc":{"col":28,"line":57},"endLoc":{"col":1,"line":67},"startBody":{"col":28,"line":57},"endBody":{"col":1,"line":67}},"SidebarDifferentWidth":{"startLoc":{"col":37,"line":69},"endLoc":{"col":1,"line":79},"startBody":{"col":37,"line":69},"endBody":{"col":1,"line":79}}};\n    \nimport { number } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-sidebar/readme.md\';\nimport \'./ino-sidebar.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n\n  const handleEvent = function(e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-icon\') {\n      return;\n    }\n    const sidebar = document.querySelector(\'ino-sidebar\');\n    sidebar.inoOpen = !sidebar.inoOpen;\n  };\n\n  document.addEventListener(\'clickEl\', handleEvent);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'clickEl\', handleEvent);\n  };\n}\n\nexport default {parameters: {"storySource":{"source":"import { number } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-sidebar/readme.md\';\\nimport \'./ino-sidebar.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n\\n  const handleEvent = function(e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-icon\') {\\n      return;\\n    }\\n    const sidebar = document.querySelector(\'ino-sidebar\');\\n    sidebar.inoOpen = !sidebar.inoOpen;\\n  };\\n\\n  document.addEventListener(\'clickEl\', handleEvent);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'clickEl\', handleEvent);\\n  };\\n}\\n\\nexport default {\\n  title: \'Structure/<ino-sidebar>\',\\n\\n  decorators: [story => {\\n    subscribeToComponentEvents();\\n    return story();\\n  }]\\n};\\n\\nexport const DefaultUsage = () => {\\n  return /*html*/ `\\n    `;\\n};\\n\\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\\n\\nexport const SidebarLeft = () => {\\n  return `\\n    <div class=\\"sidebar-demo\\">\\n      ${header}\\n      <ino-sidebar>\\n        ${sidebarContent}\\n      </ino-sidebar>\\n      ${mainContent}\\n    </div>\\n    `;\\n};\\n\\nexport const SidebarRight = () => {\\n  return `\\n    <div class=\\"sidebar-demo\\">\\n      ${header}\\n      <ino-sidebar ino-align-right>\\n        ${sidebarContent}\\n      </ino-sidebar>\\n      ${mainContent}\\n    </div>\\n    `;\\n};\\n\\nexport const SidebarDifferentWidth = () => {\\n  return `\\n    <div class=\\"sidebar-demo\\">\\n      ${header}\\n      <ino-sidebar style=\\"--ino-sidebar-width:${number(\'--ino-sidebar-width\', 500)}px;\\">\\n        ${sidebarContent}\\n      </ino-sidebar>\\n      ${mainContent}\\n    </div>\\n    `;\\n};\\n\\n\\nconst header = `\\n<div class=\\"header\\">\\n    <div class=\\"header--section\\">\\n        <ino-icon ino-clickable ino-icon=\\"menu\\"></ino-icon>\\n        <p>Sidebar</p>\\n    </div>\\n</div>\\n`;\\n\\nconst sidebarContent = `\\n\\n<div class=\\"sidebar-header\\" slot=\\"header\\">\\n    <ino-icon ino-clickable ino-icon=\\"close\\"/>\\n</div>\\n<div class=\\"sidebar-content\\" slot=\\"content\\">\\n  <ino-list>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n    <ino-list-item ino-text=\\"List item\\"></ino-list-item>\\n  </ino-list>\\n</div>`;\\n\\nconst mainContent = `\\n<div class=\\"content\\">\\n    <p>Cras magna diam, dictum a pretium non, elementum at nibh. Etiam\\n    laoreet suscipit dui et feugiat. Vivamus id consectetur dolor. Morbi eget nunc vel felis gravida scelerisque.\\n    Proin libero erat, suscipit pretium venenatis vitae, fringilla sed enim. Maecenas elit est, finibus in tellus\\n    id, interdum hendrerit ligula. Nam vitae sagittis enim. Donec pulvinar vel quam a posuere. Maecenas egestas\\n    ex erat, quis convallis turpis blandit a.</p>\\n    <p>Maecenas sodales mauris vitae feugiat egestas. Morbi\\n    porta laoreet odio vel semper. Quisque rutrum varius nulla. Morbi sagittis metus quis nibh congue, eu\\n    vehicula dui congue. Pellentesque ullamcorper eros in nulla interdum auctor. Pellentesque congue, felis vitae\\n    tempor porta, ipsum felis viverra dui, vel porttitor elit nibh sed purus. Nam eu diam magna. Sed nec nunc\\n    lorem. Suspendisse vulputate odio lacus, eget dignissim augue pharetra eget. Ut quis augue eu elit venenatis\\n    faucibus. Nam ut commodo dui. .</p>\\n    <p>Praesent eget augue sed nibh aliquam lacinia ac in lectus. Vivamus sapien urna,\\n    pretium in turpis at, dapibus mattis orci.Maecenas sodales mauris vitae feugiat egestas. Morbi\\n    porta laoreet odio vel semper. Quisque rutrum varius nulla. Morbi sagittis metus quis nibh congue, eu\\n    vehicula dui congue. Pellentesque ullamcorper eros in nulla interdum auctor. Pellentesque congue, felis vitae\\n    tempor porta, ipsum felis viverra dui, vel porttitor elit nibh sed purus. Nam eu diam magna. Sed nec nunc\\n    lorem. Suspendisse vulputate odio lacus, eget dignissim augue pharetra eget. Ut quis augue eu elit venenatis\\n    faucibus. Nam ut commodo dui. Praesent eget augue sed nibh aliquam lacinia ac in lectus. Vivamus sapien urna,\\n    pretium in turpis at, dapibus mattis orci</p>\\n    <p>Proin sem nisi, tincidunt eget ipsum non, vestibulum feugiat tellus. Sed nunc enim, sodales condimentum\\n    hendrerit eleifend, aliquam ac eros. Maecenas ut molestie ligula. Aenean semper nunc felis, at cursus neque congue\\n    in. Sed cursus mauris nunc, et scelerisque leo ornare nec. In nec dui eu sem sodales sodales ac at enim. Integer\\n    sit amet libero vitae magna facilisis malesuada sagittis nec dolor. Aenean eleifend dapibus ante, id accumsan\\n    turpis luctus varius. Etiam accumsan tortor ex, sit amet suscipit turpis vehicula et. Ut ultrices ex nisi, eget\\n    tristique nulla tempor eget. Etiam sed vehicula velit. Nullam lacus libero, convallis in imperdiet sit amet,\\n    hendrerit sed nunc.</p>\\n  </div>\\n`;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":38},"endLoc":{"col":1,"line":41},"startBody":{"col":28,"line":38},"endBody":{"col":1,"line":41}},"sidebar-left":{"startLoc":{"col":27,"line":45},"endLoc":{"col":1,"line":55},"startBody":{"col":27,"line":45},"endBody":{"col":1,"line":55}},"sidebar-right":{"startLoc":{"col":28,"line":57},"endLoc":{"col":1,"line":67},"startBody":{"col":28,"line":57},"endBody":{"col":1,"line":67}},"sidebar-different-width":{"startLoc":{"col":37,"line":69},"endLoc":{"col":1,"line":79},"startBody":{"col":37,"line":69},"endBody":{"col":1,"line":79}}}},},\n  title: \'Structure/<ino-sidebar>\',\n\n  decorators: [story => {\n    subscribeToComponentEvents();\n    return story();\n  }]\n};\n\nexport const DefaultUsage = () => {\n  return /*html*/ `\n    `;\n};;\n\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\n\nexport const SidebarLeft = () => {\n  return `\n    <div class="sidebar-demo">\n      ${header}\n      <ino-sidebar>\n        ${sidebarContent}\n      </ino-sidebar>\n      ${mainContent}\n    </div>\n    `;\n};;\n\nexport const SidebarRight = () => {\n  return `\n    <div class="sidebar-demo">\n      ${header}\n      <ino-sidebar ino-align-right>\n        ${sidebarContent}\n      </ino-sidebar>\n      ${mainContent}\n    </div>\n    `;\n};;\n\nexport const SidebarDifferentWidth = () => {\n  return `\n    <div class="sidebar-demo">\n      ${header}\n      <ino-sidebar style="--ino-sidebar-width:${number(\'--ino-sidebar-width\', 500)}px;">\n        ${sidebarContent}\n      </ino-sidebar>\n      ${mainContent}\n    </div>\n    `;\n};\n\n\nconst header = `\n<div class="header">\n    <div class="header--section">\n        <ino-icon ino-clickable ino-icon="menu"></ino-icon>\n        <p>Sidebar</p>\n    </div>\n</div>\n`;\n\nconst sidebarContent = `\n\n<div class="sidebar-header" slot="header">\n    <ino-icon ino-clickable ino-icon="close"/>\n</div>\n<div class="sidebar-content" slot="content">\n  <ino-list>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n  </ino-list>\n</div>`;\n\nconst mainContent = `\n<div class="content">\n    <p>Cras magna diam, dictum a pretium non, elementum at nibh. Etiam\n    laoreet suscipit dui et feugiat. Vivamus id consectetur dolor. Morbi eget nunc vel felis gravida scelerisque.\n    Proin libero erat, suscipit pretium venenatis vitae, fringilla sed enim. Maecenas elit est, finibus in tellus\n    id, interdum hendrerit ligula. Nam vitae sagittis enim. Donec pulvinar vel quam a posuere. Maecenas egestas\n    ex erat, quis convallis turpis blandit a.</p>\n    <p>Maecenas sodales mauris vitae feugiat egestas. Morbi\n    porta laoreet odio vel semper. Quisque rutrum varius nulla. Morbi sagittis metus quis nibh congue, eu\n    vehicula dui congue. Pellentesque ullamcorper eros in nulla interdum auctor. Pellentesque congue, felis vitae\n    tempor porta, ipsum felis viverra dui, vel porttitor elit nibh sed purus. Nam eu diam magna. Sed nec nunc\n    lorem. Suspendisse vulputate odio lacus, eget dignissim augue pharetra eget. Ut quis augue eu elit venenatis\n    faucibus. Nam ut commodo dui. .</p>\n    <p>Praesent eget augue sed nibh aliquam lacinia ac in lectus. Vivamus sapien urna,\n    pretium in turpis at, dapibus mattis orci.Maecenas sodales mauris vitae feugiat egestas. Morbi\n    porta laoreet odio vel semper. Quisque rutrum varius nulla. Morbi sagittis metus quis nibh congue, eu\n    vehicula dui congue. Pellentesque ullamcorper eros in nulla interdum auctor. Pellentesque congue, felis vitae\n    tempor porta, ipsum felis viverra dui, vel porttitor elit nibh sed purus. Nam eu diam magna. Sed nec nunc\n    lorem. Suspendisse vulputate odio lacus, eget dignissim augue pharetra eget. Ut quis augue eu elit venenatis\n    faucibus. Nam ut commodo dui. Praesent eget augue sed nibh aliquam lacinia ac in lectus. Vivamus sapien urna,\n    pretium in turpis at, dapibus mattis orci</p>\n    <p>Proin sem nisi, tincidunt eget ipsum non, vestibulum feugiat tellus. Sed nunc enim, sodales condimentum\n    hendrerit eleifend, aliquam ac eros. Maecenas ut molestie ligula. Aenean semper nunc felis, at cursus neque congue\n    in. Sed cursus mauris nunc, et scelerisque leo ornare nec. In nec dui eu sem sodales sodales ac at enim. Integer\n    sit amet libero vitae magna facilisis malesuada sagittis nec dolor. Aenean eleifend dapibus ante, id accumsan\n    turpis luctus varius. Etiam accumsan tortor ex, sit amet suscipit turpis vehicula et. Ut ultrices ex nisi, eget\n    tristique nulla tempor eget. Etiam sed vehicula velit. Nullam lacus libero, convallis in imperdiet sit amet,\n    hendrerit sed nunc.</p>\n  </div>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:46},endLoc:{col:1,line:49},startBody:{col:28,line:46},endBody:{col:1,line:49}},"sidebar-left":{startLoc:{col:27,line:53},endLoc:{col:1,line:63},startBody:{col:27,line:53},endBody:{col:1,line:63}},"sidebar-right":{startLoc:{col:28,line:65},endLoc:{col:1,line:75},startBody:{col:28,line:65},endBody:{col:1,line:75}},"sidebar-different-width":{startLoc:{col:37,line:77},endLoc:{col:1,line:87},startBody:{col:37,line:77},endBody:{col:1,line:87}}}}},"storySource",{source:'import { number } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-sidebar/readme.md\';\nimport \'./ino-sidebar.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n\n  const handleEvent = function(e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-icon\') {\n      return;\n    }\n    const sidebar = document.querySelector(\'ino-sidebar\');\n    sidebar.inoOpen = !sidebar.inoOpen;\n  };\n\n  document.addEventListener(\'clickEl\', handleEvent);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'clickEl\', handleEvent);\n  };\n}\n\nexport default {\n  title: \'Structure/<ino-sidebar>\',\n\n  decorators: [story => {\n    subscribeToComponentEvents();\n    return story();\n  }]\n};\n\nexport const DefaultUsage = () => {\n  return /*html*/ `\n    `;\n};\n\nDefaultUsage.decorators = [withStencilReadme(componentReadme)];\n\nexport const SidebarLeft = () => {\n  return `\n    <div class="sidebar-demo">\n      ${header}\n      <ino-sidebar>\n        ${sidebarContent}\n      </ino-sidebar>\n      ${mainContent}\n    </div>\n    `;\n};\n\nexport const SidebarRight = () => {\n  return `\n    <div class="sidebar-demo">\n      ${header}\n      <ino-sidebar ino-align-right>\n        ${sidebarContent}\n      </ino-sidebar>\n      ${mainContent}\n    </div>\n    `;\n};\n\nexport const SidebarDifferentWidth = () => {\n  return `\n    <div class="sidebar-demo">\n      ${header}\n      <ino-sidebar style="--ino-sidebar-width:${number(\'--ino-sidebar-width\', 500)}px;">\n        ${sidebarContent}\n      </ino-sidebar>\n      ${mainContent}\n    </div>\n    `;\n};\n\n\nconst header = `\n<div class="header">\n    <div class="header--section">\n        <ino-icon ino-clickable ino-icon="menu"></ino-icon>\n        <p>Sidebar</p>\n    </div>\n</div>\n`;\n\nconst sidebarContent = `\n\n<div class="sidebar-header" slot="header">\n    <ino-icon ino-clickable ino-icon="close"/>\n</div>\n<div class="sidebar-content" slot="content">\n  <ino-list>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n  </ino-list>\n</div>`;\n\nconst mainContent = `\n<div class="content">\n    <p>Cras magna diam, dictum a pretium non, elementum at nibh. Etiam\n    laoreet suscipit dui et feugiat. Vivamus id consectetur dolor. Morbi eget nunc vel felis gravida scelerisque.\n    Proin libero erat, suscipit pretium venenatis vitae, fringilla sed enim. Maecenas elit est, finibus in tellus\n    id, interdum hendrerit ligula. Nam vitae sagittis enim. Donec pulvinar vel quam a posuere. Maecenas egestas\n    ex erat, quis convallis turpis blandit a.</p>\n    <p>Maecenas sodales mauris vitae feugiat egestas. Morbi\n    porta laoreet odio vel semper. Quisque rutrum varius nulla. Morbi sagittis metus quis nibh congue, eu\n    vehicula dui congue. Pellentesque ullamcorper eros in nulla interdum auctor. Pellentesque congue, felis vitae\n    tempor porta, ipsum felis viverra dui, vel porttitor elit nibh sed purus. Nam eu diam magna. Sed nec nunc\n    lorem. Suspendisse vulputate odio lacus, eget dignissim augue pharetra eget. Ut quis augue eu elit venenatis\n    faucibus. Nam ut commodo dui. .</p>\n    <p>Praesent eget augue sed nibh aliquam lacinia ac in lectus. Vivamus sapien urna,\n    pretium in turpis at, dapibus mattis orci.Maecenas sodales mauris vitae feugiat egestas. Morbi\n    porta laoreet odio vel semper. Quisque rutrum varius nulla. Morbi sagittis metus quis nibh congue, eu\n    vehicula dui congue. Pellentesque ullamcorper eros in nulla interdum auctor. Pellentesque congue, felis vitae\n    tempor porta, ipsum felis viverra dui, vel porttitor elit nibh sed purus. Nam eu diam magna. Sed nec nunc\n    lorem. Suspendisse vulputate odio lacus, eget dignissim augue pharetra eget. Ut quis augue eu elit venenatis\n    faucibus. Nam ut commodo dui. Praesent eget augue sed nibh aliquam lacinia ac in lectus. Vivamus sapien urna,\n    pretium in turpis at, dapibus mattis orci</p>\n    <p>Proin sem nisi, tincidunt eget ipsum non, vestibulum feugiat tellus. Sed nunc enim, sodales condimentum\n    hendrerit eleifend, aliquam ac eros. Maecenas ut molestie ligula. Aenean semper nunc felis, at cursus neque congue\n    in. Sed cursus mauris nunc, et scelerisque leo ornare nec. In nec dui eu sem sodales sodales ac at enim. Integer\n    sit amet libero vitae magna facilisis malesuada sagittis nec dolor. Aenean eleifend dapibus ante, id accumsan\n    turpis luctus varius. Etiam accumsan tortor ex, sit amet suscipit turpis vehicula et. Ut ultrices ex nisi, eget\n    tristique nulla tempor eget. Etiam sed vehicula velit. Nullam lacus libero, convallis in imperdiet sit amet,\n    hendrerit sed nunc.</p>\n  </div>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:38},endLoc:{col:1,line:41},startBody:{col:28,line:38},endBody:{col:1,line:41}},"sidebar-left":{startLoc:{col:27,line:45},endLoc:{col:1,line:55},startBody:{col:27,line:45},endBody:{col:1,line:55}},"sidebar-right":{startLoc:{col:28,line:57},endLoc:{col:1,line:67},startBody:{col:28,line:57},endBody:{col:1,line:67}},"sidebar-different-width":{startLoc:{col:37,line:69},endLoc:{col:1,line:79},startBody:{col:37,line:69},endBody:{col:1,line:79}}}}),title:"Structure/<ino-sidebar>",decorators:[function(story){return function subscribeToComponentEvents(){var handleEvent=function handleEvent(e){if("ino-icon"===e.target.tagName.toLowerCase()){var sidebar=document.querySelector("ino-sidebar");sidebar.inoOpen=!sidebar.inoOpen}};return document.addEventListener("clickEl",handleEvent),function(){document.removeEventListener("clickEl",handleEvent)}}(),story()}]};var DefaultUsage=function DefaultUsage(){return"\n    "};DefaultUsage.decorators=[Object(with_stencil_readme.a)('# ino-sidebar\n\nThe ino-sidebar is a modal sidebar that can be used to display additional information.\nIt functions as a wrapper around the material [drawer](https://github.com/material-components/material-components-web/blob/master/packages/mdc-drawer/) component.\n\n## Usage\n\nThe component can be used as follows:\n\n### Web Component\n\n```js\ndocument\n    .querySelector(\'ino-sidebar\')\n    .addEventListener(\'openChange\', (e) => console.log(`state of sidebar changed to ${e.detail}`);\n```\n\n```html\n<ino-sidebar>\n  <div class="sidebar-header" slot="header">\n    <ino-icon ino-clickable ino-icon="close-s"></ino-icon>\n  </div>\n  <div class="sidebar-content" slot="content">\n    <ino-list>\n      <ino-list-item ino-text="List item"></ino-list-item>\n      <ino-list-item ino-text="List item"></ino-list-item>\n    </ino-list>\n  </div>\n</ino-sidebar>\n```\n\n### React\n```\nimport React from \'react\';\nimport { Component } from \'react\';\nimport { InoSidebar, InoButton } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n\n  state = {\n    expanded: false\n  };\n\n  handleClick = () => {\n    this.setState((state) => ({\n      expanded: !state.expanded\n    }));\n  };\n\n  render() {\n    return (\n      <InoButton onClick={() => this.handleClick()}>Sidebar</InoButton>\n      <InoSidebar inoOpen={this.state.expanded}></InoSidebar>\n    )\n  }\n\n}\n```\n\n## Sidenotes\n\nThe empty `div` tag with the `tabindex="0"` attribute as well as the `<div class="mdc-drawer-scrim"/>` tag\nare indispensable for the sidebar to work properly. For further information,\nrefer to https://github.com/material-components/material-components-web/issues/5615 and\nhttps://github.com/material-components/material-components-web/tree/master/packages/mdc-drawer.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property        | Attribute         | Description                                                 | Type      | Default     |\n| --------------- | ----------------- | ----------------------------------------------------------- | --------- | ----------- |\n| `inoAlignRight` | `ino-align-right` | Aligns the sidebar to the right (true) or left (false) side | `boolean` | `false`     |\n| `inoOpen`       | `ino-open`        | Expands the sidebar                                         | `boolean` | `false`     |\n| `name`          | `name`            | Name of the component                                       | `string`  | `undefined` |\n\n\n## Events\n\n| Event        | Description                                                 | Type               |\n| ------------ | ----------------------------------------------------------- | ------------------ |\n| `openChange` | Emits an event if the user expands or collapses the sidebar | `CustomEvent<any>` |\n\n\n## CSS Custom Properties\n\n| Name              | Description                    |\n| ----------------- | ------------------------------ |\n| `--sidebar-width` | The width of the open sidebar. |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')];var SidebarLeft=function SidebarLeft(){return'\n    <div class="sidebar-demo">\n      '.concat(header,"\n      <ino-sidebar>\n        ").concat(sidebarContent,"\n      </ino-sidebar>\n      ").concat(mainContent,"\n    </div>\n    ")},SidebarRight=function SidebarRight(){return'\n    <div class="sidebar-demo">\n      '.concat(header,"\n      <ino-sidebar ino-align-right>\n        ").concat(sidebarContent,"\n      </ino-sidebar>\n      ").concat(mainContent,"\n    </div>\n    ")},ino_sidebar_stories_SidebarDifferentWidth=function SidebarDifferentWidth(){return'\n    <div class="sidebar-demo">\n      '.concat(header,'\n      <ino-sidebar style="--ino-sidebar-width:').concat(Object(dist.number)("--ino-sidebar-width",500),'px;">\n        ').concat(sidebarContent,"\n      </ino-sidebar>\n      ").concat(mainContent,"\n    </div>\n    ")},header='\n<div class="header">\n    <div class="header--section">\n        <ino-icon ino-clickable ino-icon="menu"></ino-icon>\n        <p>Sidebar</p>\n    </div>\n</div>\n',sidebarContent='\n\n<div class="sidebar-header" slot="header">\n    <ino-icon ino-clickable ino-icon="close"/>\n</div>\n<div class="sidebar-content" slot="content">\n  <ino-list>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n    <ino-list-item ino-text="List item"></ino-list-item>\n  </ino-list>\n</div>',mainContent='\n<div class="content">\n    <p>Cras magna diam, dictum a pretium non, elementum at nibh. Etiam\n    laoreet suscipit dui et feugiat. Vivamus id consectetur dolor. Morbi eget nunc vel felis gravida scelerisque.\n    Proin libero erat, suscipit pretium venenatis vitae, fringilla sed enim. Maecenas elit est, finibus in tellus\n    id, interdum hendrerit ligula. Nam vitae sagittis enim. Donec pulvinar vel quam a posuere. Maecenas egestas\n    ex erat, quis convallis turpis blandit a.</p>\n    <p>Maecenas sodales mauris vitae feugiat egestas. Morbi\n    porta laoreet odio vel semper. Quisque rutrum varius nulla. Morbi sagittis metus quis nibh congue, eu\n    vehicula dui congue. Pellentesque ullamcorper eros in nulla interdum auctor. Pellentesque congue, felis vitae\n    tempor porta, ipsum felis viverra dui, vel porttitor elit nibh sed purus. Nam eu diam magna. Sed nec nunc\n    lorem. Suspendisse vulputate odio lacus, eget dignissim augue pharetra eget. Ut quis augue eu elit venenatis\n    faucibus. Nam ut commodo dui. .</p>\n    <p>Praesent eget augue sed nibh aliquam lacinia ac in lectus. Vivamus sapien urna,\n    pretium in turpis at, dapibus mattis orci.Maecenas sodales mauris vitae feugiat egestas. Morbi\n    porta laoreet odio vel semper. Quisque rutrum varius nulla. Morbi sagittis metus quis nibh congue, eu\n    vehicula dui congue. Pellentesque ullamcorper eros in nulla interdum auctor. Pellentesque congue, felis vitae\n    tempor porta, ipsum felis viverra dui, vel porttitor elit nibh sed purus. Nam eu diam magna. Sed nec nunc\n    lorem. Suspendisse vulputate odio lacus, eget dignissim augue pharetra eget. Ut quis augue eu elit venenatis\n    faucibus. Nam ut commodo dui. Praesent eget augue sed nibh aliquam lacinia ac in lectus. Vivamus sapien urna,\n    pretium in turpis at, dapibus mattis orci</p>\n    <p>Proin sem nisi, tincidunt eget ipsum non, vestibulum feugiat tellus. Sed nunc enim, sodales condimentum\n    hendrerit eleifend, aliquam ac eros. Maecenas ut molestie ligula. Aenean semper nunc felis, at cursus neque congue\n    in. Sed cursus mauris nunc, et scelerisque leo ornare nec. In nec dui eu sem sodales sodales ac at enim. Integer\n    sit amet libero vitae magna facilisis malesuada sagittis nec dolor. Aenean eleifend dapibus ante, id accumsan\n    turpis luctus varius. Etiam accumsan tortor ex, sit amet suscipit turpis vehicula et. Ut ultrices ex nisi, eget\n    tristique nulla tempor eget. Etiam sed vehicula velit. Nullam lacus libero, convallis in imperdiet sit amet,\n    hendrerit sed nunc.</p>\n  </div>\n'},1372:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_snackbar_stories_DefaultUsage}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1318);var sampleText="Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.",ino_snackbar_stories_DefaultUsage=(__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { select, text } from \'@storybook/addon-knobs\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport componentReadme from \'_local-elements/src/components/ino-snackbar/readme.md\';\\nimport \'./ino-snackbar.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const target = e.target;\\n\\n    if (target.tagName !== \'INO-BUTTON\') {\\n      return;\\n    }\\n\\n    const templates = Array.from(document.getElementsByTagName(\'template\'));\\n    const templateWithId = templates.find((template) => template.id === target.id);\\n\\n    document.body.appendChild(templateWithId.content.cloneNode(true));\\n  };\\n\\n  document.addEventListener(\'click\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'click\', eventHandler);\\n  };\\n}\\n\\nconst sampleText =\\n  \'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\';\\n\\nexport default {\\n  title: \'Notification/<ino-snackbar>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-message-box\\">\\n      <div class=\\"flex-parent-center\\">\\n          <h4>Customizable Snackbar</h4>\\n          <ino-button id=\\"snackbar-temp\\">Show Snackbar</ino-button>\\n          <template id=\\"snackbar-temp\\">\\n            <ino-snackbar\\n                id=\\"custom-snackbar\\"\\n                ino-message=\\"${text(\'ino-message\', sampleText)}\\"\\n                ino-action-text=\\"${text(\'ino-action-text\', \'Anlegen\')}\\"\\n                ino-alignment=\\"${select(\\n                  \'ino-alignment\',\\n                  [\'center\', \'leading\', \'trailing\'],\\n                  \'center\'\\n                )}\\" />\\n          </template>\\n\\n        <h4>Variants</h4>\\n        <div class=\\"snackbar-variants\\">\\n          <ino-button id=\\"snackbar-with-action-temp\\">Show Snackbar (With Action)</ino-button>\\n          <template id=\\"snackbar-with-action-temp\\">\\n              <ino-snackbar\\n                  ino-message=\\"${sampleText}\\"\\n                  ino-action-text=\\"Action\\"\\n                  ino-alignment=\\"left\\" />\\n            </template>\\n          <ino-button id=\\"snackbar-no-action-temp\\">Show Snackbar (No Action)</ino-button>\\n          <template id=\\"snackbar-no-action-temp\\">\\n            <ino-snackbar\\n                ino-message=\\"${sampleText}\\"\\n                ino-alignment=\\"right\\" />\\n          </template>\\n        </div>\\n        <h4>Alignments</h4>\\n        <div class=\\"snackbar-variants\\">\\n            <ino-button id=\\"left-align\\">Left</ino-button>\\n            <template id=\\"left-align\\">\\n              <ino-snackbar\\n                  ino-message=\\"${sampleText}\\"\\n                  ino-action-text=\\"Anlegen\\"\\n                  ino-alignment=\\"left\\"\\n                  >\\n              </ino-snackbar>\\n            </template>\\n            <ino-button id=\\"center-align\\">Center</ino-button>\\n            <template id=\\"center-align\\">\\n              <ino-snackbar\\n                  ino-message=\\"${sampleText}\\"\\n                  ino-action-text=\\"Anlegen\\"\\n                  >\\n              </ino-snackbar>\\n            </template>\\n            <ino-button id=\\"right-align\\">Right</ino-button>\\n            <template id=\\"right-align\\">\\n              <ino-snackbar\\n                  ino-message=\\"${sampleText}\\"\\n                  ino-action-text=\\"Anlegen\\"\\n                  ino-alignment=\\"right\\"\\n                  >\\n              </ino-snackbar>\\n            </template>\\n            </div>\\n        </div>\\n    </div>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":45},"endLoc":{"col":3,"line":109},"startBody":{"col":28,"line":45},"endBody":{"col":3,"line":109}}};\n    \nimport { select, text } from \'@storybook/addon-knobs\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport componentReadme from \'_local-elements/src/components/ino-snackbar/readme.md\';\nimport \'./ino-snackbar.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const target = e.target;\n\n    if (target.tagName !== \'INO-BUTTON\') {\n      return;\n    }\n\n    const templates = Array.from(document.getElementsByTagName(\'template\'));\n    const templateWithId = templates.find((template) => template.id === target.id);\n\n    document.body.appendChild(templateWithId.content.cloneNode(true));\n  };\n\n  document.addEventListener(\'click\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'click\', eventHandler);\n  };\n}\n\nconst sampleText =\n  \'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\';\n\nexport default {parameters: {"storySource":{"source":"import { select, text } from \'@storybook/addon-knobs\';\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\nimport componentReadme from \'_local-elements/src/components/ino-snackbar/readme.md\';\\nimport \'./ino-snackbar.scss\';\\n\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const target = e.target;\\n\\n    if (target.tagName !== \'INO-BUTTON\') {\\n      return;\\n    }\\n\\n    const templates = Array.from(document.getElementsByTagName(\'template\'));\\n    const templateWithId = templates.find((template) => template.id === target.id);\\n\\n    document.body.appendChild(templateWithId.content.cloneNode(true));\\n  };\\n\\n  document.addEventListener(\'click\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'click\', eventHandler);\\n  };\\n}\\n\\nconst sampleText =\\n  \'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\';\\n\\nexport default {\\n  title: \'Notification/<ino-snackbar>\',\\n\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-message-box\\">\\n      <div class=\\"flex-parent-center\\">\\n          <h4>Customizable Snackbar</h4>\\n          <ino-button id=\\"snackbar-temp\\">Show Snackbar</ino-button>\\n          <template id=\\"snackbar-temp\\">\\n            <ino-snackbar\\n                id=\\"custom-snackbar\\"\\n                ino-message=\\"${text(\'ino-message\', sampleText)}\\"\\n                ino-action-text=\\"${text(\'ino-action-text\', \'Anlegen\')}\\"\\n                ino-alignment=\\"${select(\\n                  \'ino-alignment\',\\n                  [\'center\', \'leading\', \'trailing\'],\\n                  \'center\'\\n                )}\\" />\\n          </template>\\n\\n        <h4>Variants</h4>\\n        <div class=\\"snackbar-variants\\">\\n          <ino-button id=\\"snackbar-with-action-temp\\">Show Snackbar (With Action)</ino-button>\\n          <template id=\\"snackbar-with-action-temp\\">\\n              <ino-snackbar\\n                  ino-message=\\"${sampleText}\\"\\n                  ino-action-text=\\"Action\\"\\n                  ino-alignment=\\"left\\" />\\n            </template>\\n          <ino-button id=\\"snackbar-no-action-temp\\">Show Snackbar (No Action)</ino-button>\\n          <template id=\\"snackbar-no-action-temp\\">\\n            <ino-snackbar\\n                ino-message=\\"${sampleText}\\"\\n                ino-alignment=\\"right\\" />\\n          </template>\\n        </div>\\n        <h4>Alignments</h4>\\n        <div class=\\"snackbar-variants\\">\\n            <ino-button id=\\"left-align\\">Left</ino-button>\\n            <template id=\\"left-align\\">\\n              <ino-snackbar\\n                  ino-message=\\"${sampleText}\\"\\n                  ino-action-text=\\"Anlegen\\"\\n                  ino-alignment=\\"left\\"\\n                  >\\n              </ino-snackbar>\\n            </template>\\n            <ino-button id=\\"center-align\\">Center</ino-button>\\n            <template id=\\"center-align\\">\\n              <ino-snackbar\\n                  ino-message=\\"${sampleText}\\"\\n                  ino-action-text=\\"Anlegen\\"\\n                  >\\n              </ino-snackbar>\\n            </template>\\n            <ino-button id=\\"right-align\\">Right</ino-button>\\n            <template id=\\"right-align\\">\\n              <ino-snackbar\\n                  ino-message=\\"${sampleText}\\"\\n                  ino-action-text=\\"Anlegen\\"\\n                  ino-alignment=\\"right\\"\\n                  >\\n              </ino-snackbar>\\n            </template>\\n            </div>\\n        </div>\\n    </div>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":45},"endLoc":{"col":3,"line":109},"startBody":{"col":28,"line":45},"endBody":{"col":3,"line":109}}}},},\n  title: \'Notification/<ino-snackbar>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-message-box">\n      <div class="flex-parent-center">\n          <h4>Customizable Snackbar</h4>\n          <ino-button id="snackbar-temp">Show Snackbar</ino-button>\n          <template id="snackbar-temp">\n            <ino-snackbar\n                id="custom-snackbar"\n                ino-message="${text(\'ino-message\', sampleText)}"\n                ino-action-text="${text(\'ino-action-text\', \'Anlegen\')}"\n                ino-alignment="${select(\n                  \'ino-alignment\',\n                  [\'center\', \'leading\', \'trailing\'],\n                  \'center\'\n                )}" />\n          </template>\n\n        <h4>Variants</h4>\n        <div class="snackbar-variants">\n          <ino-button id="snackbar-with-action-temp">Show Snackbar (With Action)</ino-button>\n          <template id="snackbar-with-action-temp">\n              <ino-snackbar\n                  ino-message="${sampleText}"\n                  ino-action-text="Action"\n                  ino-alignment="left" />\n            </template>\n          <ino-button id="snackbar-no-action-temp">Show Snackbar (No Action)</ino-button>\n          <template id="snackbar-no-action-temp">\n            <ino-snackbar\n                ino-message="${sampleText}"\n                ino-alignment="right" />\n          </template>\n        </div>\n        <h4>Alignments</h4>\n        <div class="snackbar-variants">\n            <ino-button id="left-align">Left</ino-button>\n            <template id="left-align">\n              <ino-snackbar\n                  ino-message="${sampleText}"\n                  ino-action-text="Anlegen"\n                  ino-alignment="left"\n                  >\n              </ino-snackbar>\n            </template>\n            <ino-button id="center-align">Center</ino-button>\n            <template id="center-align">\n              <ino-snackbar\n                  ino-message="${sampleText}"\n                  ino-action-text="Anlegen"\n                  >\n              </ino-snackbar>\n            </template>\n            <ino-button id="right-align">Right</ino-button>\n            <template id="right-align">\n              <ino-snackbar\n                  ino-message="${sampleText}"\n                  ino-action-text="Anlegen"\n                  ino-alignment="right"\n                  >\n              </ino-snackbar>\n            </template>\n            </div>\n        </div>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:53},endLoc:{col:3,line:117},startBody:{col:28,line:53},endBody:{col:3,line:117}}}}},"storySource",{source:'import { select, text } from \'@storybook/addon-knobs\';\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\nimport componentReadme from \'_local-elements/src/components/ino-snackbar/readme.md\';\nimport \'./ino-snackbar.scss\';\n\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const target = e.target;\n\n    if (target.tagName !== \'INO-BUTTON\') {\n      return;\n    }\n\n    const templates = Array.from(document.getElementsByTagName(\'template\'));\n    const templateWithId = templates.find((template) => template.id === target.id);\n\n    document.body.appendChild(templateWithId.content.cloneNode(true));\n  };\n\n  document.addEventListener(\'click\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'click\', eventHandler);\n  };\n}\n\nconst sampleText =\n  \'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.\';\n\nexport default {\n  title: \'Notification/<ino-snackbar>\',\n\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-message-box">\n      <div class="flex-parent-center">\n          <h4>Customizable Snackbar</h4>\n          <ino-button id="snackbar-temp">Show Snackbar</ino-button>\n          <template id="snackbar-temp">\n            <ino-snackbar\n                id="custom-snackbar"\n                ino-message="${text(\'ino-message\', sampleText)}"\n                ino-action-text="${text(\'ino-action-text\', \'Anlegen\')}"\n                ino-alignment="${select(\n                  \'ino-alignment\',\n                  [\'center\', \'leading\', \'trailing\'],\n                  \'center\'\n                )}" />\n          </template>\n\n        <h4>Variants</h4>\n        <div class="snackbar-variants">\n          <ino-button id="snackbar-with-action-temp">Show Snackbar (With Action)</ino-button>\n          <template id="snackbar-with-action-temp">\n              <ino-snackbar\n                  ino-message="${sampleText}"\n                  ino-action-text="Action"\n                  ino-alignment="left" />\n            </template>\n          <ino-button id="snackbar-no-action-temp">Show Snackbar (No Action)</ino-button>\n          <template id="snackbar-no-action-temp">\n            <ino-snackbar\n                ino-message="${sampleText}"\n                ino-alignment="right" />\n          </template>\n        </div>\n        <h4>Alignments</h4>\n        <div class="snackbar-variants">\n            <ino-button id="left-align">Left</ino-button>\n            <template id="left-align">\n              <ino-snackbar\n                  ino-message="${sampleText}"\n                  ino-action-text="Anlegen"\n                  ino-alignment="left"\n                  >\n              </ino-snackbar>\n            </template>\n            <ino-button id="center-align">Center</ino-button>\n            <template id="center-align">\n              <ino-snackbar\n                  ino-message="${sampleText}"\n                  ino-action-text="Anlegen"\n                  >\n              </ino-snackbar>\n            </template>\n            <ino-button id="right-align">Right</ino-button>\n            <template id="right-align">\n              <ino-snackbar\n                  ino-message="${sampleText}"\n                  ino-action-text="Anlegen"\n                  ino-alignment="right"\n                  >\n              </ino-snackbar>\n            </template>\n            </div>\n        </div>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:45},endLoc:{col:3,line:109},startBody:{col:28,line:45},endBody:{col:3,line:109}}}}),title:"Notification/<ino-snackbar>",decorators:[Object(with_stencil_readme.a)("# ino-snackbar\n\nSnackbars provide brief messages about app processes at the bottom of the screen. It functions as a wrapper around the material design's [Snackbar](https://github.com/material-components/material-components-web/tree/master/packages/mdc-snackbar) component\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector('ino-snackbar')\n  .addEventListener('inoActionClick', e => alert('Action-Button was clicked!'));\n\ndocument\n  .querySelector('ino-snackbar')\n  .addEventListener('hideEl', e => alert('Snackbar hides!'));\n```\n\n```html\n<ino-snackbar\n  ino-message=\"<string>\"\n  ino-action-text=\"<string>\"\n  ino-action-on-bottom\n  ino-align-start\n  oninoactionclick=\"handleClickEl()\"\n  onhideel=\"handleHideEl()\"\n>\n</ino-snackbar>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from 'react';\nimport { InoSnackbar } from '@inovex.de/elements/dist/react';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoSnackbar\n        inoMessage=\"Message deleted\"\n        inoActionText=\"Undo\"\n        inoActionOnBottom={false}\n        inoAlignStart={false}\n      />\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from 'react';\nimport { InoSnackbar } from '@inovex.de/elements/dist/react';\nimport { Components } from '@inovex.de/elements/dist/types/components';\n\nconst Snackbar: React.FunctionComponent<Components.InoSnackbarAttributes> = props => {\n  const {\n    inoMessage,\n    inoActionText,\n    inoActionOnBottom,\n    inoAlignStart\n  } = props;\n\n  return (\n    <InoSnackbar\n      inoMessage={inoMessage}\n      inoActionText={inoActionText}\n      inoActionOnBottom={inoActionOnBottom}\n      inoAlignStart={inoAlignStart}\n    >\n      {props.children}\n    </InoSnackbar>\n  );\n};\n\nclass MyComponent extends Component {\n  const conditionToRender = true;\n\n  render() {\n    return conditionToRender && (\n      <Snackbar\n        inoMessage=\"Message deleted\"\n        inoActionText=\"Undo\"\n        inoActionOnBottom={false}\n        inoAlignStart={false}\n      />\n    );\n  }\n}\n```\n\n## Additional Hints\n\nSnackbar is displayed when ino-show is changed to checked.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property        | Attribute         | Description                                                                                                                    | Type                            | Default     |\n| --------------- | ----------------- | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------- | ----------- |\n| `inoActionText` | `ino-action-text` | The text to display for the action button. If no text is defined, the snack bar is displayed in an alternative feedback style. | `string`                        | `''`        |\n| `inoAlignment`  | `ino-alignment`   | Controls if Snackbar is centered or left-aligned or right-aligned.                                                             | `\"center\" \\| \"left\" \\| \"right\"` | `'center'`  |\n| `inoMessage`    | `ino-message`     | The text message to display.                                                                                                   | `string`                        | `undefined` |\n\n\n## Events\n\n| Event            | Description                                                                                           | Type               |\n| ---------------- | ----------------------------------------------------------------------------------------------------- | ------------------ |\n| `hideEl`         | Event that emits as soon as the snackbar hides. Listen to this event to hide or destroy this element. | `CustomEvent<any>` |\n| `inoActionClick` | Event that emits as soon as the action button is clicked.                                             | `CustomEvent<any>` |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-icon-button](../ino-icon-button)\n- [ino-button](../ino-button)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-snackbar --\x3e ino-icon-button\n  ino-snackbar --\x3e ino-button\n  ino-icon-button --\x3e ino-icon\n  ino-button --\x3e ino-spinner\n  style ino-snackbar fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var target=e.target;if("INO-BUTTON"===target.tagName){var templateWithId=Array.from(document.getElementsByTagName("template")).find((function(template){return template.id===target.id}));document.body.appendChild(templateWithId.content.cloneNode(!0))}};return document.addEventListener("click",eventHandler),function(){document.removeEventListener("click",eventHandler)}}(),story()}]},function DefaultUsage(){return'\n    <div class="story-message-box">\n      <div class="flex-parent-center">\n          <h4>Customizable Snackbar</h4>\n          <ino-button id="snackbar-temp">Show Snackbar</ino-button>\n          <template id="snackbar-temp">\n            <ino-snackbar\n                id="custom-snackbar"\n                ino-message="'.concat(Object(dist.text)("ino-message",sampleText),'"\n                ino-action-text="').concat(Object(dist.text)("ino-action-text","Anlegen"),'"\n                ino-alignment="').concat(Object(dist.select)("ino-alignment",["center","leading","trailing"],"center"),'" />\n          </template>\n\n        <h4>Variants</h4>\n        <div class="snackbar-variants">\n          <ino-button id="snackbar-with-action-temp">Show Snackbar (With Action)</ino-button>\n          <template id="snackbar-with-action-temp">\n              <ino-snackbar\n                  ino-message="').concat(sampleText,'"\n                  ino-action-text="Action"\n                  ino-alignment="left" />\n            </template>\n          <ino-button id="snackbar-no-action-temp">Show Snackbar (No Action)</ino-button>\n          <template id="snackbar-no-action-temp">\n            <ino-snackbar\n                ino-message="').concat(sampleText,'"\n                ino-alignment="right" />\n          </template>\n        </div>\n        <h4>Alignments</h4>\n        <div class="snackbar-variants">\n            <ino-button id="left-align">Left</ino-button>\n            <template id="left-align">\n              <ino-snackbar\n                  ino-message="').concat(sampleText,'"\n                  ino-action-text="Anlegen"\n                  ino-alignment="left"\n                  >\n              </ino-snackbar>\n            </template>\n            <ino-button id="center-align">Center</ino-button>\n            <template id="center-align">\n              <ino-snackbar\n                  ino-message="').concat(sampleText,'"\n                  ino-action-text="Anlegen"\n                  >\n              </ino-snackbar>\n            </template>\n            <ino-button id="right-align">Right</ino-button>\n            <template id="right-align">\n              <ino-snackbar\n                  ino-message="').concat(sampleText,'"\n                  ino-action-text="Anlegen"\n                  ino-alignment="right"\n                  >\n              </ino-snackbar>\n            </template>\n            </div>\n        </div>\n    </div>\n  ')})},1373:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_spinner_stories_DefaultUsage})),__webpack_require__.d(__webpack_exports__,"AsModal",(function(){return AsModal}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1320);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, number, select } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-spinner/readme.md\';\\nimport \'./ino-spinner.scss\';\\n\\nexport default {\\n  title: \'Notification/<ino-spinner>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-spinner\\">\\n      <div class=\\"flex-parent-center\\">\\n        <div>\\n          <h4>Customizable Spinner</h4>\\n          <ino-spinner\\n            class=\\"customizable-spinner\\"\\n            ino-color-scheme=\\"${select(\\n              \'ino-color-scheme\',\\n              [\'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\\n              \'primary\'\\n            )}\\"\\n            ino-type=\\"${select(\'ino-type\', [\'tile\', \'bounce\', \'circle\'], \'tile\')}\\"\\n            ino-height=\\"${number(\'ino-height\', 40)}\\"\\n            ino-width=\\"${number(\'ino-width\', 40)}\\"\\n            ino-modal=\\"${boolean(\'ino-modal\', false)}\\"\\n          >\\n          </ino-spinner>\\n        </div>\\n      </div>\\n\\n      <h4>Color Scheme</h4>\\n\\n      <div class=\\"flex-parent\\">\\n        <div class=\\"flex-child\\">\\n          <h5>primary</h5>\\n          <ino-spinner ino-color-scheme=\\"primary\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>secondary</h5>\\n          <ino-spinner ino-color-scheme=\\"secondary\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>success</h5>\\n          <ino-spinner ino-color-scheme=\\"success\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>warning</h5>\\n          <ino-spinner ino-color-scheme=\\"warning\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>error</h5>\\n          <ino-spinner ino-color-scheme=\\"error\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>light</h5>\\n          <ino-spinner ino-color-scheme=\\"light\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>dark</h5>\\n          <ino-spinner ino-color-scheme=\\"dark\\"></ino-spinner>\\n        </div>\\n      </div>\\n\\n      <h4>Type</h4>\\n      <div class=\\"flex-parent\\">\\n        <div class=\\"flex-child\\">\\n          <h5>tile</h5>\\n          <ino-spinner ino-type=\\"tile\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>bounce</h5>\\n          <ino-spinner ino-type=\\"bounce\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>circle</h5>\\n          <ino-spinner ino-type=\\"circle\\"></ino-spinner>\\n        </div>\\n      </div>\\n    </div>\\n  `;\\n\\nexport const AsModal = () => /*html*/ `\\n    <div class=\\"story-button\\">\\n      <ino-spinner ino-modal></ino-spinner>\\n    </div>\\n  `;\\n\\nAsModal.storyName = \'As modal\';\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":13},"endLoc":{"col":3,"line":83},"startBody":{"col":28,"line":13},"endBody":{"col":3,"line":83}},"AsModal":{"startLoc":{"col":23,"line":85},"endLoc":{"col":3,"line":89},"startBody":{"col":23,"line":85},"endBody":{"col":3,"line":89}}};\n    \nimport { boolean, number, select } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-spinner/readme.md\';\nimport \'./ino-spinner.scss\';\n\nexport default {parameters: {"storySource":{"source":"import { boolean, number, select } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-spinner/readme.md\';\\nimport \'./ino-spinner.scss\';\\n\\nexport default {\\n  title: \'Notification/<ino-spinner>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-spinner\\">\\n      <div class=\\"flex-parent-center\\">\\n        <div>\\n          <h4>Customizable Spinner</h4>\\n          <ino-spinner\\n            class=\\"customizable-spinner\\"\\n            ino-color-scheme=\\"${select(\\n              \'ino-color-scheme\',\\n              [\'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\\n              \'primary\'\\n            )}\\"\\n            ino-type=\\"${select(\'ino-type\', [\'tile\', \'bounce\', \'circle\'], \'tile\')}\\"\\n            ino-height=\\"${number(\'ino-height\', 40)}\\"\\n            ino-width=\\"${number(\'ino-width\', 40)}\\"\\n            ino-modal=\\"${boolean(\'ino-modal\', false)}\\"\\n          >\\n          </ino-spinner>\\n        </div>\\n      </div>\\n\\n      <h4>Color Scheme</h4>\\n\\n      <div class=\\"flex-parent\\">\\n        <div class=\\"flex-child\\">\\n          <h5>primary</h5>\\n          <ino-spinner ino-color-scheme=\\"primary\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>secondary</h5>\\n          <ino-spinner ino-color-scheme=\\"secondary\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>success</h5>\\n          <ino-spinner ino-color-scheme=\\"success\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>warning</h5>\\n          <ino-spinner ino-color-scheme=\\"warning\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>error</h5>\\n          <ino-spinner ino-color-scheme=\\"error\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>light</h5>\\n          <ino-spinner ino-color-scheme=\\"light\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>dark</h5>\\n          <ino-spinner ino-color-scheme=\\"dark\\"></ino-spinner>\\n        </div>\\n      </div>\\n\\n      <h4>Type</h4>\\n      <div class=\\"flex-parent\\">\\n        <div class=\\"flex-child\\">\\n          <h5>tile</h5>\\n          <ino-spinner ino-type=\\"tile\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>bounce</h5>\\n          <ino-spinner ino-type=\\"bounce\\"></ino-spinner>\\n        </div>\\n        <div class=\\"flex-child\\">\\n          <h5>circle</h5>\\n          <ino-spinner ino-type=\\"circle\\"></ino-spinner>\\n        </div>\\n      </div>\\n    </div>\\n  `;\\n\\nexport const AsModal = () => /*html*/ `\\n    <div class=\\"story-button\\">\\n      <ino-spinner ino-modal></ino-spinner>\\n    </div>\\n  `;\\n\\nAsModal.storyName = \'As modal\';\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":13},"endLoc":{"col":3,"line":83},"startBody":{"col":28,"line":13},"endBody":{"col":3,"line":83}},"as-modal":{"startLoc":{"col":23,"line":85},"endLoc":{"col":3,"line":89},"startBody":{"col":23,"line":85},"endBody":{"col":3,"line":89}}}},},\n  title: \'Notification/<ino-spinner>\',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-spinner">\n      <div class="flex-parent-center">\n        <div>\n          <h4>Customizable Spinner</h4>\n          <ino-spinner\n            class="customizable-spinner"\n            ino-color-scheme="${select(\n              \'ino-color-scheme\',\n              [\'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\n              \'primary\'\n            )}"\n            ino-type="${select(\'ino-type\', [\'tile\', \'bounce\', \'circle\'], \'tile\')}"\n            ino-height="${number(\'ino-height\', 40)}"\n            ino-width="${number(\'ino-width\', 40)}"\n            ino-modal="${boolean(\'ino-modal\', false)}"\n          >\n          </ino-spinner>\n        </div>\n      </div>\n\n      <h4>Color Scheme</h4>\n\n      <div class="flex-parent">\n        <div class="flex-child">\n          <h5>primary</h5>\n          <ino-spinner ino-color-scheme="primary"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>secondary</h5>\n          <ino-spinner ino-color-scheme="secondary"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>success</h5>\n          <ino-spinner ino-color-scheme="success"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>warning</h5>\n          <ino-spinner ino-color-scheme="warning"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>error</h5>\n          <ino-spinner ino-color-scheme="error"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>light</h5>\n          <ino-spinner ino-color-scheme="light"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>dark</h5>\n          <ino-spinner ino-color-scheme="dark"></ino-spinner>\n        </div>\n      </div>\n\n      <h4>Type</h4>\n      <div class="flex-parent">\n        <div class="flex-child">\n          <h5>tile</h5>\n          <ino-spinner ino-type="tile"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>bounce</h5>\n          <ino-spinner ino-type="bounce"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>circle</h5>\n          <ino-spinner ino-type="circle"></ino-spinner>\n        </div>\n      </div>\n    </div>\n  `;;\n\nexport const AsModal = () => /*html*/ `\n    <div class="story-button">\n      <ino-spinner ino-modal></ino-spinner>\n    </div>\n  `;\n\nAsModal.storyName = \'As modal\';\n',locationsMap:{"default-usage":{startLoc:{col:28,line:21},endLoc:{col:3,line:91},startBody:{col:28,line:21},endBody:{col:3,line:91}},"as-modal":{startLoc:{col:23,line:93},endLoc:{col:3,line:97},startBody:{col:23,line:93},endBody:{col:3,line:97}}}}},"storySource",{source:'import { boolean, number, select } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-spinner/readme.md\';\nimport \'./ino-spinner.scss\';\n\nexport default {\n  title: \'Notification/<ino-spinner>\',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-spinner">\n      <div class="flex-parent-center">\n        <div>\n          <h4>Customizable Spinner</h4>\n          <ino-spinner\n            class="customizable-spinner"\n            ino-color-scheme="${select(\n              \'ino-color-scheme\',\n              [\'primary\', \'secondary\', \'success\', \'warning\', \'error\', \'light\', \'dark\'],\n              \'primary\'\n            )}"\n            ino-type="${select(\'ino-type\', [\'tile\', \'bounce\', \'circle\'], \'tile\')}"\n            ino-height="${number(\'ino-height\', 40)}"\n            ino-width="${number(\'ino-width\', 40)}"\n            ino-modal="${boolean(\'ino-modal\', false)}"\n          >\n          </ino-spinner>\n        </div>\n      </div>\n\n      <h4>Color Scheme</h4>\n\n      <div class="flex-parent">\n        <div class="flex-child">\n          <h5>primary</h5>\n          <ino-spinner ino-color-scheme="primary"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>secondary</h5>\n          <ino-spinner ino-color-scheme="secondary"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>success</h5>\n          <ino-spinner ino-color-scheme="success"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>warning</h5>\n          <ino-spinner ino-color-scheme="warning"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>error</h5>\n          <ino-spinner ino-color-scheme="error"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>light</h5>\n          <ino-spinner ino-color-scheme="light"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>dark</h5>\n          <ino-spinner ino-color-scheme="dark"></ino-spinner>\n        </div>\n      </div>\n\n      <h4>Type</h4>\n      <div class="flex-parent">\n        <div class="flex-child">\n          <h5>tile</h5>\n          <ino-spinner ino-type="tile"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>bounce</h5>\n          <ino-spinner ino-type="bounce"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>circle</h5>\n          <ino-spinner ino-type="circle"></ino-spinner>\n        </div>\n      </div>\n    </div>\n  `;\n\nexport const AsModal = () => /*html*/ `\n    <div class="story-button">\n      <ino-spinner ino-modal></ino-spinner>\n    </div>\n  `;\n\nAsModal.storyName = \'As modal\';\n',locationsMap:{"default-usage":{startLoc:{col:28,line:13},endLoc:{col:3,line:83},startBody:{col:28,line:13},endBody:{col:3,line:83}},"as-modal":{startLoc:{col:23,line:85},endLoc:{col:3,line:89},startBody:{col:23,line:85},endBody:{col:3,line:89}}}}),title:"Notification/<ino-spinner>",decorators:[Object(with_stencil_readme.a)('# ino-spinner\n\nA component which displays a variety of spinners. Use spinners to show that the app is loading content or performing another process for which the user has to wait.\n\nThis component contains three different types of spinners animated with pure CSS. It mainly relies on [Spinkit](http://tobiasahlin.com/spinkit/) and may be extended in future with more types.\n\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-spinner\n  ino-type="<string>"\n  ino-color-scheme="<string>"\n  ino-height="<number>"\n  ino-modal\n  ino-width="<number>"\n>\n</ino-spinner>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoSpinner } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return <InoSpinner inoColorScheme="warning" />;\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoSpinner } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Spinner: React.FunctionComponent<Components.InoSpinnerAttributes> = props => {\n  const { inoColorScheme } = props;\n\n  return (\n    <InoSpinner inoColorScheme={inoColorScheme}>{props.children}</InoSpinner>\n  );\n};\n\nclass MyComponent extends Component {\n  render() {\n    return <Spinner inoColorScheme="warning" />;\n  }\n}\n```\n\n## Additional Hints\n\nUse one of the provided types in `ino-type` to give the spinner the shape. Adjust the size of the spinner by changing the `ino-height` and `ino-width` attributes. Finally, colorize the spinner using `ino-color-scheme` (see the attribute docs below).\n\n**Modal:** If operations have to block the entire page, the spinner can be marked with `ino-modal` to spread over the entire screen and overlay the current page.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property         | Attribute          | Description                                                                                                                                                                                           | Type                                                                                 | Default     |\n| ---------------- | ------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ | ----------- |\n| `inoColorScheme` | `ino-color-scheme` | The name of the color scheme which is used to style the background and outline of this component. Possible values: `primary` (default),  `secondary`, `success`, `warning`, `error`, `light`, `dark`. | `"dark" \\| "error" \\| "light" \\| "primary" \\| "secondary" \\| "success" \\| "warning"` | `\'primary\'` |\n| `inoHeight`      | `ino-height`       | The height of this spinner (default = 40)                                                                                                                                                             | `number`                                                                             | `40`        |\n| `inoModal`       | `ino-modal`        | If true, the spinner is shown as modal over the current app page.                                                                                                                                     | `boolean`                                                                            | `undefined` |\n| `inoType`        | `ino-type`         | The type of this spinner. Possible values: `tile` (default), `bounce` or `circle`                                                                                                                     | `"bounce" \\| "circle" \\| "tile"`                                                     | `\'tile\'`    |\n| `inoWidth`       | `ino-width`        | The width of this spinner (defaul = 40)                                                                                                                                                               | `number`                                                                             | `40`        |\n\n\n## Dependencies\n\n### Used by\n\n - [ino-button](../ino-button)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-button --\x3e ino-spinner\n  style ino-spinner fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')]};var ino_spinner_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-spinner">\n      <div class="flex-parent-center">\n        <div>\n          <h4>Customizable Spinner</h4>\n          <ino-spinner\n            class="customizable-spinner"\n            ino-color-scheme="'.concat(Object(dist.select)("ino-color-scheme",["primary","secondary","success","warning","error","light","dark"],"primary"),'"\n            ino-type="').concat(Object(dist.select)("ino-type",["tile","bounce","circle"],"tile"),'"\n            ino-height="').concat(Object(dist.number)("ino-height",40),'"\n            ino-width="').concat(Object(dist.number)("ino-width",40),'"\n            ino-modal="').concat(Object(dist.boolean)("ino-modal",!1),'"\n          >\n          </ino-spinner>\n        </div>\n      </div>\n\n      <h4>Color Scheme</h4>\n\n      <div class="flex-parent">\n        <div class="flex-child">\n          <h5>primary</h5>\n          <ino-spinner ino-color-scheme="primary"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>secondary</h5>\n          <ino-spinner ino-color-scheme="secondary"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>success</h5>\n          <ino-spinner ino-color-scheme="success"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>warning</h5>\n          <ino-spinner ino-color-scheme="warning"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>error</h5>\n          <ino-spinner ino-color-scheme="error"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>light</h5>\n          <ino-spinner ino-color-scheme="light"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>dark</h5>\n          <ino-spinner ino-color-scheme="dark"></ino-spinner>\n        </div>\n      </div>\n\n      <h4>Type</h4>\n      <div class="flex-parent">\n        <div class="flex-child">\n          <h5>tile</h5>\n          <ino-spinner ino-type="tile"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>bounce</h5>\n          <ino-spinner ino-type="bounce"></ino-spinner>\n        </div>\n        <div class="flex-child">\n          <h5>circle</h5>\n          <ino-spinner ino-type="circle"></ino-spinner>\n        </div>\n      </div>\n    </div>\n  ')},AsModal=function AsModal(){return'\n    <div class="story-button">\n      <ino-spinner ino-modal></ino-spinner>\n    </div>\n  '};AsModal.storyName="As modal"},1374:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_textarea_stories_DefaultUsage}));var _parameters,dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1328);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}__webpack_exports__.default={title:"Input/<ino-textarea>",parameters:(_parameters={storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { boolean, number, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-textarea/readme.md\';\\nimport \'./ino-textarea.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-textarea\') {\\n      return;\\n    }\\n\\n    el.setAttribute(\'value\', e.detail);\\n  };\\n\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-textarea>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'input .customizable-textarea\', \'valueChange .customizable-textarea\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-textarea\\">\\n    <style>\\n      ino-textarea.customizable-textarea {\\n        --textarea-outline-color: ${text(\\n          \'--textarea-outline-color\',\\n          \'#3d40f5\',\\n          \'Custom Properties\'\\n        )};\\n        --textarea-caret-color: ${text(\'--textarea-caret-color\', \'#3d40f5\', \'Custom Properties\')};\\n        --textarea-label-color: ${text(\'--textarea-label-color\', \'#3d40f5\', \'Custom Properties\')};\\n      }\\n  </style>\\n  <ino-textarea class=\\"customizable-textarea\\"\\n    cols=\\"${number(\'cols\', 60)}\\"\\n    rows=\\"${number(\'rows\', 5)}\\"\\n    placeholder=\\"${text(\'placeholder\', \'\')}\\"\\n    value=\\"${text(\'value\', \'\')}\\"\\n    ino-label=\\"${text(\'ino-label\', \'Customizable textarea\')}\\"\\n    minlength=\\"${number(\'minlength\', 0)}\\"\\n    maxlength=\\"${number(\'maxlength\', 30)}\\"\\n    disabled=\\"${boolean(\'disabled\', false)}\\"\\n    required=\\"${boolean(\'required\', false)}\\"\\n    ino-show-label-hint=\\"${boolean(\'ino-show-label-hint\', false)}\\"\\n    autogrow=\\"${boolean(\'autogrow\', false)}\\">\\n  </ino-textarea>\\n\\n  <h4>Labels</h4>\\n  <ino-textarea ino-label=\\"Floating label\\" cols=\\"30\\" rows=\\"3\\"></ino-textarea>\\n  <ino-textarea ino-label=\\"Floating label\\" value=\\"With value\\" cols=\\"30\\" rows=\\"3\\"></ino-textarea>\\n\\n  <h4>States</h4>\\n  <ino-textarea placeholder=\\"Disabled\\" disabled cols=\\"30\\" rows=\\"3\\"></ino-textarea>\\n  <ino-textarea ino-label=\\"Required\\" required ino-show-label-hint cols=\\"30\\" rows=\\"3\\"></ino-textarea>\\n  <ino-textarea ino-label=\\"Optional\\" cols=\\"30\\" ino-show-label-hint rows=\\"3\\"></ino-textarea>\\n</div>\\n`;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":45},"endLoc":{"col":1,"line":81},"startBody":{"col":28,"line":45},"endBody":{"col":1,"line":81}}};\n    \nimport { boolean, number, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-textarea/readme.md\';\nimport \'./ino-textarea.scss\';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== \'ino-textarea\') {\n      return;\n    }\n\n    el.setAttribute(\'value\', e.detail);\n  };\n\n  document.addEventListener(\'valueChange\', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener(\'valueChange\', eventHandler);\n  };\n}\n\nexport default {\n  title: \'Input/<ino-textarea>\',\n  parameters: {"storySource":{"source":"import { boolean, number, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-textarea/readme.md\';\\nimport \'./ino-textarea.scss\';\\n\\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\\nfunction subscribeToComponentEvents() {\\n  // == event block\\n  const eventHandler = function (e) {\\n    const el = e.target;\\n    if (el.tagName.toLowerCase() !== \'ino-textarea\') {\\n      return;\\n    }\\n\\n    el.setAttribute(\'value\', e.detail);\\n  };\\n\\n  document.addEventListener(\'valueChange\', eventHandler);\\n  // == event block\\n\\n  // unsubscribe function will be called by Storybook\\n  return () => {\\n    document.removeEventListener(\'valueChange\', eventHandler);\\n  };\\n}\\n\\nexport default {\\n  title: \'Input/<ino-textarea>\',\\n  parameters: {\\n    actions: {\\n      handles: [\'input .customizable-textarea\', \'valueChange .customizable-textarea\']\\n    }\\n  },\\n  decorators: [\\n    withStencilReadme(componentReadme),\\n    (story) => {\\n      subscribeToComponentEvents();\\n      return story();\\n    },\\n  ],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n<div class=\\"story-textarea\\">\\n    <style>\\n      ino-textarea.customizable-textarea {\\n        --textarea-outline-color: ${text(\\n          \'--textarea-outline-color\',\\n          \'#3d40f5\',\\n          \'Custom Properties\'\\n        )};\\n        --textarea-caret-color: ${text(\'--textarea-caret-color\', \'#3d40f5\', \'Custom Properties\')};\\n        --textarea-label-color: ${text(\'--textarea-label-color\', \'#3d40f5\', \'Custom Properties\')};\\n      }\\n  </style>\\n  <ino-textarea class=\\"customizable-textarea\\"\\n    cols=\\"${number(\'cols\', 60)}\\"\\n    rows=\\"${number(\'rows\', 5)}\\"\\n    placeholder=\\"${text(\'placeholder\', \'\')}\\"\\n    value=\\"${text(\'value\', \'\')}\\"\\n    ino-label=\\"${text(\'ino-label\', \'Customizable textarea\')}\\"\\n    minlength=\\"${number(\'minlength\', 0)}\\"\\n    maxlength=\\"${number(\'maxlength\', 30)}\\"\\n    disabled=\\"${boolean(\'disabled\', false)}\\"\\n    required=\\"${boolean(\'required\', false)}\\"\\n    ino-show-label-hint=\\"${boolean(\'ino-show-label-hint\', false)}\\"\\n    autogrow=\\"${boolean(\'autogrow\', false)}\\">\\n  </ino-textarea>\\n\\n  <h4>Labels</h4>\\n  <ino-textarea ino-label=\\"Floating label\\" cols=\\"30\\" rows=\\"3\\"></ino-textarea>\\n  <ino-textarea ino-label=\\"Floating label\\" value=\\"With value\\" cols=\\"30\\" rows=\\"3\\"></ino-textarea>\\n\\n  <h4>States</h4>\\n  <ino-textarea placeholder=\\"Disabled\\" disabled cols=\\"30\\" rows=\\"3\\"></ino-textarea>\\n  <ino-textarea ino-label=\\"Required\\" required ino-show-label-hint cols=\\"30\\" rows=\\"3\\"></ino-textarea>\\n  <ino-textarea ino-label=\\"Optional\\" cols=\\"30\\" ino-show-label-hint rows=\\"3\\"></ino-textarea>\\n</div>\\n`;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":45},"endLoc":{"col":1,"line":81},"startBody":{"col":28,"line":45},"endBody":{"col":1,"line":81}}}},\n    actions: {\n      handles: [\'input .customizable-textarea\', \'valueChange .customizable-textarea\']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class="story-textarea">\n    <style>\n      ino-textarea.customizable-textarea {\n        --textarea-outline-color: ${text(\n          \'--textarea-outline-color\',\n          \'#3d40f5\',\n          \'Custom Properties\'\n        )};\n        --textarea-caret-color: ${text(\'--textarea-caret-color\', \'#3d40f5\', \'Custom Properties\')};\n        --textarea-label-color: ${text(\'--textarea-label-color\', \'#3d40f5\', \'Custom Properties\')};\n      }\n  </style>\n  <ino-textarea class="customizable-textarea"\n    cols="${number(\'cols\', 60)}"\n    rows="${number(\'rows\', 5)}"\n    placeholder="${text(\'placeholder\', \'\')}"\n    value="${text(\'value\', \'\')}"\n    ino-label="${text(\'ino-label\', \'Customizable textarea\')}"\n    minlength="${number(\'minlength\', 0)}"\n    maxlength="${number(\'maxlength\', 30)}"\n    disabled="${boolean(\'disabled\', false)}"\n    required="${boolean(\'required\', false)}"\n    ino-show-label-hint="${boolean(\'ino-show-label-hint\', false)}"\n    autogrow="${boolean(\'autogrow\', false)}">\n  </ino-textarea>\n\n  <h4>Labels</h4>\n  <ino-textarea ino-label="Floating label" cols="30" rows="3"></ino-textarea>\n  <ino-textarea ino-label="Floating label" value="With value" cols="30" rows="3"></ino-textarea>\n\n  <h4>States</h4>\n  <ino-textarea placeholder="Disabled" disabled cols="30" rows="3"></ino-textarea>\n  <ino-textarea ino-label="Required" required ino-show-label-hint cols="30" rows="3"></ino-textarea>\n  <ino-textarea ino-label="Optional" cols="30" ino-show-label-hint rows="3"></ino-textarea>\n</div>\n`;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:53},endLoc:{col:1,line:89},startBody:{col:28,line:53},endBody:{col:1,line:89}}}}},_defineProperty(_parameters,"storySource",{source:"import { boolean, number, text } from '@storybook/addon-knobs';\n\nimport withStencilReadme from '_local-storybookcore/with-stencil-readme';\n\nimport componentReadme from '_local-elements/src/components/ino-textarea/readme.md';\nimport './ino-textarea.scss';\n\n// https://github.com/storybooks/storybook/issues/4337#issuecomment-428495664\nfunction subscribeToComponentEvents() {\n  // == event block\n  const eventHandler = function (e) {\n    const el = e.target;\n    if (el.tagName.toLowerCase() !== 'ino-textarea') {\n      return;\n    }\n\n    el.setAttribute('value', e.detail);\n  };\n\n  document.addEventListener('valueChange', eventHandler);\n  // == event block\n\n  // unsubscribe function will be called by Storybook\n  return () => {\n    document.removeEventListener('valueChange', eventHandler);\n  };\n}\n\nexport default {\n  title: 'Input/<ino-textarea>',\n  parameters: {\n    actions: {\n      handles: ['input .customizable-textarea', 'valueChange .customizable-textarea']\n    }\n  },\n  decorators: [\n    withStencilReadme(componentReadme),\n    (story) => {\n      subscribeToComponentEvents();\n      return story();\n    },\n  ],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n<div class=\"story-textarea\">\n    <style>\n      ino-textarea.customizable-textarea {\n        --textarea-outline-color: ${text(\n          '--textarea-outline-color',\n          '#3d40f5',\n          'Custom Properties'\n        )};\n        --textarea-caret-color: ${text('--textarea-caret-color', '#3d40f5', 'Custom Properties')};\n        --textarea-label-color: ${text('--textarea-label-color', '#3d40f5', 'Custom Properties')};\n      }\n  </style>\n  <ino-textarea class=\"customizable-textarea\"\n    cols=\"${number('cols', 60)}\"\n    rows=\"${number('rows', 5)}\"\n    placeholder=\"${text('placeholder', '')}\"\n    value=\"${text('value', '')}\"\n    ino-label=\"${text('ino-label', 'Customizable textarea')}\"\n    minlength=\"${number('minlength', 0)}\"\n    maxlength=\"${number('maxlength', 30)}\"\n    disabled=\"${boolean('disabled', false)}\"\n    required=\"${boolean('required', false)}\"\n    ino-show-label-hint=\"${boolean('ino-show-label-hint', false)}\"\n    autogrow=\"${boolean('autogrow', false)}\">\n  </ino-textarea>\n\n  <h4>Labels</h4>\n  <ino-textarea ino-label=\"Floating label\" cols=\"30\" rows=\"3\"></ino-textarea>\n  <ino-textarea ino-label=\"Floating label\" value=\"With value\" cols=\"30\" rows=\"3\"></ino-textarea>\n\n  <h4>States</h4>\n  <ino-textarea placeholder=\"Disabled\" disabled cols=\"30\" rows=\"3\"></ino-textarea>\n  <ino-textarea ino-label=\"Required\" required ino-show-label-hint cols=\"30\" rows=\"3\"></ino-textarea>\n  <ino-textarea ino-label=\"Optional\" cols=\"30\" ino-show-label-hint rows=\"3\"></ino-textarea>\n</div>\n`;\n",locationsMap:{"default-usage":{startLoc:{col:28,line:45},endLoc:{col:1,line:81},startBody:{col:28,line:45},endBody:{col:1,line:81}}}}),_defineProperty(_parameters,"actions",{handles:["input .customizable-textarea","valueChange .customizable-textarea"]}),_parameters),decorators:[Object(with_stencil_readme.a)("# ino-textarea\n\nA textarea component with styles. It uses a material [textfield](https://github.com/material-components/material-components-web/tree/master/packages/mdc-textfield) component for its styling.\n\n> **Note:** The textarea is always styled in an outlined manner. If you need to use a textarea in combination with other form inputs (`ino-input`), use their respective outline style.\n\n### Usage\n\nThe component can be used as follows:\n\n```js\ndocument\n  .querySelector('ino-textarea')\n  .addEventListener('valueChange', e =>\n    alert(`The new textarea value is ${e.detail}`)\n  );\n```\n\n```html\n<ino-textarea\n  autofocus\n  cols=\"<number>\"\n  disabled\n  maxlength=\"<number>\"\n  minlength=\"<number>\"\n  name=\"<string>\"\n  placeholder=\"<string>\"\n  required\n  rows=\"<number>\"\n  value=\"<string>\"\n  autogrow\n  ino-label=\"<string>\"\n>\n</ino-textarea>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from 'react';\nimport { InoTextarea } from '@inovex.de/elements/dist/react';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoTextarea autogrow>\n        Here's some text. And the textarea will grow when you enter more...\n      </InoTextarea>\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from 'react';\nimport { InoTextarea } from '@inovex.de/elements/dist/react';\nimport { Components } from '@inovex.de/elements/dist/types/components';\n\nconst Textarea: React.FunctionComponent<Components.InoTextareaAttributes> = props => {\n  const { autogrow } = props;\n\n  return <InoTextarea autogrow={autogrow}>{props.children}</InoTextarea>;\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <Textarea autogrow>\n        Here's some text. And the textarea will grow when you enter more...\n      </Textarea>\n    );\n  }\n}\n```\n\n## Additional Hints\n\n**Labels**: The component shows a floating label containing the value of `ino-label`.\n\n### Control flow\n\nThe textarea has a controlled (unmanaged) attribute `value`. For this reason, the value doesn't change on user interaction but on updates of `value`. Listen to `valueChange`, sync it with your local state and pass the new value to the component again to change value of input.\n\n```js\ndocument.querySelector('ino-textarea').addEventListener('valueChanges', e => {\n  // ...\n});\n```\n\n```html\n<ino-textarea\n  value={this.state.value}\n  valueChange={e => this.state.value = e.detail}>\n</ino-textarea>\n```\n\n### Event Behaviour\n\nThe component is based on a native input with additional features. Thus, the component bubbles events triggered by the native [HTMLTextareaElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement) like `keyup`. The native `input` and `change` event is not bubbled because the value will only change when the value attribute changes.\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property               | Attribute                | Description                                                                                                                                                                                                                                                                                               | Type      | Default     |\n| ---------------------- | ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| `autoFocus`            | `autofocus`              | The autofocus of this element.                                                                                                                                                                                                                                                                            | `boolean` | `undefined` |\n| `autogrow`             | `autogrow`               | An optional flag to allow the textarea adjust its height to display all the content. The `rows` attribute can also be used to specify a minimum height. Use CSS to specify a max-height for the textarea element. Once the height exceeds the max-height, autogrow will re-enable the vertical scrollbar. | `boolean` | `false`     |\n| `cols`                 | `cols`                   | The number of cols of this textarea.                                                                                                                                                                                                                                                                      | `number`  | `undefined` |\n| `disabled`             | `disabled`               | Disables this element.                                                                                                                                                                                                                                                                                    | `boolean` | `undefined` |\n| `inoLabel`             | `ino-label`              | The optional floating label of this input field.                                                                                                                                                                                                                                                          | `string`  | `undefined` |\n| `inoShowLabelHint`     | `ino-show-label-hint`    | If true, an *optional* message is displayed if not required, otherwise a * marker is displayed if required                                                                                                                                                                                                | `boolean` | `undefined` |\n| `maxlength`            | `maxlength`              | The max length of this element.                                                                                                                                                                                                                                                                           | `number`  | `undefined` |\n| `minlength`            | `minlength`              | The min length of this element.                                                                                                                                                                                                                                                                           | `number`  | `undefined` |\n| `name`                 | `name`                   | The name of this element.                                                                                                                                                                                                                                                                                 | `string`  | `undefined` |\n| `placeholder`          | `placeholder`            | The placeholder of this element.                                                                                                                                                                                                                                                                          | `string`  | `undefined` |\n| `required`             | `required`               | Marks this element as required.                                                                                                                                                                                                                                                                           | `boolean` | `undefined` |\n| `rows`                 | `rows`                   | The number of rows of this textarea.                                                                                                                                                                                                                                                                      | `number`  | `undefined` |\n| `showCharacterCounter` | `show-character-counter` | Displays the number of characters. The maxlength-property must be set.                                                                                                                                                                                                                                    | `boolean` | `undefined` |\n| `value`                | `value`                  | The value of this element. (**unmanaged**)                                                                                                                                                                                                                                                                | `string`  | `''`        |\n\n\n## Events\n\n| Event         | Description                                                                    | Type                  |\n| ------------- | ------------------------------------------------------------------------------ | --------------------- |\n| `valueChange` | Emits when the user types something in. Contains typed input in `event.detail` | `CustomEvent<string>` |\n\n\n## CSS Custom Properties\n\n| Name                           | Description                   |\n| ------------------------------ | ----------------------------- |\n| `--ino-textarea-caret-color`   | color of the caret            |\n| `--ino-textarea-label-color`   | color of the label            |\n| `--ino-textarea-outline-color` | outline color of the textarea |\n\n\n## Dependencies\n\n### Depends on\n\n- [ino-label](../ino-label)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-textarea --\x3e ino-label\n  style ino-textarea fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n"),function(story){return function subscribeToComponentEvents(){var eventHandler=function eventHandler(e){var el=e.target;"ino-textarea"===el.tagName.toLowerCase()&&el.setAttribute("value",e.detail)};return document.addEventListener("valueChange",eventHandler),function(){document.removeEventListener("valueChange",eventHandler)}}(),story()}]};var ino_textarea_stories_DefaultUsage=function DefaultUsage(){return'\n<div class="story-textarea">\n    <style>\n      ino-textarea.customizable-textarea {\n        --textarea-outline-color: '.concat(Object(dist.text)("--textarea-outline-color","#3d40f5","Custom Properties"),";\n        --textarea-caret-color: ").concat(Object(dist.text)("--textarea-caret-color","#3d40f5","Custom Properties"),";\n        --textarea-label-color: ").concat(Object(dist.text)("--textarea-label-color","#3d40f5","Custom Properties"),';\n      }\n  </style>\n  <ino-textarea class="customizable-textarea"\n    cols="').concat(Object(dist.number)("cols",60),'"\n    rows="').concat(Object(dist.number)("rows",5),'"\n    placeholder="').concat(Object(dist.text)("placeholder",""),'"\n    value="').concat(Object(dist.text)("value",""),'"\n    ino-label="').concat(Object(dist.text)("ino-label","Customizable textarea"),'"\n    minlength="').concat(Object(dist.number)("minlength",0),'"\n    maxlength="').concat(Object(dist.number)("maxlength",30),'"\n    disabled="').concat(Object(dist.boolean)("disabled",!1),'"\n    required="').concat(Object(dist.boolean)("required",!1),'"\n    ino-show-label-hint="').concat(Object(dist.boolean)("ino-show-label-hint",!1),'"\n    autogrow="').concat(Object(dist.boolean)("autogrow",!1),'">\n  </ino-textarea>\n\n  <h4>Labels</h4>\n  <ino-textarea ino-label="Floating label" cols="30" rows="3"></ino-textarea>\n  <ino-textarea ino-label="Floating label" value="With value" cols="30" rows="3"></ino-textarea>\n\n  <h4>States</h4>\n  <ino-textarea placeholder="Disabled" disabled cols="30" rows="3"></ino-textarea>\n  <ino-textarea ino-label="Required" required ino-show-label-hint cols="30" rows="3"></ino-textarea>\n  <ino-textarea ino-label="Optional" cols="30" ino-show-label-hint rows="3"></ino-textarea>\n</div>\n')}},1375:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"DefaultUsage",(function(){return ino_tooltip_stories_DefaultUsage}));var dist=__webpack_require__(0),with_stencil_readme=__webpack_require__(2);__webpack_require__(1330);__webpack_exports__.default={parameters:function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({storySource:{source:'\n      \n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = "import { select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-tooltip/readme.md\';\\nimport \'./ino-tooltip.scss\';\\n\\nexport default {\\n  title: \'Notification/<ino-tooltip>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-tooltip\\">\\n      <ino-button id=\\"tooltip-target\\">Tooltip</ino-button>\\n      <ino-tooltip\\n        ino-for=\\"${text(\'ino-for\', \'tooltip-target\')}\\"\\n        ino-label=\\"${text(\'ino-label\', \'This is a customaziable tooltip text.\')}\\"\\n        ino-placement=\\"${select(\'ino-placement\', [\'top\', \'right\', \'bottom\', \'left\'], \'top\')}\\"\\n        ino-trigger=\\"${select(\\n          \'ino-trigger\',\\n          [\\n            \'mouseenter\',\\n            \'focus\',\\n            \'click\',\\n            \'mouseenter focus\',\\n            \'mouseenter click\',\\n            \'focus click\',\\n            \'mouseenter focus click\',\\n          ],\\n          \'mouseenter focus\'\\n        )}\\">\\n      </ino-tooltip>\\n\\n      <h4>Placements</h4>\\n      <ino-tooltip ino-label=\\"This is a tooltip left\\" ino-placement=\\"left\\" ino-for=\\"tooltip-positions-target\\"></ino-tooltip>\\n      <ino-tooltip ino-label=\\"This is a tooltip right\\" ino-placement=\\"right\\" ino-for=\\"tooltip-positions-target\\"></ino-tooltip>\\n      <ino-tooltip ino-label=\\"This is a tooltip top\\" ino-placement=\\"top\\" ino-for=\\"tooltip-positions-target\\"></ino-tooltip>\\n      <ino-tooltip ino-label=\\"This is a tooltip bottom\\" ino-placement=\\"bottom\\" ino-for=\\"tooltip-positions-target\\"></ino-tooltip>\\n      <ino-button class=\\"placement-button\\" id=\\"tooltip-positions-target\\">Tooltip</ino-button>\\n\\n      <h4>Triggers</h4>\\n      <ino-button id=\\"tooltip-mouseenter\\">Mouseenter</ino-button>\\n      <ino-tooltip ino-placement=\\"top\\" ino-for=\\"tooltip-mouseenter\\" ino-label=\\"This tooltip occurs on hover\\"></ino-tooltip>\\n\\n      <ino-button id=\\"tooltip-focus\\">Focus</ino-button>\\n      <ino-tooltip ino-placement=\\"top\\" ino-for=\\"tooltip-focus\\" ino-label=\\"This tooltip occurs on focus\\" ino-trigger=\\"focus\\"></ino-tooltip>\\n\\n      <ino-button id=\\"tooltip-click\\">Click</ino-button>\\n      <ino-tooltip ino-placement=\\"right\\" ino-for=\\"tooltip-click\\" ino-label=\\"This tooltip occurs on click\\" ino-trigger=\\"click\\"></ino-tooltip>\\n\\n      <h4>Colors</h4>\\n      <ino-button id=\\"primary-tooltip\\" ino-color-scheme=\\"primary\\">Primary</ino-button>\\n      <ino-tooltip ino-for=\\"primary-tooltip\\" ino-label=\\"Primary color scheme\\" ino-color-scheme=\\"primary\\" ino-placement=\\"top\\"></ino-tooltip>\\n\\n      <ino-button id=\\"secondary-tooltip\\" ino-color-scheme=\\"secondary\\">Secondary</ino-button>\\n      <ino-tooltip ino-for=\\"secondary-tooltip\\" ino-label=\\"Secondary color scheme\\" ino-color-scheme=\\"secondary\\" ino-placement=\\"top\\"></ino-tooltip>\\n\\n      <ino-button id=\\"light-tooltip\\" ino-fill=\\"outline\\" ino-color-scheme=\\"grey\\">Light</ino-button>\\n      <ino-tooltip ino-for=\\"light-tooltip\\" ino-label=\\"Light color scheme\\" ino-color-scheme=\\"light\\" ino-placement=\\"top\\"></ino-tooltip>\\n\\n      <ino-button id=\\"transparent-tooltip\\" ino-fill=\\"outline\\" ino-color-scheme=\\"grey\\">Transparent</ino-button>\\n      <ino-tooltip ino-for=\\"transparent-tooltip\\" ino-label=\\"Transparent color scheme\\" ino-color-scheme=\\"transparent\\" ino-placement=\\"top\\"></ino-tooltip>\\n    </div>\\n  `;\\n";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {"DefaultUsage":{"startLoc":{"col":28,"line":13},"endLoc":{"col":3,"line":65},"startBody":{"col":28,"line":13},"endBody":{"col":3,"line":65}}};\n    \nimport { select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-tooltip/readme.md\';\nimport \'./ino-tooltip.scss\';\n\nexport default {parameters: {"storySource":{"source":"import { select, text } from \'@storybook/addon-knobs\';\\n\\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\\n\\nimport componentReadme from \'_local-elements/src/components/ino-tooltip/readme.md\';\\nimport \'./ino-tooltip.scss\';\\n\\nexport default {\\n  title: \'Notification/<ino-tooltip>\',\\n  decorators: [withStencilReadme(componentReadme)],\\n};\\n\\nexport const DefaultUsage = () => /*html*/ `\\n    <div class=\\"story-tooltip\\">\\n      <ino-button id=\\"tooltip-target\\">Tooltip</ino-button>\\n      <ino-tooltip\\n        ino-for=\\"${text(\'ino-for\', \'tooltip-target\')}\\"\\n        ino-label=\\"${text(\'ino-label\', \'This is a customaziable tooltip text.\')}\\"\\n        ino-placement=\\"${select(\'ino-placement\', [\'top\', \'right\', \'bottom\', \'left\'], \'top\')}\\"\\n        ino-trigger=\\"${select(\\n          \'ino-trigger\',\\n          [\\n            \'mouseenter\',\\n            \'focus\',\\n            \'click\',\\n            \'mouseenter focus\',\\n            \'mouseenter click\',\\n            \'focus click\',\\n            \'mouseenter focus click\',\\n          ],\\n          \'mouseenter focus\'\\n        )}\\">\\n      </ino-tooltip>\\n\\n      <h4>Placements</h4>\\n      <ino-tooltip ino-label=\\"This is a tooltip left\\" ino-placement=\\"left\\" ino-for=\\"tooltip-positions-target\\"></ino-tooltip>\\n      <ino-tooltip ino-label=\\"This is a tooltip right\\" ino-placement=\\"right\\" ino-for=\\"tooltip-positions-target\\"></ino-tooltip>\\n      <ino-tooltip ino-label=\\"This is a tooltip top\\" ino-placement=\\"top\\" ino-for=\\"tooltip-positions-target\\"></ino-tooltip>\\n      <ino-tooltip ino-label=\\"This is a tooltip bottom\\" ino-placement=\\"bottom\\" ino-for=\\"tooltip-positions-target\\"></ino-tooltip>\\n      <ino-button class=\\"placement-button\\" id=\\"tooltip-positions-target\\">Tooltip</ino-button>\\n\\n      <h4>Triggers</h4>\\n      <ino-button id=\\"tooltip-mouseenter\\">Mouseenter</ino-button>\\n      <ino-tooltip ino-placement=\\"top\\" ino-for=\\"tooltip-mouseenter\\" ino-label=\\"This tooltip occurs on hover\\"></ino-tooltip>\\n\\n      <ino-button id=\\"tooltip-focus\\">Focus</ino-button>\\n      <ino-tooltip ino-placement=\\"top\\" ino-for=\\"tooltip-focus\\" ino-label=\\"This tooltip occurs on focus\\" ino-trigger=\\"focus\\"></ino-tooltip>\\n\\n      <ino-button id=\\"tooltip-click\\">Click</ino-button>\\n      <ino-tooltip ino-placement=\\"right\\" ino-for=\\"tooltip-click\\" ino-label=\\"This tooltip occurs on click\\" ino-trigger=\\"click\\"></ino-tooltip>\\n\\n      <h4>Colors</h4>\\n      <ino-button id=\\"primary-tooltip\\" ino-color-scheme=\\"primary\\">Primary</ino-button>\\n      <ino-tooltip ino-for=\\"primary-tooltip\\" ino-label=\\"Primary color scheme\\" ino-color-scheme=\\"primary\\" ino-placement=\\"top\\"></ino-tooltip>\\n\\n      <ino-button id=\\"secondary-tooltip\\" ino-color-scheme=\\"secondary\\">Secondary</ino-button>\\n      <ino-tooltip ino-for=\\"secondary-tooltip\\" ino-label=\\"Secondary color scheme\\" ino-color-scheme=\\"secondary\\" ino-placement=\\"top\\"></ino-tooltip>\\n\\n      <ino-button id=\\"light-tooltip\\" ino-fill=\\"outline\\" ino-color-scheme=\\"grey\\">Light</ino-button>\\n      <ino-tooltip ino-for=\\"light-tooltip\\" ino-label=\\"Light color scheme\\" ino-color-scheme=\\"light\\" ino-placement=\\"top\\"></ino-tooltip>\\n\\n      <ino-button id=\\"transparent-tooltip\\" ino-fill=\\"outline\\" ino-color-scheme=\\"grey\\">Transparent</ino-button>\\n      <ino-tooltip ino-for=\\"transparent-tooltip\\" ino-label=\\"Transparent color scheme\\" ino-color-scheme=\\"transparent\\" ino-placement=\\"top\\"></ino-tooltip>\\n    </div>\\n  `;\\n","locationsMap":{"default-usage":{"startLoc":{"col":28,"line":13},"endLoc":{"col":3,"line":65},"startBody":{"col":28,"line":13},"endBody":{"col":3,"line":65}}}},},\n  title: \'Notification/<ino-tooltip>\',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-tooltip">\n      <ino-button id="tooltip-target">Tooltip</ino-button>\n      <ino-tooltip\n        ino-for="${text(\'ino-for\', \'tooltip-target\')}"\n        ino-label="${text(\'ino-label\', \'This is a customaziable tooltip text.\')}"\n        ino-placement="${select(\'ino-placement\', [\'top\', \'right\', \'bottom\', \'left\'], \'top\')}"\n        ino-trigger="${select(\n          \'ino-trigger\',\n          [\n            \'mouseenter\',\n            \'focus\',\n            \'click\',\n            \'mouseenter focus\',\n            \'mouseenter click\',\n            \'focus click\',\n            \'mouseenter focus click\',\n          ],\n          \'mouseenter focus\'\n        )}">\n      </ino-tooltip>\n\n      <h4>Placements</h4>\n      <ino-tooltip ino-label="This is a tooltip left" ino-placement="left" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-tooltip ino-label="This is a tooltip right" ino-placement="right" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-tooltip ino-label="This is a tooltip top" ino-placement="top" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-tooltip ino-label="This is a tooltip bottom" ino-placement="bottom" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-button class="placement-button" id="tooltip-positions-target">Tooltip</ino-button>\n\n      <h4>Triggers</h4>\n      <ino-button id="tooltip-mouseenter">Mouseenter</ino-button>\n      <ino-tooltip ino-placement="top" ino-for="tooltip-mouseenter" ino-label="This tooltip occurs on hover"></ino-tooltip>\n\n      <ino-button id="tooltip-focus">Focus</ino-button>\n      <ino-tooltip ino-placement="top" ino-for="tooltip-focus" ino-label="This tooltip occurs on focus" ino-trigger="focus"></ino-tooltip>\n\n      <ino-button id="tooltip-click">Click</ino-button>\n      <ino-tooltip ino-placement="right" ino-for="tooltip-click" ino-label="This tooltip occurs on click" ino-trigger="click"></ino-tooltip>\n\n      <h4>Colors</h4>\n      <ino-button id="primary-tooltip" ino-color-scheme="primary">Primary</ino-button>\n      <ino-tooltip ino-for="primary-tooltip" ino-label="Primary color scheme" ino-color-scheme="primary" ino-placement="top"></ino-tooltip>\n\n      <ino-button id="secondary-tooltip" ino-color-scheme="secondary">Secondary</ino-button>\n      <ino-tooltip ino-for="secondary-tooltip" ino-label="Secondary color scheme" ino-color-scheme="secondary" ino-placement="top"></ino-tooltip>\n\n      <ino-button id="light-tooltip" ino-fill="outline" ino-color-scheme="grey">Light</ino-button>\n      <ino-tooltip ino-for="light-tooltip" ino-label="Light color scheme" ino-color-scheme="light" ino-placement="top"></ino-tooltip>\n\n      <ino-button id="transparent-tooltip" ino-fill="outline" ino-color-scheme="grey">Transparent</ino-button>\n      <ino-tooltip ino-for="transparent-tooltip" ino-label="Transparent color scheme" ino-color-scheme="transparent" ino-placement="top"></ino-tooltip>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:21},endLoc:{col:3,line:73},startBody:{col:28,line:21},endBody:{col:3,line:73}}}}},"storySource",{source:'import { select, text } from \'@storybook/addon-knobs\';\n\nimport withStencilReadme from \'_local-storybookcore/with-stencil-readme\';\n\nimport componentReadme from \'_local-elements/src/components/ino-tooltip/readme.md\';\nimport \'./ino-tooltip.scss\';\n\nexport default {\n  title: \'Notification/<ino-tooltip>\',\n  decorators: [withStencilReadme(componentReadme)],\n};\n\nexport const DefaultUsage = () => /*html*/ `\n    <div class="story-tooltip">\n      <ino-button id="tooltip-target">Tooltip</ino-button>\n      <ino-tooltip\n        ino-for="${text(\'ino-for\', \'tooltip-target\')}"\n        ino-label="${text(\'ino-label\', \'This is a customaziable tooltip text.\')}"\n        ino-placement="${select(\'ino-placement\', [\'top\', \'right\', \'bottom\', \'left\'], \'top\')}"\n        ino-trigger="${select(\n          \'ino-trigger\',\n          [\n            \'mouseenter\',\n            \'focus\',\n            \'click\',\n            \'mouseenter focus\',\n            \'mouseenter click\',\n            \'focus click\',\n            \'mouseenter focus click\',\n          ],\n          \'mouseenter focus\'\n        )}">\n      </ino-tooltip>\n\n      <h4>Placements</h4>\n      <ino-tooltip ino-label="This is a tooltip left" ino-placement="left" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-tooltip ino-label="This is a tooltip right" ino-placement="right" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-tooltip ino-label="This is a tooltip top" ino-placement="top" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-tooltip ino-label="This is a tooltip bottom" ino-placement="bottom" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-button class="placement-button" id="tooltip-positions-target">Tooltip</ino-button>\n\n      <h4>Triggers</h4>\n      <ino-button id="tooltip-mouseenter">Mouseenter</ino-button>\n      <ino-tooltip ino-placement="top" ino-for="tooltip-mouseenter" ino-label="This tooltip occurs on hover"></ino-tooltip>\n\n      <ino-button id="tooltip-focus">Focus</ino-button>\n      <ino-tooltip ino-placement="top" ino-for="tooltip-focus" ino-label="This tooltip occurs on focus" ino-trigger="focus"></ino-tooltip>\n\n      <ino-button id="tooltip-click">Click</ino-button>\n      <ino-tooltip ino-placement="right" ino-for="tooltip-click" ino-label="This tooltip occurs on click" ino-trigger="click"></ino-tooltip>\n\n      <h4>Colors</h4>\n      <ino-button id="primary-tooltip" ino-color-scheme="primary">Primary</ino-button>\n      <ino-tooltip ino-for="primary-tooltip" ino-label="Primary color scheme" ino-color-scheme="primary" ino-placement="top"></ino-tooltip>\n\n      <ino-button id="secondary-tooltip" ino-color-scheme="secondary">Secondary</ino-button>\n      <ino-tooltip ino-for="secondary-tooltip" ino-label="Secondary color scheme" ino-color-scheme="secondary" ino-placement="top"></ino-tooltip>\n\n      <ino-button id="light-tooltip" ino-fill="outline" ino-color-scheme="grey">Light</ino-button>\n      <ino-tooltip ino-for="light-tooltip" ino-label="Light color scheme" ino-color-scheme="light" ino-placement="top"></ino-tooltip>\n\n      <ino-button id="transparent-tooltip" ino-fill="outline" ino-color-scheme="grey">Transparent</ino-button>\n      <ino-tooltip ino-for="transparent-tooltip" ino-label="Transparent color scheme" ino-color-scheme="transparent" ino-placement="top"></ino-tooltip>\n    </div>\n  `;\n',locationsMap:{"default-usage":{startLoc:{col:28,line:13},endLoc:{col:3,line:65},startBody:{col:28,line:13},endBody:{col:3,line:65}}}}),title:"Notification/<ino-tooltip>",decorators:[Object(with_stencil_readme.a)('# ino-tooltip\n\nA tooltip component that displays text when users hover over, focus on, or tap an element.\n\n> Note: A tooltip can only display plain text. For more complex dialogs, see the [Popover](https://elements.inovex.de/dist/latest/storybook/?path=/story/notification-ino-popover--default-usage) component.\n\n### Usage\n\nThe component can be used as follows:\n\n```html\n<ino-tooltip\n  ino-for="<string>"\n  ino-label="<string>"\n  ino-placement="<string>"\n  ino-trigger="<string>"\n>\n  Any desired HTML\n</ino-tooltip>\n```\n\n### React\n\n#### Example #1 - Basic\n\n```js\nimport { Component } from \'react\';\nimport { InoButton, InoTooltip } from \'@inovex.de/elements/dist/react\';\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoButton id="tooltip-button">Hover me to see the Tooltip!</InoButton>\n      <InoTooltip inoFor="tooltip-button" inoLabel="This is the tooltip!" inoPlacement="top" inoTrigger="hover" />\n    );\n  }\n}\n```\n\n#### Example #2 - With Types\n\n```js\nimport React, { Component } from \'react\';\nimport { InoButton, InoTooltip } from \'@inovex.de/elements/dist/react\';\nimport { Components } from \'@inovex.de/elements/dist/types/components\';\n\nconst Tooltip: React.FunctionComponent<Components.InoTooltipAttributes> = props => {\n  const { inoPlacement, inoTrigger, inoFor, inoLabel } = props;\n\n  return <InoTooltip inoFor={inoFor} inoLabel={inoLabel} inoPlacement={inoPlacement} inoTrigger={inoTrigger}>{props.children}</InoTooltip>\n};\n\nclass MyComponent extends Component {\n  render() {\n    return (\n      <InoButton id="tooltip-button">Hover me to see the Tooltip!</InoButton>\n      <Tooltip inoFor="tooltip-button" inoLabel="This is the tooltip!" inoPlacement="top" inoTrigger="hover" />\n    );\n  }\n}\n```\n\n## Additional Hints\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property         | Attribute          | Description                                                                                                                             | Type                                                                                                                                                                                                                                                                                                                                   | Default              |\n| ---------------- | ------------------ | --------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------- |\n| `inoColorScheme` | `ino-color-scheme` | Sets the color scheme of the tooltip Valid options include: \'primary\', \'secondary\' \'light\', \'transparent\'                               | `string`                                                                                                                                                                                                                                                                                                                               | `\'primary\'`          |\n| `inoFor`         | `ino-for`          | The target id the tooltip belongs to. If not given, the tooltip is attached to the parent component.                                    | `string`                                                                                                                                                                                                                                                                                                                               | `undefined`          |\n| `inoLabel`       | `ino-label`        | The text shown in the tooltip.                                                                                                          | `string`                                                                                                                                                                                                                                                                                                                               | `undefined`          |\n| `inoPlacement`   | `ino-placement`    | The placement of the tooltip. Accepted values: `top(-start, -end)`, `right(-start, -end)`, `bottom(-start, -end)`, `left(-start, -end)` | `"auto" \\| "auto-end" \\| "auto-start" \\| "bottom" \\| "bottom-end" \\| "bottom-start" \\| "left" \\| "left-end" \\| "left-start" \\| "right" \\| "right-end" \\| "right-start" \\| "top" \\| "top-end" \\| "top-start"`                                                                                                                           | `\'auto\'`             |\n| `inoTrigger`     | `ino-trigger`      | The trigger to show the tooltip - either click, hover or focus. Multiple triggers possible by separating them with a space.             | `"click focus mouseenter" \\| "click focus" \\| "click mouseenter focus" \\| "click mouseenter" \\| "click" \\| "focus click mouseenter" \\| "focus click" \\| "focus mouseenter click" \\| "focus mouseenter" \\| "focus" \\| "mouseenter click focus" \\| "mouseenter click" \\| "mouseenter focus click" \\| "mouseenter focus" \\| "mouseenter"` | `\'mouseenter focus\'` |\n\n\n## Methods\n\n### `getTippyInstance() => Promise<any>`\n\nReturns the internally used tippy.js instance\nFor more informations see: https://atomiks.github.io/tippyjs/\n\n#### Returns\n\nType: `Promise<any>`\n\n\n\n\n## Dependencies\n\n### Used by\n\n - [ino-fab](../ino-fab)\n\n### Graph\n```mermaid\ngraph TD;\n  ino-fab --\x3e ino-tooltip\n  style ino-tooltip fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n')]};var ino_tooltip_stories_DefaultUsage=function DefaultUsage(){return'\n    <div class="story-tooltip">\n      <ino-button id="tooltip-target">Tooltip</ino-button>\n      <ino-tooltip\n        ino-for="'.concat(Object(dist.text)("ino-for","tooltip-target"),'"\n        ino-label="').concat(Object(dist.text)("ino-label","This is a customaziable tooltip text."),'"\n        ino-placement="').concat(Object(dist.select)("ino-placement",["top","right","bottom","left"],"top"),'"\n        ino-trigger="').concat(Object(dist.select)("ino-trigger",["mouseenter","focus","click","mouseenter focus","mouseenter click","focus click","mouseenter focus click"],"mouseenter focus"),'">\n      </ino-tooltip>\n\n      <h4>Placements</h4>\n      <ino-tooltip ino-label="This is a tooltip left" ino-placement="left" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-tooltip ino-label="This is a tooltip right" ino-placement="right" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-tooltip ino-label="This is a tooltip top" ino-placement="top" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-tooltip ino-label="This is a tooltip bottom" ino-placement="bottom" ino-for="tooltip-positions-target"></ino-tooltip>\n      <ino-button class="placement-button" id="tooltip-positions-target">Tooltip</ino-button>\n\n      <h4>Triggers</h4>\n      <ino-button id="tooltip-mouseenter">Mouseenter</ino-button>\n      <ino-tooltip ino-placement="top" ino-for="tooltip-mouseenter" ino-label="This tooltip occurs on hover"></ino-tooltip>\n\n      <ino-button id="tooltip-focus">Focus</ino-button>\n      <ino-tooltip ino-placement="top" ino-for="tooltip-focus" ino-label="This tooltip occurs on focus" ino-trigger="focus"></ino-tooltip>\n\n      <ino-button id="tooltip-click">Click</ino-button>\n      <ino-tooltip ino-placement="right" ino-for="tooltip-click" ino-label="This tooltip occurs on click" ino-trigger="click"></ino-tooltip>\n\n      <h4>Colors</h4>\n      <ino-button id="primary-tooltip" ino-color-scheme="primary">Primary</ino-button>\n      <ino-tooltip ino-for="primary-tooltip" ino-label="Primary color scheme" ino-color-scheme="primary" ino-placement="top"></ino-tooltip>\n\n      <ino-button id="secondary-tooltip" ino-color-scheme="secondary">Secondary</ino-button>\n      <ino-tooltip ino-for="secondary-tooltip" ino-label="Secondary color scheme" ino-color-scheme="secondary" ino-placement="top"></ino-tooltip>\n\n      <ino-button id="light-tooltip" ino-fill="outline" ino-color-scheme="grey">Light</ino-button>\n      <ino-tooltip ino-for="light-tooltip" ino-label="Light color scheme" ino-color-scheme="light" ino-placement="top"></ino-tooltip>\n\n      <ino-button id="transparent-tooltip" ino-fill="outline" ino-color-scheme="grey">Transparent</ino-button>\n      <ino-tooltip ino-for="transparent-tooltip" ino-label="Transparent color scheme" ino-color-scheme="transparent" ino-placement="top"></ino-tooltip>\n    </div>\n  ')}},168:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a=function findElementUpwards(currentEl,elTagName,elClassName){if(currentEl.tagName.toLowerCase()!==elTagName){if(null!==currentEl.parentElement)return findElementUpwards(currentEl.parentElement,elTagName,elClassName)}else if(currentEl.classList.contains(elClassName))return currentEl}},169:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/fjord.a789a6be.jpg"},170:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/liberty.ab8cbdf5.jpg"},171:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/trondheim.7a9953d8.jpg"},172:function(module,__webpack_exports__,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}function _possibleConstructorReturn(self,call){return!call||"object"!==_typeof(call)&&"function"!=typeof call?_assertThisInitialized(self):call}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}function _wrapNativeSuper(Class){var _cache="function"==typeof Map?new Map:void 0;return(_wrapNativeSuper=function _wrapNativeSuper(Class){if(null===Class||!function _isNativeFunction(fn){return-1!==Function.toString.call(fn).indexOf("[native code]")}(Class))return Class;if("function"!=typeof Class)throw new TypeError("Super expression must either be null or a function");if(void 0!==_cache){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper)}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor)}return Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(Wrapper,Class)})(Class)}function _construct(Parent,args,Class){return(_construct=_isNativeReflectConstruct()?Reflect.construct:function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var instance=new(Function.bind.apply(Parent,a));return Class&&_setPrototypeOf(instance,Class.prototype),instance}).apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function _setPrototypeOf(o,p){return(_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){return o.__proto__=p,o})(o,p)}function _getPrototypeOf(o){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)})(o)}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_require__.d(__webpack_exports__,"a",(function(){return Host})),__webpack_require__.d(__webpack_exports__,"b",(function(){return patchEsm})),__webpack_require__.d(__webpack_exports__,"c",(function(){return bootstrapLazy})),__webpack_require__.d(__webpack_exports__,"d",(function(){return createEvent})),__webpack_require__.d(__webpack_exports__,"e",(function(){return getAssetPath})),__webpack_require__.d(__webpack_exports__,"f",(function(){return getElement})),__webpack_require__.d(__webpack_exports__,"g",(function(){return h})),__webpack_require__.d(__webpack_exports__,"h",(function(){return registerInstance}));var scopeId,contentRef,hostTagName,NAMESPACE="inovex-elements",useNativeShadowDom=!1,checkSlotFallbackVisibility=!1,checkSlotRelocate=!1,isSvgMode=!1,queueCongestion=0,queuePending=!1,win="undefined"!=typeof window?window:{},CSS=win.CSS,doc=win.document||{head:{}},plt={$flags$:0,$resourcesUrl$:"",jmp:function jmp(h){return h()},raf:function raf(h){return requestAnimationFrame(h)},ael:function ael(el,eventName,listener,opts){return el.addEventListener(eventName,listener,opts)},rel:function rel(el,eventName,listener,opts){return el.removeEventListener(eventName,listener,opts)}},supportsShadow=function(){return(doc.head.attachShadow+"").indexOf("[native")>-1}(),promiseResolve=function promiseResolve(v){return Promise.resolve(v)},supportsConstructibleStylesheets=function(){try{return new CSSStyleSheet,!0}catch(e){}return!1}(),addHostEventListeners=function addHostEventListeners(elm,hostRef,listeners,attachParentListeners){listeners&&listeners.map((function(_ref){var _ref2=_slicedToArray(_ref,3),flags=_ref2[0],name=_ref2[1],method=_ref2[2],target=elm,handler=hostListenerProxy(hostRef,method),opts=hostListenerOpts(flags);plt.ael(target,name,handler,opts),(hostRef.$rmListeners$=hostRef.$rmListeners$||[]).push((function(){return plt.rel(target,name,handler,opts)}))}))},hostListenerProxy=function hostListenerProxy(hostRef,methodName){return function(ev){256&hostRef.$flags$?hostRef.$lazyInstance$[methodName](ev):(hostRef.$queuedListeners$=hostRef.$queuedListeners$||[]).push([methodName,ev])}},hostListenerOpts=function hostListenerOpts(flags){return 0!=(2&flags)},HYDRATED_CSS="{visibility:hidden}.hydrated{visibility:inherit}",XLINK_NS="http://www.w3.org/1999/xlink",rootAppliedStyles=new WeakMap,registerStyle=function registerStyle(scopeId,cssText,allowCS){var style=styles.get(scopeId);supportsConstructibleStylesheets&&allowCS?(style=style||new CSSStyleSheet).replace(cssText):style=cssText,styles.set(scopeId,style)},attachStyles=function attachStyles(hostRef){var cmpMeta=hostRef.$cmpMeta$,elm=hostRef.$hostElement$,flags=cmpMeta.$flags$,endAttachStyles=(cmpMeta.$tagName$,function(){}),scopeId=function addStyle(styleContainerNode,cmpMeta,mode,hostElm){var scopeId=getScopeId(cmpMeta.$tagName$),style=styles.get(scopeId);if(styleContainerNode=11===styleContainerNode.nodeType?styleContainerNode:doc,style)if("string"==typeof style){styleContainerNode=styleContainerNode.head||styleContainerNode;var styleElm,appliedStyles=rootAppliedStyles.get(styleContainerNode);if(appliedStyles||rootAppliedStyles.set(styleContainerNode,appliedStyles=new Set),!appliedStyles.has(scopeId)){if(plt.$cssShim$){var newScopeId=(styleElm=plt.$cssShim$.createHostStyle(hostElm,scopeId,style,!!(10&cmpMeta.$flags$)))["s-sc"];newScopeId&&(scopeId=newScopeId,appliedStyles=null)}else(styleElm=doc.createElement("style")).innerHTML=style;styleContainerNode.insertBefore(styleElm,styleContainerNode.querySelector("link")),appliedStyles&&appliedStyles.add(scopeId)}}else styleContainerNode.adoptedStyleSheets.includes(style)||(styleContainerNode.adoptedStyleSheets=[].concat(_toConsumableArray(styleContainerNode.adoptedStyleSheets),[style]));return scopeId}(supportsShadow&&elm.shadowRoot?elm.shadowRoot:elm.getRootNode(),cmpMeta,hostRef.$modeName$,elm);10&flags&&(elm["s-sc"]=scopeId,elm.classList.add(scopeId+"-h")),endAttachStyles()},getScopeId=function getScopeId(tagName,mode){return"sc-"+tagName},EMPTY_OBJ={},isComplexType=function isComplexType(o){return"object"===(o=_typeof(o))||"function"===o},h=function h(nodeName,vnodeData){for(var child=null,key=null,slotName=null,simple=!1,lastSimple=!1,vNodeChildren=[],walk=function walk(c){for(var i=0;i<c.length;i++)child=c[i],Array.isArray(child)?walk(child):null!=child&&"boolean"!=typeof child&&((simple="function"!=typeof nodeName&&!isComplexType(child))&&(child=String(child)),simple&&lastSimple?vNodeChildren[vNodeChildren.length-1].$text$+=child:vNodeChildren.push(simple?newVNode(null,child):child),lastSimple=simple)},_len=arguments.length,children=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++)children[_key-2]=arguments[_key];if(walk(children),vnodeData){vnodeData.key&&(key=vnodeData.key),vnodeData.name&&(slotName=vnodeData.name);var classData=vnodeData.className||vnodeData.class;classData&&(vnodeData.class="object"!==_typeof(classData)?classData:Object.keys(classData).filter((function(k){return classData[k]})).join(" "))}var vnode=newVNode(nodeName,null);return vnode.$attrs$=vnodeData,vNodeChildren.length>0&&(vnode.$children$=vNodeChildren),vnode.$key$=key,vnode.$name$=slotName,vnode},newVNode=function newVNode(tag,text){var vnode={$flags$:0,$tag$:tag,$text$:text,$elm$:null,$children$:null,$attrs$:null,$key$:null,$name$:null};return vnode},Host={},setAccessor=function setAccessor(elm,memberName,oldValue,newValue,isSvg,flags){if(oldValue!==newValue){var isProp=isMemberInElement(elm,memberName),ln=memberName.toLowerCase();if("class"===memberName){var classList=elm.classList,oldClasses=parseClassList(oldValue),newClasses=parseClassList(newValue);classList.remove.apply(classList,_toConsumableArray(oldClasses.filter((function(c){return c&&!newClasses.includes(c)})))),classList.add.apply(classList,_toConsumableArray(newClasses.filter((function(c){return c&&!oldClasses.includes(c)}))))}else if("style"===memberName){for(var prop in oldValue)newValue&&null!=newValue[prop]||(prop.includes("-")?elm.style.removeProperty(prop):elm.style[prop]="");for(var _prop in newValue)oldValue&&newValue[_prop]===oldValue[_prop]||(_prop.includes("-")?elm.style.setProperty(_prop,newValue[_prop]):elm.style[_prop]=newValue[_prop])}else if("key"===memberName);else if("ref"===memberName)newValue&&newValue(elm);else if(isProp||"o"!==memberName[0]||"n"!==memberName[1]){var isComplex=isComplexType(newValue);if((isProp||isComplex&&null!==newValue)&&!isSvg)try{if(elm.tagName.includes("-"))elm[memberName]=newValue;else{var n=null==newValue?"":newValue;"list"===memberName?isProp=!1:null!=oldValue&&elm[memberName]==n||(elm[memberName]=n)}}catch(e){}var xlink=!1;ln!==(ln=ln.replace(/^xlink\:?/,""))&&(memberName=ln,xlink=!0),null==newValue||!1===newValue?xlink?elm.removeAttributeNS(XLINK_NS,memberName):elm.removeAttribute(memberName):(!isProp||4&flags||isSvg)&&!isComplex&&(newValue=!0===newValue?"":newValue,xlink?elm.setAttributeNS(XLINK_NS,memberName,newValue):elm.setAttribute(memberName,newValue))}else memberName="-"===memberName[2]?memberName.slice(3):isMemberInElement(win,ln)?ln.slice(2):ln[2]+memberName.slice(3),oldValue&&plt.rel(elm,memberName,oldValue,!1),newValue&&plt.ael(elm,memberName,newValue,!1)}},parseClassListRegex=/\s/,parseClassList=function parseClassList(value){return value?value.split(parseClassListRegex):[]},updateElement=function updateElement(oldVnode,newVnode,isSvgMode,memberName){var elm=11===newVnode.$elm$.nodeType&&newVnode.$elm$.host?newVnode.$elm$.host:newVnode.$elm$,oldVnodeAttrs=oldVnode&&oldVnode.$attrs$||EMPTY_OBJ,newVnodeAttrs=newVnode.$attrs$||EMPTY_OBJ;for(memberName in oldVnodeAttrs)memberName in newVnodeAttrs||setAccessor(elm,memberName,oldVnodeAttrs[memberName],void 0,isSvgMode,newVnode.$flags$);for(memberName in newVnodeAttrs)setAccessor(elm,memberName,oldVnodeAttrs[memberName],newVnodeAttrs[memberName],isSvgMode,newVnode.$flags$)},createElm=function createElm(oldParentVNode,newParentVNode,childIndex,parentElm){var elm,childNode,oldVNode,newVNode=newParentVNode.$children$[childIndex],i=0;if(useNativeShadowDom||(checkSlotRelocate=!0,"slot"===newVNode.$tag$&&(scopeId&&parentElm.classList.add(scopeId+"-s"),newVNode.$flags$|=newVNode.$children$?2:1)),null!==newVNode.$text$)elm=newVNode.$elm$=doc.createTextNode(newVNode.$text$);else if(1&newVNode.$flags$)elm=newVNode.$elm$=doc.createTextNode("");else{if(isSvgMode||(isSvgMode="svg"===newVNode.$tag$),elm=newVNode.$elm$=doc.createElementNS(isSvgMode?"http://www.w3.org/2000/svg":"http://www.w3.org/1999/xhtml",2&newVNode.$flags$?"slot-fb":newVNode.$tag$),isSvgMode&&"foreignObject"===newVNode.$tag$&&(isSvgMode=!1),updateElement(null,newVNode,isSvgMode),function isDef(v){return null!=v}(scopeId)&&elm["s-si"]!==scopeId&&elm.classList.add(elm["s-si"]=scopeId),newVNode.$children$)for(i=0;i<newVNode.$children$.length;++i)(childNode=createElm(oldParentVNode,newVNode,i,elm))&&elm.appendChild(childNode);"svg"===newVNode.$tag$?isSvgMode=!1:"foreignObject"===elm.tagName&&(isSvgMode=!0)}return elm["s-hn"]=hostTagName,3&newVNode.$flags$&&(elm["s-sr"]=!0,elm["s-cr"]=contentRef,elm["s-sn"]=newVNode.$name$||"",(oldVNode=oldParentVNode&&oldParentVNode.$children$&&oldParentVNode.$children$[childIndex])&&oldVNode.$tag$===newVNode.$tag$&&oldParentVNode.$elm$&&putBackInOriginalLocation(oldParentVNode.$elm$,!1)),elm},putBackInOriginalLocation=function putBackInOriginalLocation(parentElm,recursive){plt.$flags$|=1;for(var oldSlotChildNodes=parentElm.childNodes,i=oldSlotChildNodes.length-1;i>=0;i--){var childNode=oldSlotChildNodes[i];childNode["s-hn"]!==hostTagName&&childNode["s-ol"]&&(parentReferenceNode(childNode).insertBefore(childNode,referenceNode(childNode)),childNode["s-ol"].remove(),childNode["s-ol"]=void 0,checkSlotRelocate=!0),recursive&&putBackInOriginalLocation(childNode,recursive)}plt.$flags$&=-2},addVnodes=function addVnodes(parentElm,before,parentVNode,vnodes,startIdx,endIdx){var childNode,containerElm=parentElm["s-cr"]&&parentElm["s-cr"].parentNode||parentElm;for(containerElm.shadowRoot&&containerElm.tagName===hostTagName&&(containerElm=containerElm.shadowRoot);startIdx<=endIdx;++startIdx)vnodes[startIdx]&&(childNode=createElm(null,parentVNode,startIdx,parentElm))&&(vnodes[startIdx].$elm$=childNode,containerElm.insertBefore(childNode,referenceNode(before)))},removeVnodes=function removeVnodes(vnodes,startIdx,endIdx,vnode,elm){for(;startIdx<=endIdx;++startIdx)(vnode=vnodes[startIdx])&&(elm=vnode.$elm$,callNodeRefs(vnode),checkSlotFallbackVisibility=!0,elm["s-ol"]?elm["s-ol"].remove():putBackInOriginalLocation(elm,!0),elm.remove())},updateChildren=function updateChildren(parentElm,oldCh,newVNode,newCh){for(var node,elmToMove,oldStartIdx=0,newStartIdx=0,idxInOld=0,i=0,oldEndIdx=oldCh.length-1,oldStartVnode=oldCh[0],oldEndVnode=oldCh[oldEndIdx],newEndIdx=newCh.length-1,newStartVnode=newCh[0],newEndVnode=newCh[newEndIdx];oldStartIdx<=oldEndIdx&&newStartIdx<=newEndIdx;)if(null==oldStartVnode)oldStartVnode=oldCh[++oldStartIdx];else if(null==oldEndVnode)oldEndVnode=oldCh[--oldEndIdx];else if(null==newStartVnode)newStartVnode=newCh[++newStartIdx];else if(null==newEndVnode)newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldStartVnode,newStartVnode))patch(oldStartVnode,newStartVnode),oldStartVnode=oldCh[++oldStartIdx],newStartVnode=newCh[++newStartIdx];else if(isSameVnode(oldEndVnode,newEndVnode))patch(oldEndVnode,newEndVnode),oldEndVnode=oldCh[--oldEndIdx],newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldStartVnode,newEndVnode))"slot"!==oldStartVnode.$tag$&&"slot"!==newEndVnode.$tag$||putBackInOriginalLocation(oldStartVnode.$elm$.parentNode,!1),patch(oldStartVnode,newEndVnode),parentElm.insertBefore(oldStartVnode.$elm$,oldEndVnode.$elm$.nextSibling),oldStartVnode=oldCh[++oldStartIdx],newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldEndVnode,newStartVnode))"slot"!==oldStartVnode.$tag$&&"slot"!==newEndVnode.$tag$||putBackInOriginalLocation(oldEndVnode.$elm$.parentNode,!1),patch(oldEndVnode,newStartVnode),parentElm.insertBefore(oldEndVnode.$elm$,oldStartVnode.$elm$),oldEndVnode=oldCh[--oldEndIdx],newStartVnode=newCh[++newStartIdx];else{for(idxInOld=-1,i=oldStartIdx;i<=oldEndIdx;++i)if(oldCh[i]&&null!==oldCh[i].$key$&&oldCh[i].$key$===newStartVnode.$key$){idxInOld=i;break}idxInOld>=0?((elmToMove=oldCh[idxInOld]).$tag$!==newStartVnode.$tag$?node=createElm(oldCh&&oldCh[newStartIdx],newVNode,idxInOld,parentElm):(patch(elmToMove,newStartVnode),oldCh[idxInOld]=void 0,node=elmToMove.$elm$),newStartVnode=newCh[++newStartIdx]):(node=createElm(oldCh&&oldCh[newStartIdx],newVNode,newStartIdx,parentElm),newStartVnode=newCh[++newStartIdx]),node&&parentReferenceNode(oldStartVnode.$elm$).insertBefore(node,referenceNode(oldStartVnode.$elm$))}oldStartIdx>oldEndIdx?addVnodes(parentElm,null==newCh[newEndIdx+1]?null:newCh[newEndIdx+1].$elm$,newVNode,newCh,newStartIdx,newEndIdx):newStartIdx>newEndIdx&&removeVnodes(oldCh,oldStartIdx,oldEndIdx)},isSameVnode=function isSameVnode(vnode1,vnode2){return vnode1.$tag$===vnode2.$tag$&&("slot"===vnode1.$tag$?vnode1.$name$===vnode2.$name$:vnode1.$key$===vnode2.$key$)},referenceNode=function referenceNode(node){return node&&node["s-ol"]||node},parentReferenceNode=function parentReferenceNode(node){return(node["s-ol"]?node["s-ol"]:node).parentNode},patch=function patch(oldVNode,newVNode){var defaultHolder,elm=newVNode.$elm$=oldVNode.$elm$,oldChildren=oldVNode.$children$,newChildren=newVNode.$children$,tag=newVNode.$tag$,text=newVNode.$text$;null===text?(isSvgMode="svg"===tag||"foreignObject"!==tag&&isSvgMode,"slot"===tag||updateElement(oldVNode,newVNode,isSvgMode),null!==oldChildren&&null!==newChildren?updateChildren(elm,oldChildren,newVNode,newChildren):null!==newChildren?(null!==oldVNode.$text$&&(elm.textContent=""),addVnodes(elm,null,newVNode,newChildren,0,newChildren.length-1)):null!==oldChildren&&removeVnodes(oldChildren,0,oldChildren.length-1),isSvgMode&&"svg"===tag&&(isSvgMode=!1)):(defaultHolder=elm["s-cr"])?defaultHolder.parentNode.textContent=text:oldVNode.$text$!==text&&(elm.data=text)},relocateNodes=[],isNodeLocatedInSlot=function isNodeLocatedInSlot(nodeToRelocate,slotNameAttr){return 1===nodeToRelocate.nodeType?null===nodeToRelocate.getAttribute("slot")&&""===slotNameAttr||nodeToRelocate.getAttribute("slot")===slotNameAttr:nodeToRelocate["s-sn"]===slotNameAttr||""===slotNameAttr},callNodeRefs=function callNodeRefs(vNode){vNode.$attrs$&&vNode.$attrs$.ref&&vNode.$attrs$.ref(null),vNode.$children$&&vNode.$children$.map(callNodeRefs)},renderVdom=function renderVdom(hostRef,renderFnResults){var hostElm=hostRef.$hostElement$,cmpMeta=hostRef.$cmpMeta$,oldVNode=hostRef.$vnode$||newVNode(null,null),rootVnode=function isHost(node){return node&&node.$tag$===Host}(renderFnResults)?renderFnResults:h(null,null,renderFnResults);if(hostTagName=hostElm.tagName,rootVnode.$tag$=null,rootVnode.$flags$|=4,hostRef.$vnode$=rootVnode,rootVnode.$elm$=oldVNode.$elm$=hostElm.shadowRoot||hostElm,scopeId=hostElm["s-sc"],contentRef=hostElm["s-cr"],useNativeShadowDom=supportsShadow&&0!=(1&cmpMeta.$flags$),checkSlotFallbackVisibility=!1,patch(oldVNode,rootVnode),plt.$flags$|=1,checkSlotRelocate){var relocateData,nodeToRelocate,orgLocationNode,parentNodeRef,insertBeforeNode,refNode;!function relocateSlotContent(elm){for(var childNode,node,hostContentNodes,slotNameAttr,relocateNodeData,j,i=0,childNodes=elm.childNodes,ilen=childNodes.length;i<ilen;i++){if((childNode=childNodes[i])["s-sr"]&&(node=childNode["s-cr"]))for(hostContentNodes=node.parentNode.childNodes,slotNameAttr=childNode["s-sn"],j=hostContentNodes.length-1;j>=0;j--)(node=hostContentNodes[j])["s-cn"]||node["s-nr"]||node["s-hn"]===childNode["s-hn"]||(isNodeLocatedInSlot(node,slotNameAttr)?(relocateNodeData=relocateNodes.find((function(r){return r.$nodeToRelocate$===node})),checkSlotFallbackVisibility=!0,node["s-sn"]=node["s-sn"]||slotNameAttr,relocateNodeData?relocateNodeData.$slotRefNode$=childNode:relocateNodes.push({$slotRefNode$:childNode,$nodeToRelocate$:node}),node["s-sr"]&&relocateNodes.map((function(relocateNode){isNodeLocatedInSlot(relocateNode.$nodeToRelocate$,node["s-sn"])&&(relocateNodeData=relocateNodes.find((function(r){return r.$nodeToRelocate$===node})))&&!relocateNode.$slotRefNode$&&(relocateNode.$slotRefNode$=relocateNodeData.$slotRefNode$)}))):relocateNodes.some((function(r){return r.$nodeToRelocate$===node}))||relocateNodes.push({$nodeToRelocate$:node}));1===childNode.nodeType&&relocateSlotContent(childNode)}}(rootVnode.$elm$);for(var i=0;i<relocateNodes.length;i++)(nodeToRelocate=(relocateData=relocateNodes[i]).$nodeToRelocate$)["s-ol"]||((orgLocationNode=doc.createTextNode(""))["s-nr"]=nodeToRelocate,nodeToRelocate.parentNode.insertBefore(nodeToRelocate["s-ol"]=orgLocationNode,nodeToRelocate));for(i=0;i<relocateNodes.length;i++)if(nodeToRelocate=(relocateData=relocateNodes[i]).$nodeToRelocate$,relocateData.$slotRefNode$){for(parentNodeRef=relocateData.$slotRefNode$.parentNode,insertBeforeNode=relocateData.$slotRefNode$.nextSibling,orgLocationNode=nodeToRelocate["s-ol"];orgLocationNode=orgLocationNode.previousSibling;)if((refNode=orgLocationNode["s-nr"])&&refNode["s-sn"]===nodeToRelocate["s-sn"]&&parentNodeRef===refNode.parentNode&&(!(refNode=refNode.nextSibling)||!refNode["s-nr"])){insertBeforeNode=refNode;break}(!insertBeforeNode&&parentNodeRef!==nodeToRelocate.parentNode||nodeToRelocate.nextSibling!==insertBeforeNode)&&nodeToRelocate!==insertBeforeNode&&(!nodeToRelocate["s-hn"]&&nodeToRelocate["s-ol"]&&(nodeToRelocate["s-hn"]=nodeToRelocate["s-ol"].parentNode.nodeName),parentNodeRef.insertBefore(nodeToRelocate,insertBeforeNode))}else 1===nodeToRelocate.nodeType&&(nodeToRelocate.hidden=!0)}checkSlotFallbackVisibility&&function updateFallbackSlotVisibility(elm){var childNode,i,ilen,j,slotNameAttr,nodeType,childNodes=elm.childNodes;for(i=0,ilen=childNodes.length;i<ilen;i++)if(1===(childNode=childNodes[i]).nodeType){if(childNode["s-sr"])for(slotNameAttr=childNode["s-sn"],childNode.hidden=!1,j=0;j<ilen;j++)if(childNodes[j]["s-hn"]!==childNode["s-hn"])if(nodeType=childNodes[j].nodeType,""!==slotNameAttr){if(1===nodeType&&slotNameAttr===childNodes[j].getAttribute("slot")){childNode.hidden=!0;break}}else if(1===nodeType||3===nodeType&&""!==childNodes[j].textContent.trim()){childNode.hidden=!0;break}updateFallbackSlotVisibility(childNode)}}(rootVnode.$elm$),plt.$flags$&=-2,relocateNodes.length=0},getElement=function getElement(ref){return getHostRef(ref).$hostElement$},createEvent=function createEvent(ref,name,flags){var elm=getElement(ref);return{emit:function emit(detail){return emitEvent(elm,name,{bubbles:!!(4&flags),composed:!!(2&flags),cancelable:!!(1&flags),detail:detail})}}},emitEvent=function emitEvent(elm,name,opts){var ev=new CustomEvent(name,opts);return elm.dispatchEvent(ev),ev},attachToAncestor=function attachToAncestor(hostRef,ancestorComponent){ancestorComponent&&!hostRef.$onRenderResolve$&&ancestorComponent["s-p"].push(new Promise((function(r){return hostRef.$onRenderResolve$=r})))},scheduleUpdate=function scheduleUpdate(hostRef,isInitialLoad){if(hostRef.$flags$|=16,!(4&hostRef.$flags$)){var promise,endSchedule=(hostRef.$cmpMeta$.$tagName$,function(){}),ancestorComponent=hostRef.$ancestorComponent$,instance=hostRef.$lazyInstance$,update=function update(){return updateComponent(hostRef,instance,isInitialLoad)};return attachToAncestor(hostRef,ancestorComponent),isInitialLoad&&(hostRef.$flags$|=256,hostRef.$queuedListeners$&&(hostRef.$queuedListeners$.map((function(_ref3){var _ref4=_slicedToArray(_ref3,2),methodName=_ref4[0],event=_ref4[1];return safeCall(instance,methodName,event)})),hostRef.$queuedListeners$=null),promise=safeCall(instance,"componentWillLoad")),promise=then(promise,(function(){return safeCall(instance,"componentWillRender")})),endSchedule(),then(promise,(function(){return writeTask(update)}))}hostRef.$flags$|=512},updateComponent=function updateComponent(hostRef,instance,isInitialLoad){var elm=hostRef.$hostElement$,endUpdate=(hostRef.$cmpMeta$.$tagName$,function(){}),rc=elm["s-rc"];isInitialLoad&&attachStyles(hostRef);var endRender=(hostRef.$cmpMeta$.$tagName$,function(){});renderVdom(hostRef,callRender(instance)),plt.$cssShim$&&plt.$cssShim$.updateHost(elm),hostRef.$flags$&=-17,hostRef.$flags$|=2,rc&&(rc.map((function(cb){return cb()})),elm["s-rc"]=void 0),endRender(),endUpdate();var childrenPromises=elm["s-p"],postUpdate=function postUpdate(){return postUpdateComponent(hostRef)};0===childrenPromises.length?postUpdate():(Promise.all(childrenPromises).then(postUpdate),hostRef.$flags$|=4,childrenPromises.length=0)},callRender=function callRender(instance){try{instance=instance.render()}catch(e){consoleError(e)}return instance},postUpdateComponent=function postUpdateComponent(hostRef){hostRef.$cmpMeta$.$tagName$;var elm=hostRef.$hostElement$,endPostUpdate=function(){},instance=hostRef.$lazyInstance$,ancestorComponent=hostRef.$ancestorComponent$;64&hostRef.$flags$?(safeCall(instance,"componentDidUpdate"),endPostUpdate()):(hostRef.$flags$|=64,addHydratedFlag(elm),safeCall(instance,"componentDidLoad"),endPostUpdate(),hostRef.$onReadyResolve$(elm),ancestorComponent||appDidLoad()),hostRef.$onInstanceResolve$(elm),hostRef.$onRenderResolve$&&(hostRef.$onRenderResolve$(),hostRef.$onRenderResolve$=void 0),512&hostRef.$flags$&&nextTick((function(){return scheduleUpdate(hostRef,!1)})),hostRef.$flags$&=-517},_forceUpdate=function forceUpdate(ref){var hostRef=getHostRef(ref),isConnected=hostRef.$hostElement$.isConnected;return isConnected&&2==(18&hostRef.$flags$)&&scheduleUpdate(hostRef,!1),isConnected},appDidLoad=function appDidLoad(who){addHydratedFlag(doc.documentElement),plt.$flags$|=2,nextTick((function(){return emitEvent(win,"appload",{detail:{namespace:NAMESPACE}})}))},safeCall=function safeCall(instance,method,arg){if(instance&&instance[method])try{return instance[method](arg)}catch(e){consoleError(e)}},then=function then(promise,thenFn){return promise&&promise.then?promise.then(thenFn):thenFn()},addHydratedFlag=function addHydratedFlag(elm){return elm.classList.add("hydrated")},setValue=function setValue(ref,propName,newVal,cmpMeta){var hostRef=getHostRef(ref),oldVal=hostRef.$instanceValues$.get(propName),flags=hostRef.$flags$,instance=hostRef.$lazyInstance$;if(newVal=function parsePropertyValue(propValue,propType){return null==propValue||isComplexType(propValue)?propValue:4&propType?"false"!==propValue&&(""===propValue||!!propValue):2&propType?parseFloat(propValue):1&propType?String(propValue):propValue}(newVal,cmpMeta.$members$[propName][0]),!(8&flags&&void 0!==oldVal||newVal===oldVal)&&(hostRef.$instanceValues$.set(propName,newVal),instance)){if(cmpMeta.$watchers$&&128&flags){var watchMethods=cmpMeta.$watchers$[propName];watchMethods&&watchMethods.map((function(watchMethodName){try{instance[watchMethodName](newVal,oldVal,propName)}catch(e){consoleError(e)}}))}2==(18&flags)&&scheduleUpdate(hostRef,!1)}},proxyComponent=function proxyComponent(Cstr,cmpMeta,flags){if(cmpMeta.$members$){Cstr.watchers&&(cmpMeta.$watchers$=Cstr.watchers);var members=Object.entries(cmpMeta.$members$),prototype=Cstr.prototype;if(members.map((function(_ref5){var _ref6=_slicedToArray(_ref5,2),memberName=_ref6[0],memberFlags=_slicedToArray(_ref6[1],1)[0];31&memberFlags||2&flags&&32&memberFlags?Object.defineProperty(prototype,memberName,{get:function get(){return function getValue(ref,propName){return getHostRef(ref).$instanceValues$.get(propName)}(this,memberName)},set:function set(newValue){setValue(this,memberName,newValue,cmpMeta)},configurable:!0,enumerable:!0}):1&flags&&64&memberFlags&&Object.defineProperty(prototype,memberName,{value:function value(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];var ref=getHostRef(this);return ref.$onInstancePromise$.then((function(){var _ref$$lazyInstance$;return(_ref$$lazyInstance$=ref.$lazyInstance$)[memberName].apply(_ref$$lazyInstance$,args)}))}})})),1&flags){var attrNameToPropName=new Map;prototype.attributeChangedCallback=function(attrName,_oldValue,newValue){var _this=this;plt.jmp((function(){var propName=attrNameToPropName.get(attrName);_this[propName]=(null!==newValue||"boolean"!=typeof _this[propName])&&newValue}))},Cstr.observedAttributes=members.filter((function(_ref7){var _ref8=_slicedToArray(_ref7,2);_ref8[0];return 15&_ref8[1][0]})).map((function(_ref9){var _ref10=_slicedToArray(_ref9,2),propName=_ref10[0],attrName=_ref10[1][1]||propName;return attrNameToPropName.set(attrName,propName),attrName}))}}return Cstr},initializeComponent=function(){var _ref11=function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}(regeneratorRuntime.mark((function _callee(elm,hostRef,cmpMeta,hmrVersionId,Cstr){var endLoad,endNewInstance,_scopeId,endRegisterStyles,style,ancestorComponent,schedule;return regeneratorRuntime.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(0!=(32&hostRef.$flags$)){_context.next=26;break}if(hostRef.$flags$|=32,!(Cstr=loadModule(cmpMeta)).then){_context.next=9;break}return endLoad=function(){},_context.next=7,Cstr;case 7:Cstr=_context.sent,endLoad();case 9:Cstr.isProxied||(cmpMeta.$watchers$=Cstr.watchers,proxyComponent(Cstr,cmpMeta,2),Cstr.isProxied=!0),cmpMeta.$tagName$,endNewInstance=function(){},hostRef.$flags$|=8;try{new Cstr(hostRef)}catch(e){consoleError(e)}if(hostRef.$flags$&=-9,hostRef.$flags$|=128,endNewInstance(),_scopeId=getScopeId(cmpMeta.$tagName$),styles.has(_scopeId)||!Cstr.style){_context.next=26;break}if(cmpMeta.$tagName$,endRegisterStyles=function(){},style=Cstr.style,!(8&cmpMeta.$flags$)){_context.next=24;break}return _context.next=23,__webpack_require__.e(56).then(__webpack_require__.bind(null,1376)).then((function(m){return m.scopeCss(style,_scopeId,!1)}));case 23:style=_context.sent;case 24:registerStyle(_scopeId,style,!!(1&cmpMeta.$flags$)),endRegisterStyles();case 26:ancestorComponent=hostRef.$ancestorComponent$,schedule=function schedule(){return scheduleUpdate(hostRef,!0)},ancestorComponent&&ancestorComponent["s-rc"]?ancestorComponent["s-rc"].push(schedule):schedule();case 29:case"end":return _context.stop()}}),_callee)})));return function initializeComponent(_x,_x2,_x3,_x4,_x5){return _ref11.apply(this,arguments)}}(),_connectedCallback=function connectedCallback(elm){if(0==(1&plt.$flags$)){var hostRef=getHostRef(elm),cmpMeta=hostRef.$cmpMeta$,endConnected=(cmpMeta.$tagName$,function(){});if(1&hostRef.$flags$)addHostEventListeners(elm,hostRef,cmpMeta.$listeners$);else{hostRef.$flags$|=1,12&cmpMeta.$flags$&&setContentReference(elm);for(var ancestorComponent=elm;ancestorComponent=ancestorComponent.parentNode||ancestorComponent.host;)if(ancestorComponent["s-p"]){attachToAncestor(hostRef,hostRef.$ancestorComponent$=ancestorComponent);break}cmpMeta.$members$&&Object.entries(cmpMeta.$members$).map((function(_ref12){var _ref13=_slicedToArray(_ref12,2),memberName=_ref13[0];if(31&_slicedToArray(_ref13[1],1)[0]&&elm.hasOwnProperty(memberName)){var value=elm[memberName];delete elm[memberName],elm[memberName]=value}})),nextTick((function(){return initializeComponent(elm,hostRef,cmpMeta)}))}endConnected()}},setContentReference=function setContentReference(elm){var contentRefElm=elm["s-cr"]=doc.createComment("");contentRefElm["s-cn"]=!0,elm.insertBefore(contentRefElm,elm.firstChild)},_disconnectedCallback=function disconnectedCallback(elm){if(0==(1&plt.$flags$)){var hostRef=getHostRef(elm),instance=hostRef.$lazyInstance$;hostRef.$rmListeners$&&(hostRef.$rmListeners$.map((function(rmListener){return rmListener()})),hostRef.$rmListeners$=void 0),plt.$cssShim$&&plt.$cssShim$.removeHost(elm),safeCall(instance,"componentDidUnload")}},bootstrapLazy=function bootstrapLazy(lazyBundles){var appLoadFallback,options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},endBootstrap=function(){},cmpTags=[],exclude=options.exclude||[],customElements=win.customElements,head=doc.head,metaCharset=head.querySelector("meta[charset]"),visibilityStyle=doc.createElement("style"),deferredConnectedCallbacks=[],isBootstrapping=!0;Object.assign(plt,options),plt.$resourcesUrl$=new URL(options.resourcesUrl||"./",doc.baseURI).href,options.syncQueue&&(plt.$flags$|=4),lazyBundles.map((function(lazyBundle){return lazyBundle[1].map((function(compactMeta){var cmpMeta={$flags$:compactMeta[0],$tagName$:compactMeta[1],$members$:compactMeta[2],$listeners$:compactMeta[3]};cmpMeta.$members$=compactMeta[2],cmpMeta.$listeners$=compactMeta[3],cmpMeta.$watchers$={},!supportsShadow&&1&cmpMeta.$flags$&&(cmpMeta.$flags$|=8);var tagName=cmpMeta.$tagName$,HostElement=function(_HTMLElement){_inherits(HostElement,_HTMLElement);var _super=_createSuper(HostElement);function HostElement(self){var _this2;return _classCallCheck(this,HostElement),self=_assertThisInitialized(_this2=_super.call(this,self)),registerHost(self,cmpMeta),1&cmpMeta.$flags$&&(supportsShadow?self.attachShadow({mode:"open"}):"shadowRoot"in self||(self.shadowRoot=self)),_this2}return _createClass(HostElement,[{key:"connectedCallback",value:function connectedCallback(){var _this3=this;appLoadFallback&&(clearTimeout(appLoadFallback),appLoadFallback=null),isBootstrapping?deferredConnectedCallbacks.push(this):plt.jmp((function(){return _connectedCallback(_this3)}))}},{key:"disconnectedCallback",value:function disconnectedCallback(){var _this4=this;plt.jmp((function(){return _disconnectedCallback(_this4)}))}},{key:"forceUpdate",value:function forceUpdate(){_forceUpdate(this)}},{key:"componentOnReady",value:function componentOnReady(){return getHostRef(this).$onReadyPromise$}}]),HostElement}(_wrapNativeSuper(HTMLElement));cmpMeta.$lazyBundleIds$=lazyBundle[0],exclude.includes(tagName)||customElements.get(tagName)||(cmpTags.push(tagName),customElements.define(tagName,proxyComponent(HostElement,cmpMeta,1)))}))})),visibilityStyle.innerHTML=cmpTags+HYDRATED_CSS,visibilityStyle.setAttribute("data-styles",""),head.insertBefore(visibilityStyle,metaCharset?metaCharset.nextSibling:head.firstChild),isBootstrapping=!1,deferredConnectedCallbacks.length?deferredConnectedCallbacks.map((function(host){return host.connectedCallback()})):plt.jmp((function(){return appLoadFallback=setTimeout(appDidLoad,30)})),endBootstrap()},getAssetPath=function getAssetPath(path){var assetUrl=new URL(path,plt.$resourcesUrl$);return assetUrl.origin!==win.location.origin?assetUrl.href:assetUrl.pathname},hostRefs=new WeakMap,getHostRef=function getHostRef(ref){return hostRefs.get(ref)},registerInstance=function registerInstance(lazyInstance,hostRef){return hostRefs.set(hostRef.$lazyInstance$=lazyInstance,hostRef)},registerHost=function registerHost(elm,cmpMeta){var hostRef={$flags$:0,$hostElement$:elm,$cmpMeta$:cmpMeta,$instanceValues$:new Map};return hostRef.$onInstancePromise$=new Promise((function(r){return hostRef.$onInstanceResolve$=r})),hostRef.$onReadyPromise$=new Promise((function(r){return hostRef.$onReadyResolve$=r})),elm["s-p"]=[],elm["s-rc"]=[],addHostEventListeners(elm,hostRef,cmpMeta.$listeners$),hostRefs.set(elm,hostRef)},isMemberInElement=function isMemberInElement(elm,memberName){return memberName in elm},consoleError=function consoleError(e){return console.error(e)},cmpModules=new Map,loadModule=function loadModule(cmpMeta,hostRef,hmrVersionId){var exportName=cmpMeta.$tagName$.replace(/-/g,"_"),bundleId=cmpMeta.$lazyBundleIds$,module=cmpModules.get(bundleId);return module?module[exportName]:__webpack_require__(919)("./".concat(bundleId,".entry.js")).then((function(importedModule){return cmpModules.set(bundleId,importedModule),importedModule[exportName]}),consoleError)},styles=new Map,queueDomReads=[],queueDomWrites=[],queueDomWritesLow=[],queueTask=function queueTask(queue,write){return function(cb){queue.push(cb),queuePending||(queuePending=!0,write&&4&plt.$flags$?nextTick(flush):plt.raf(flush))}},consumeTimeout=function consumeTimeout(queue,timeout){for(var i=0,ts=0;i<queue.length&&(ts=performance.now())<timeout;)try{queue[i++](ts)}catch(e){consoleError(e)}i===queue.length?queue.length=0:0!==i&&queue.splice(0,i)},flush=function flush(){queueCongestion++,function consume(queue){for(var i=0;i<queue.length;i++)try{queue[i](performance.now())}catch(e){consoleError(e)}queue.length=0}(queueDomReads);var timeout=2==(6&plt.$flags$)?performance.now()+14*Math.ceil(.1*queueCongestion):1/0;consumeTimeout(queueDomWrites,timeout),consumeTimeout(queueDomWritesLow,timeout),queueDomWrites.length>0&&(queueDomWritesLow.push.apply(queueDomWritesLow,queueDomWrites),queueDomWrites.length=0),(queuePending=queueDomReads.length+queueDomWrites.length+queueDomWritesLow.length>0)?plt.raf(flush):queueCongestion=0},nextTick=function nextTick(cb){return promiseResolve().then(cb)},writeTask=queueTask(queueDomWrites,!0),patchEsm=function patchEsm(){return CSS&&CSS.supports&&CSS.supports("color","var(--c)")?promiseResolve():__webpack_require__.e(8).then(__webpack_require__.t.bind(null,1377,7)).then((function(){return(plt.$cssShim$=win.__cssshim)?plt.$cssShim$.i():0}))}},2:function(module,__webpack_exports__,__webpack_require__){"use strict";var markup=__webpack_require__(9),mermaid_core=__webpack_require__(541),mermaid_core_default=__webpack_require__.n(mermaid_core);__webpack_require__(1259),__webpack_exports__.a=function(componentReadme){return function(storyFn){var splittedReadme=componentReadme.split("\x3c!-- Auto Generated Below --\x3e"),header=splittedReadme[0],apiDocs=splittedReadme[1];return"\n    ".concat(Object(markup.a)(header),'\n    <div class="ino-playground">').concat(storyFn(),"</div>\n    ").concat(function hasMermaidGraph(content){return content.includes("```mermaid")}(apiDocs)?function renderWithMermaid(apiDocs){var renderedGraph=function renderMermaid(markdown){return mermaid_core_default.a.render("dependency-graph",markdown)}(function getMermaidMarkdown(content){var mermaidStartIndex=content.indexOf("graph TD;"),mermaidEndIndex=content.indexOf("```",mermaidStartIndex);return content.substring(mermaidStartIndex,mermaidEndIndex)}(apiDocs)),markupWithoutGraphMarkdown=function removeMermaidMarkdown(content){var mermaidStartIndex=content.indexOf("```mermaid"),mermaidEndIndex=content.indexOf("```",mermaidStartIndex+"```mermaid".length);return content.substring(0,mermaidStartIndex)+content.substring(mermaidEndIndex+"```".length)}(apiDocs),markupApiDocs=Object(markup.a)(markupWithoutGraphMarkdown),splittedAtGraphHeader=markupApiDocs.split('<h3 id="graph">Graph</h3>');return"\n    ".concat(splittedAtGraphHeader[0],"\n    ").concat('<h3 id="graph">Graph</h3>',"\n    ").concat(renderedGraph,"\n    ").concat(splittedAtGraphHeader[1],"\n  ")}(apiDocs):with_stencil_readme_renderWithtoutDependencies(apiDocs),"\n  ")}};var with_stencil_readme_renderWithtoutDependencies=function renderWithtoutDependencies(apiDocs){return"".concat(Object(markup.a)(apiDocs))}},23:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_exports__.a=["_fab_set_arrow_down","_fab_set_arrow_up","_input_number_arrow_down","_input_number_arrow_up","add","arrow_down","arrow_left","arrow_right","arrow_up","back_arrow","birthday","calendar","call","camera","cart","chat","checkmark","close","cloud","company","copy","developer","display","download","edit","employee","favorite","filter","folder","help","info","location","logout","mail","menu","message","number","offboarding","onboarding","options","partner","password","phone","print","remove","report","search","settings","sort_az","sort_down","sort_up","sort_za","star","status_abwesend","status_aktuelle","status_offboarding_laufend","status_onboarding_laufend","status_vergangene","status_zukuenftige","time","upload","user","warning","web"]},365:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-300.255a5068.eot"},366:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-regular.6a8ad33d.eot"},367:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-700.bf65e37b.eot"},368:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-900.c7714e8e.eot"},542:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/beach.1432d4b3.jpg"},543:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/forrest.0452b993.jpg"},544:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/waterfall.a7a46e49.jpg"},545:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/InoSnackbar_Demo_Image.8dc833af.png"},546:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/InoDialog_Demo_Image.f4e40c23.jpeg"},547:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/InoNavDrawer_Demo_Image.db2d5bcb.jpeg"},548:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/InoSidebar_Demo_Image.9b3c753c.png"},549:function(module,exports,__webpack_require__){__webpack_require__(550),__webpack_require__(697),__webpack_require__(698),__webpack_require__(891),__webpack_require__(903),__webpack_require__(915),__webpack_require__(918),module.exports=__webpack_require__(939)},615:function(module,exports){},698:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(167)},9:function(module,__webpack_exports__,__webpack_require__){"use strict";var marked__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(540),marked__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(marked__WEBPACK_IMPORTED_MODULE_0__);__webpack_require__(941);__webpack_exports__.a=function(markup){return'<div class="markdown-body">'.concat(marked__WEBPACK_IMPORTED_MODULE_0___default()(markup,{highlight:function highlight(code,lang){var h=__webpack_require__(945);return(lang?h.highlight(lang,code):h.highlightAuto(code)).value}}),"</div>")}},918:function(module,exports,__webpack_require__){"use strict";var _clientApi=__webpack_require__(60),_clientLogger=__webpack_require__(52),_configFilename=__webpack_require__(1339);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)})),(_configFilename.parameters||_configFilename.globals||_configFilename.globalTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globals:_configFilename.globals,globalTypes:_configFilename.globalTypes}),!1),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},919:function(module,exports,__webpack_require__){var map={"./ino-button_2.entry.js":[1379,0,19],"./ino-card.entry.js":[1380,20],"./ino-checkbox_2.entry.js":[1381,0,13],"./ino-chip-set.entry.js":[1382,0,21],"./ino-chip.entry.js":[1383,22],"./ino-control-item.entry.js":[1384,39],"./ino-datepicker.entry.js":[1385,36],"./ino-dialog.entry.js":[1386,0,38],"./ino-fab-set.entry.js":[1387,23],"./ino-fab.entry.js":[1388,0,24],"./ino-form-row.entry.js":[1389,40],"./ino-header.entry.js":[1390,41],"./ino-icon-button.entry.js":[1391,0,25],"./ino-icon.entry.js":[1392,42],"./ino-img-list.entry.js":[1393,26],"./ino-img.entry.js":[1394,27],"./ino-input-file.entry.js":[1395,43],"./ino-input.entry.js":[1396,0,3,44],"./ino-label.entry.js":[1397,45],"./ino-list-divider.entry.js":[1398,28],"./ino-list-item.entry.js":[1399,29],"./ino-list.entry.js":[1400,1,14],"./ino-menu.entry.js":[1401,1,4,34],"./ino-nav-drawer.entry.js":[1402,1,2,46],"./ino-nav-item.entry.js":[1403,47],"./ino-option-group.entry.js":[1404,48],"./ino-option.entry.js":[1405,30],"./ino-popover.entry.js":[1406,5,49],"./ino-progress-bar.entry.js":[1407,35],"./ino-radio-group.entry.js":[1408,50],"./ino-range.entry.js":[1409,12],"./ino-segment-button.entry.js":[1410,18],"./ino-segment-group.entry.js":[1411,37],"./ino-select.entry.js":[1412,0,1,4,17],"./ino-sidebar.entry.js":[1413,1,2,51],"./ino-snackbar.entry.js":[1414,15],"./ino-switch.entry.js":[1415,0,16],"./ino-tab-bar.entry.js":[1416,0,52],"./ino-tab.entry.js":[1417,31],"./ino-table-cell.entry.js":[1418,32],"./ino-table-row.entry.js":[1419,33],"./ino-table.entry.js":[1420,53],"./ino-textarea.entry.js":[1421,0,3,54],"./ino-tooltip.entry.js":[1422,5,55]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((function(){return __webpack_require__(id)}))}webpackAsyncContext.keys=function webpackAsyncContextKeys(){return Object.keys(map)},webpackAsyncContext.id=919,module.exports=webpackAsyncContext},920:function(module,exports,__webpack_require__){var content=__webpack_require__(921);"string"==typeof content&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};__webpack_require__(6)(content,options);content.locals&&(module.exports=content.locals)},921:function(module,exports,__webpack_require__){var escape=__webpack_require__(922);(module.exports=__webpack_require__(5)(!1)).push([module.i,'.hljs{display:block;overflow-x:auto;padding:.5em;color:#333;background:#f8f8f8}.hljs-comment,.hljs-quote{color:#998;font-style:italic}.hljs-keyword,.hljs-selector-tag,.hljs-subst{color:#333;font-weight:bold}.hljs-number,.hljs-literal,.hljs-variable,.hljs-template-variable,.hljs-tag .hljs-attr{color:teal}.hljs-string,.hljs-doctag{color:#d14}.hljs-title,.hljs-section,.hljs-selector-id{color:#900;font-weight:bold}.hljs-subst{font-weight:normal}.hljs-type,.hljs-class .hljs-title{color:#458;font-weight:bold}.hljs-tag,.hljs-name,.hljs-attribute{color:navy;font-weight:normal}.hljs-regexp,.hljs-link{color:#009926}.hljs-symbol,.hljs-bullet{color:#990073}.hljs-built_in,.hljs-builtin-name{color:#0086b3}.hljs-meta{color:#999;font-weight:bold}.hljs-deletion{background:#fdd}.hljs-addition{background:#dfd}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:bold}@font-face{font-family:"Lato";font-style:normal;font-weight:300;src:url('+escape(__webpack_require__(365))+');src:local("Lato Light"),local("Lato-Light"),url('+escape(__webpack_require__(365))+'?#iefix) format("embedded-opentype"),url('+escape(__webpack_require__(923))+') format("woff2"),url('+escape(__webpack_require__(924))+') format("woff"),url('+escape(__webpack_require__(925))+') format("truetype"),url('+escape(__webpack_require__(926))+'#Lato) format("svg")}@font-face{font-family:"Lato";font-style:normal;font-weight:400;src:url('+escape(__webpack_require__(366))+');src:local("Lato Regular"),local("Lato-Regular"),url('+escape(__webpack_require__(366))+'?#iefix) format("embedded-opentype"),url('+escape(__webpack_require__(927))+') format("woff2"),url('+escape(__webpack_require__(928))+') format("woff"),url('+escape(__webpack_require__(929))+') format("truetype"),url('+escape(__webpack_require__(930))+'#Lato) format("svg")}@font-face{font-family:"Lato";font-style:normal;font-weight:700;src:url('+escape(__webpack_require__(367))+');src:local("Lato Bold"),local("Lato-Bold"),url('+escape(__webpack_require__(367))+'?#iefix) format("embedded-opentype"),url('+escape(__webpack_require__(931))+') format("woff2"),url('+escape(__webpack_require__(932))+') format("woff"),url('+escape(__webpack_require__(933))+') format("truetype"),url('+escape(__webpack_require__(934))+'#Lato) format("svg")}@font-face{font-family:"Lato";font-style:normal;font-weight:900;src:url('+escape(__webpack_require__(368))+');src:local("Lato Black"),local("Lato-Black"),url('+escape(__webpack_require__(368))+'?#iefix) format("embedded-opentype"),url('+escape(__webpack_require__(935))+') format("woff2"),url('+escape(__webpack_require__(936))+') format("woff"),url('+escape(__webpack_require__(937))+') format("truetype"),url('+escape(__webpack_require__(938))+'#Lato) format("svg")}body,body .markdown-body{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-font-family, Roboto, sans-serif)}.ino-story-composer{margin:16px}',""])},923:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-300.917632e3.woff2"},924:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-300.4d96f9e6.woff"},925:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-300.b3582834.ttf"},926:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-300.956bf162.svg"},927:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-regular.65e877e5.woff2"},928:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-regular.319df0f5.woff"},929:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-regular.f71f2288.ttf"},930:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-regular.ec530704.svg"},931:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-700.f1405bd8.woff2"},932:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-700.a354bb0b.woff"},933:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-700.96fd01fc.ttf"},934:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-700.414efa6d.svg"},935:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-900.f33015cf.woff2"},936:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-900.22f1d97b.woff"},937:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-900.10c30b35.ttf"},938:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/lato-v16-latin-900.507133c1.svg"},939:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(167).configure)([__webpack_require__(940)],module,!1)}).call(this,__webpack_require__(66)(module))},940:function(module,exports,__webpack_require__){var map={"./stories/docs/contributing.stories.js":1336,"./stories/docs/framework-integration.stories.js":1338,"./stories/docs/home.stories.js":1342,"./stories/docs/index.stories.js":1133,"./stories/docs/styleguide.stories.js":1343,"./stories/ino-button/ino-button.stories.js":1347,"./stories/ino-card/ino-card.stories.js":1348,"./stories/ino-checkbox/ino-checkbox.stories.js":1349,"./stories/ino-chip-set/ino-chip-set.stories.js":1344,"./stories/ino-datepicker/ino-datepicker.stories.js":1350,"./stories/ino-dialog/ino-dialog.stories.js":1351,"./stories/ino-fab-set/ino-fab-set.stories.js":1352,"./stories/ino-fab/ino-fab.stories.js":1353,"./stories/ino-form-row/ino-form-row.stories.js":1354,"./stories/ino-header/ino-header.stories.js":1355,"./stories/ino-icon-button/ino-icon-button.stories.js":1356,"./stories/ino-icon/ino-icon.stories.js":1357,"./stories/ino-img-list/ino-img-list.stories.js":1358,"./stories/ino-img/ino-img.stories.js":1359,"./stories/ino-input-file/ino-input-file.stories.js":1360,"./stories/ino-input/ino-input.stories.js":1361,"./stories/ino-list/ino-list.stories.js":1337,"./stories/ino-menu/ino-menu.stories.js":1362,"./stories/ino-nav-drawer/ino-nav-drawer.stories.js":1363,"./stories/ino-popover/ino-popover.stories.js":1364,"./stories/ino-progress-bar/ino-progress-bar.stories.js":1365,"./stories/ino-radio-group/ino-radio-group.stories.js":1366,"./stories/ino-radio/ino-radio.stories.js":1367,"./stories/ino-range/ino-range.stories.js":1368,"./stories/ino-segment-button/ino-segment-button.stories.js":1369,"./stories/ino-segment-group/ino-segment-group.stories.js":1370,"./stories/ino-select/ino-select.stories.js":1340,"./stories/ino-sidebar/ino-sidebar.stories.js":1371,"./stories/ino-snackbar/ino-snackbar.stories.js":1372,"./stories/ino-spinner/ino-spinner.stories.js":1373,"./stories/ino-switch/ino-switch.stories.js":1345,"./stories/ino-tab-bar/ino-tab-bar.stories.js":1346,"./stories/ino-table/ino-table.stories.js":1341,"./stories/ino-textarea/ino-textarea.stories.js":1374,"./stories/ino-tooltip/ino-tooltip.stories.js":1375,"./stories/showcase/showcase.stories.js":1332};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=940},941:function(module,exports,__webpack_require__){var api=__webpack_require__(942),content=__webpack_require__(943);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},943:function(module,exports,__webpack_require__){(exports=__webpack_require__(944)(!1)).push([module.i,'@font-face {\n  font-family: octicons-link;\n  src: url(data:font/woff;charset=utf-8;base64,d09GRgABAAAAAAZwABAAAAAACFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEU0lHAAAGaAAAAAgAAAAIAAAAAUdTVUIAAAZcAAAACgAAAAoAAQAAT1MvMgAAAyQAAABJAAAAYFYEU3RjbWFwAAADcAAAAEUAAACAAJThvmN2dCAAAATkAAAABAAAAAQAAAAAZnBnbQAAA7gAAACyAAABCUM+8IhnYXNwAAAGTAAAABAAAAAQABoAI2dseWYAAAFsAAABPAAAAZwcEq9taGVhZAAAAsgAAAA0AAAANgh4a91oaGVhAAADCAAAABoAAAAkCA8DRGhtdHgAAAL8AAAADAAAAAwGAACfbG9jYQAAAsAAAAAIAAAACABiATBtYXhwAAACqAAAABgAAAAgAA8ASm5hbWUAAAToAAABQgAAAlXu73sOcG9zdAAABiwAAAAeAAAAME3QpOBwcmVwAAAEbAAAAHYAAAB/aFGpk3jaTY6xa8JAGMW/O62BDi0tJLYQincXEypYIiGJjSgHniQ6umTsUEyLm5BV6NDBP8Tpts6F0v+k/0an2i+itHDw3v2+9+DBKTzsJNnWJNTgHEy4BgG3EMI9DCEDOGEXzDADU5hBKMIgNPZqoD3SilVaXZCER3/I7AtxEJLtzzuZfI+VVkprxTlXShWKb3TBecG11rwoNlmmn1P2WYcJczl32etSpKnziC7lQyWe1smVPy/Lt7Kc+0vWY/gAgIIEqAN9we0pwKXreiMasxvabDQMM4riO+qxM2ogwDGOZTXxwxDiycQIcoYFBLj5K3EIaSctAq2kTYiw+ymhce7vwM9jSqO8JyVd5RH9gyTt2+J/yUmYlIR0s04n6+7Vm1ozezUeLEaUjhaDSuXHwVRgvLJn1tQ7xiuVv/ocTRF42mNgZGBgYGbwZOBiAAFGJBIMAAizAFoAAABiAGIAznjaY2BkYGAA4in8zwXi+W2+MjCzMIDApSwvXzC97Z4Ig8N/BxYGZgcgl52BCSQKAA3jCV8CAABfAAAAAAQAAEB42mNgZGBg4f3vACQZQABIMjKgAmYAKEgBXgAAeNpjYGY6wTiBgZWBg2kmUxoDA4MPhGZMYzBi1AHygVLYQUCaawqDA4PChxhmh/8ODDEsvAwHgMKMIDnGL0x7gJQCAwMAJd4MFwAAAHjaY2BgYGaA4DAGRgYQkAHyGMF8NgYrIM3JIAGVYYDT+AEjAwuDFpBmA9KMDEwMCh9i/v8H8sH0/4dQc1iAmAkALaUKLgAAAHjaTY9LDsIgEIbtgqHUPpDi3gPoBVyRTmTddOmqTXThEXqrob2gQ1FjwpDvfwCBdmdXC5AVKFu3e5MfNFJ29KTQT48Ob9/lqYwOGZxeUelN2U2R6+cArgtCJpauW7UQBqnFkUsjAY/kOU1cP+DAgvxwn1chZDwUbd6CFimGXwzwF6tPbFIcjEl+vvmM/byA48e6tWrKArm4ZJlCbdsrxksL1AwWn/yBSJKpYbq8AXaaTb8AAHja28jAwOC00ZrBeQNDQOWO//sdBBgYGRiYWYAEELEwMTE4uzo5Zzo5b2BxdnFOcALxNjA6b2ByTswC8jYwg0VlNuoCTWAMqNzMzsoK1rEhNqByEyerg5PMJlYuVueETKcd/89uBpnpvIEVomeHLoMsAAe1Id4AAAAAAAB42oWQT07CQBTGv0JBhagk7HQzKxca2sJCE1hDt4QF+9JOS0nbaaYDCQfwCJ7Au3AHj+LO13FMmm6cl7785vven0kBjHCBhfpYuNa5Ph1c0e2Xu3jEvWG7UdPDLZ4N92nOm+EBXuAbHmIMSRMs+4aUEd4Nd3CHD8NdvOLTsA2GL8M9PODbcL+hD7C1xoaHeLJSEao0FEW14ckxC+TU8TxvsY6X0eLPmRhry2WVioLpkrbp84LLQPGI7c6sOiUzpWIWS5GzlSgUzzLBSikOPFTOXqly7rqx0Z1Q5BAIoZBSFihQYQOOBEdkCOgXTOHA07HAGjGWiIjaPZNW13/+lm6S9FT7rLHFJ6fQbkATOG1j2OFMucKJJsxIVfQORl+9Jyda6Sl1dUYhSCm1dyClfoeDve4qMYdLEbfqHf3O/AdDumsjAAB42mNgYoAAZQYjBmyAGYQZmdhL8zLdDEydARfoAqIAAAABAAMABwAKABMAB///AA8AAQAAAAAAAAAAAAAAAAABAAAAAA==) format(\'woff\');\n}\n\n.markdown-body {\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  line-height: 1.5;\n  color: #24292e;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-size: 16px;\n  line-height: 1.5;\n  word-wrap: break-word;\n}\n\n.markdown-body .pl-c {\n  color: #6a737d;\n}\n\n.markdown-body .pl-c1,\n.markdown-body .pl-s .pl-v {\n  color: #005cc5;\n}\n\n.markdown-body .pl-e,\n.markdown-body .pl-en {\n  color: #6f42c1;\n}\n\n.markdown-body .pl-smi,\n.markdown-body .pl-s .pl-s1 {\n  color: #24292e;\n}\n\n.markdown-body .pl-ent {\n  color: #22863a;\n}\n\n.markdown-body .pl-k {\n  color: #d73a49;\n}\n\n.markdown-body .pl-s,\n.markdown-body .pl-pds,\n.markdown-body .pl-s .pl-pse .pl-s1,\n.markdown-body .pl-sr,\n.markdown-body .pl-sr .pl-cce,\n.markdown-body .pl-sr .pl-sre,\n.markdown-body .pl-sr .pl-sra {\n  color: #032f62;\n}\n\n.markdown-body .pl-v,\n.markdown-body .pl-smw {\n  color: #e36209;\n}\n\n.markdown-body .pl-bu {\n  color: #b31d28;\n}\n\n.markdown-body .pl-ii {\n  color: #fafbfc;\n  background-color: #b31d28;\n}\n\n.markdown-body .pl-c2 {\n  color: #fafbfc;\n  background-color: #d73a49;\n}\n\n.markdown-body .pl-c2::before {\n  content: "^M";\n}\n\n.markdown-body .pl-sr .pl-cce {\n  font-weight: bold;\n  color: #22863a;\n}\n\n.markdown-body .pl-ml {\n  color: #735c0f;\n}\n\n.markdown-body .pl-mh,\n.markdown-body .pl-mh .pl-en,\n.markdown-body .pl-ms {\n  font-weight: bold;\n  color: #005cc5;\n}\n\n.markdown-body .pl-mi {\n  font-style: italic;\n  color: #24292e;\n}\n\n.markdown-body .pl-mb {\n  font-weight: bold;\n  color: #24292e;\n}\n\n.markdown-body .pl-md {\n  color: #b31d28;\n  background-color: #ffeef0;\n}\n\n.markdown-body .pl-mi1 {\n  color: #22863a;\n  background-color: #f0fff4;\n}\n\n.markdown-body .pl-mc {\n  color: #e36209;\n  background-color: #ffebda;\n}\n\n.markdown-body .pl-mi2 {\n  color: #f6f8fa;\n  background-color: #005cc5;\n}\n\n.markdown-body .pl-mdr {\n  font-weight: bold;\n  color: #6f42c1;\n}\n\n.markdown-body .pl-ba {\n  color: #586069;\n}\n\n.markdown-body .pl-sg {\n  color: #959da5;\n}\n\n.markdown-body .pl-corl {\n  text-decoration: underline;\n  color: #032f62;\n}\n\n.markdown-body .octicon {\n  display: inline-block;\n  vertical-align: text-top;\n  fill: currentColor;\n}\n\n.markdown-body a {\n  background-color: transparent;\n}\n\n.markdown-body a:active,\n.markdown-body a:hover {\n  outline-width: 0;\n}\n\n.markdown-body strong {\n  font-weight: inherit;\n}\n\n.markdown-body strong {\n  font-weight: bolder;\n}\n\n.markdown-body h1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n.markdown-body img {\n  border-style: none;\n}\n\n.markdown-body code,\n.markdown-body kbd,\n.markdown-body pre {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n.markdown-body hr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n}\n\n.markdown-body input {\n  font: inherit;\n  margin: 0;\n}\n\n.markdown-body input {\n  overflow: visible;\n}\n\n.markdown-body [type="checkbox"] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n.markdown-body * {\n  box-sizing: border-box;\n}\n\n.markdown-body input {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\n.markdown-body a {\n  color: #0366d6;\n  text-decoration: none;\n}\n\n.markdown-body a:hover {\n  text-decoration: underline;\n}\n\n.markdown-body strong {\n  font-weight: 600;\n}\n\n.markdown-body hr {\n  height: 0;\n  margin: 15px 0;\n  overflow: hidden;\n  background: transparent;\n  border: 0;\n  border-bottom: 1px solid #dfe2e5;\n}\n\n.markdown-body hr::before {\n  display: table;\n  content: "";\n}\n\n.markdown-body hr::after {\n  display: table;\n  clear: both;\n  content: "";\n}\n\n.markdown-body table {\n  border-spacing: 0;\n  border-collapse: collapse;\n}\n\n.markdown-body td,\n.markdown-body th {\n  padding: 0;\n}\n\n.markdown-body h1,\n.markdown-body h2,\n.markdown-body h3,\n.markdown-body h4,\n.markdown-body h5,\n.markdown-body h6 {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.markdown-body h1 {\n  font-size: 32px;\n  font-weight: 600;\n}\n\n.markdown-body h2 {\n  font-size: 24px;\n  font-weight: 600;\n}\n\n.markdown-body h3 {\n  font-size: 20px;\n  font-weight: 600;\n}\n\n.markdown-body h4 {\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.markdown-body h5 {\n  font-size: 14px;\n  font-weight: 600;\n}\n\n.markdown-body h6 {\n  font-size: 12px;\n  font-weight: 600;\n}\n\n.markdown-body p {\n  margin-top: 0;\n  margin-bottom: 10px;\n}\n\n.markdown-body blockquote {\n  margin: 0;\n}\n\n.markdown-body ul,\n.markdown-body ol {\n  padding-left: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.markdown-body ol ol,\n.markdown-body ul ol {\n  list-style-type: lower-roman;\n}\n\n.markdown-body ul ul ol,\n.markdown-body ul ol ol,\n.markdown-body ol ul ol,\n.markdown-body ol ol ol {\n  list-style-type: lower-alpha;\n}\n\n.markdown-body dd {\n  margin-left: 0;\n}\n\n.markdown-body code {\n  font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace;\n  font-size: 12px;\n}\n\n.markdown-body pre {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace;\n  font-size: 12px;\n}\n\n.markdown-body .octicon {\n  vertical-align: text-bottom;\n}\n\n.markdown-body .pl-0 {\n  padding-left: 0 !important;\n}\n\n.markdown-body .pl-1 {\n  padding-left: 4px !important;\n}\n\n.markdown-body .pl-2 {\n  padding-left: 8px !important;\n}\n\n.markdown-body .pl-3 {\n  padding-left: 16px !important;\n}\n\n.markdown-body .pl-4 {\n  padding-left: 24px !important;\n}\n\n.markdown-body .pl-5 {\n  padding-left: 32px !important;\n}\n\n.markdown-body .pl-6 {\n  padding-left: 40px !important;\n}\n\n.markdown-body::before {\n  display: table;\n  content: "";\n}\n\n.markdown-body::after {\n  display: table;\n  clear: both;\n  content: "";\n}\n\n.markdown-body>*:first-child {\n  margin-top: 0 !important;\n}\n\n.markdown-body>*:last-child {\n  margin-bottom: 0 !important;\n}\n\n.markdown-body a:not([href]) {\n  color: inherit;\n  text-decoration: none;\n}\n\n.markdown-body .anchor {\n  float: left;\n  padding-right: 4px;\n  margin-left: -20px;\n  line-height: 1;\n}\n\n.markdown-body .anchor:focus {\n  outline: none;\n}\n\n.markdown-body p,\n.markdown-body blockquote,\n.markdown-body ul,\n.markdown-body ol,\n.markdown-body dl,\n.markdown-body table,\n.markdown-body pre {\n  margin-top: 0;\n  margin-bottom: 16px;\n}\n\n.markdown-body hr {\n  height: 0.25em;\n  padding: 0;\n  margin: 24px 0;\n  background-color: #e1e4e8;\n  border: 0;\n}\n\n.markdown-body blockquote {\n  padding: 0 1em;\n  color: #6a737d;\n  border-left: 0.25em solid #dfe2e5;\n}\n\n.markdown-body blockquote>:first-child {\n  margin-top: 0;\n}\n\n.markdown-body blockquote>:last-child {\n  margin-bottom: 0;\n}\n\n.markdown-body kbd {\n  display: inline-block;\n  padding: 3px 5px;\n  font-size: 11px;\n  line-height: 10px;\n  color: #444d56;\n  vertical-align: middle;\n  background-color: #fafbfc;\n  border: solid 1px #c6cbd1;\n  border-bottom-color: #959da5;\n  border-radius: 3px;\n  box-shadow: inset 0 -1px 0 #959da5;\n}\n\n.markdown-body h1,\n.markdown-body h2,\n.markdown-body h3,\n.markdown-body h4,\n.markdown-body h5,\n.markdown-body h6 {\n  margin-top: 24px;\n  margin-bottom: 16px;\n  font-weight: 600;\n  line-height: 1.25;\n}\n\n.markdown-body h1 .octicon-link,\n.markdown-body h2 .octicon-link,\n.markdown-body h3 .octicon-link,\n.markdown-body h4 .octicon-link,\n.markdown-body h5 .octicon-link,\n.markdown-body h6 .octicon-link {\n  color: #1b1f23;\n  vertical-align: middle;\n  visibility: hidden;\n}\n\n.markdown-body h1:hover .anchor,\n.markdown-body h2:hover .anchor,\n.markdown-body h3:hover .anchor,\n.markdown-body h4:hover .anchor,\n.markdown-body h5:hover .anchor,\n.markdown-body h6:hover .anchor {\n  text-decoration: none;\n}\n\n.markdown-body h1:hover .anchor .octicon-link,\n.markdown-body h2:hover .anchor .octicon-link,\n.markdown-body h3:hover .anchor .octicon-link,\n.markdown-body h4:hover .anchor .octicon-link,\n.markdown-body h5:hover .anchor .octicon-link,\n.markdown-body h6:hover .anchor .octicon-link {\n  visibility: visible;\n}\n\n.markdown-body h1 {\n  padding-bottom: 0.3em;\n  font-size: 2em;\n  border-bottom: 1px solid #eaecef;\n}\n\n.markdown-body h2 {\n  padding-bottom: 0.3em;\n  font-size: 1.5em;\n  border-bottom: 1px solid #eaecef;\n}\n\n.markdown-body h3 {\n  font-size: 1.25em;\n}\n\n.markdown-body h4 {\n  font-size: 1em;\n}\n\n.markdown-body h5 {\n  font-size: 0.875em;\n}\n\n.markdown-body h6 {\n  font-size: 0.85em;\n  color: #6a737d;\n}\n\n.markdown-body ul,\n.markdown-body ol {\n  padding-left: 2em;\n}\n\n.markdown-body ul ul,\n.markdown-body ul ol,\n.markdown-body ol ol,\n.markdown-body ol ul {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.markdown-body li {\n  word-wrap: break-all;\n}\n\n.markdown-body li>p {\n  margin-top: 16px;\n}\n\n.markdown-body li+li {\n  margin-top: 0.25em;\n}\n\n.markdown-body dl {\n  padding: 0;\n}\n\n.markdown-body dl dt {\n  padding: 0;\n  margin-top: 16px;\n  font-size: 1em;\n  font-style: italic;\n  font-weight: 600;\n}\n\n.markdown-body dl dd {\n  padding: 0 16px;\n  margin-bottom: 16px;\n}\n\n.markdown-body table {\n  display: block;\n  width: 100%;\n  overflow: auto;\n}\n\n.markdown-body table th {\n  font-weight: 600;\n}\n\n.markdown-body table th,\n.markdown-body table td {\n  padding: 6px 13px;\n  border: 1px solid #dfe2e5;\n}\n\n.markdown-body table tr {\n  background-color: #fff;\n  border-top: 1px solid #c6cbd1;\n}\n\n.markdown-body table tr:nth-child(2n) {\n  background-color: #f6f8fa;\n}\n\n.markdown-body img {\n  max-width: 100%;\n  box-sizing: content-box;\n  background-color: #fff;\n}\n\n.markdown-body img[align=right] {\n  padding-left: 20px;\n}\n\n.markdown-body img[align=left] {\n  padding-right: 20px;\n}\n\n.markdown-body code {\n  padding: 0.2em 0.4em;\n  margin: 0;\n  font-size: 85%;\n  background-color: rgba(27,31,35,0.05);\n  border-radius: 3px;\n}\n\n.markdown-body pre {\n  word-wrap: normal;\n}\n\n.markdown-body pre>code {\n  padding: 0;\n  margin: 0;\n  font-size: 100%;\n  word-break: normal;\n  white-space: pre;\n  background: transparent;\n  border: 0;\n}\n\n.markdown-body .highlight {\n  margin-bottom: 16px;\n}\n\n.markdown-body .highlight pre {\n  margin-bottom: 0;\n  word-break: normal;\n}\n\n.markdown-body .highlight pre,\n.markdown-body pre {\n  padding: 16px;\n  overflow: auto;\n  font-size: 85%;\n  line-height: 1.45;\n  background-color: #f6f8fa;\n  border-radius: 3px;\n}\n\n.markdown-body pre code {\n  display: inline;\n  max-width: auto;\n  padding: 0;\n  margin: 0;\n  overflow: visible;\n  line-height: inherit;\n  word-wrap: normal;\n  background-color: transparent;\n  border: 0;\n}\n\n.markdown-body .full-commit .btn-outline:not(:disabled):hover {\n  color: #005cc5;\n  border-color: #005cc5;\n}\n\n.markdown-body kbd {\n  display: inline-block;\n  padding: 3px 5px;\n  font: 11px "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace;\n  line-height: 10px;\n  color: #444d56;\n  vertical-align: middle;\n  background-color: #fafbfc;\n  border: solid 1px #d1d5da;\n  border-bottom-color: #c6cbd1;\n  border-radius: 3px;\n  box-shadow: inset 0 -1px 0 #c6cbd1;\n}\n\n.markdown-body :checked+.radio-label {\n  position: relative;\n  z-index: 1;\n  border-color: #0366d6;\n}\n\n.markdown-body .task-list-item {\n  list-style-type: none;\n}\n\n.markdown-body .task-list-item+.task-list-item {\n  margin-top: 3px;\n}\n\n.markdown-body .task-list-item input {\n  margin: 0 0.2em 0.25em -1.6em;\n  vertical-align: middle;\n}\n\n.markdown-body hr {\n  border-bottom-color: #eee;\n}',""]),module.exports=exports}},[[549,10,11]]]);
//# sourceMappingURL=main.402008ff6d207bfff8e5.bundle.js.map
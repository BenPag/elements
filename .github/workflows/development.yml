name: Test & Build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: setup cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-lerna-
      - run: npm config set scripts-prepend-node-path true
      - run: yarn install --frozen-lockfile

  test:
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-lerna-
      - run: npm config set scripts-prepend-node-path true
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn test

  build:
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: setup cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-lerna-
      - run: npm config set scripts-prepend-node-path true
      - run: yarn install --frozen-lockfile
      - run: yarn build

      - if: github.ref == 'refs/heads/master'
        name: upload elements artifact
        uses: actions/upload-artifact@v2
        with:
          name: elements
          path:
            packages/elements/dist/
      - if: github.ref == 'refs/heads/master'
        name: upload elements-react artifact
        uses: actions/upload-artifact@v2
        with:
          name: elements-react
          path:
            packages/elements-react/dist/
      - if: github.ref == 'refs/heads/master'
        name: upload elements-angular artifact
        uses: actions/upload-artifact@v2
        with:
          name: elements-angular
          path:
            packages/elements-angular/dist/
      - name: upload storybook artifact
        uses: actions/upload-artifact@v2
        with:
          name: storybook
          path:
            packages/storybook/dist/

  deploy-unicorn:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'
    environment:
      name: unicorn
      url: ${{ steps.deploy_unicorn.outputs.url }}
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Install azcopy
        run: |
          echo "... Installing azcopy"
          sudo mkdir -p /home/azcopy/
          curl -L https://aka.ms/downloadazcopy-v10-linux | tar -zxf - --directory /home/azcopy/
          sudo mv $(find /home/azcopy/ -type f -name azcopy) /usr/bin/
      - uses: actions/download-artifact@v2
        with:
          name: storybook
          path: ./packages/storybook/dist/
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Deploy unicorn
        id: deploy_unicorn
        run: |
          echo "... Deploying Elements Storybook to $DEPLOYMENT_PATH"
          azcopy cp "./packages/storybook/dist/*" "$STORAGE_ACCOUNT/%24web/$DEPLOYMENT_PATH?$SAS_TOKEN" --recursive
          echo "::set-output name=url::$SITE_URL/$DEPLOYMENT_PATH"
        env:
          SITE_URL: https://elementssa.z1.web.core.windows.net
          DEPLOYMENT_PATH: unicorn/${{ env.GITHUB_HEAD_REF_SLUG }}
          SAS_TOKEN: ${{ secrets.AZURE_STORAGE_SAS_TOKEN }}
          STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
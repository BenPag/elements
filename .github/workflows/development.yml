name: Test & Build

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: setup cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-lerna-
      - run: npm config set scripts-prepend-node-path true
      - run: yarn install --frozen-lockfile

  test:
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-lerna-
      - run: npm config set scripts-prepend-node-path true
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn test

  build:
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: setup cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/*/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-lerna-
      - run: npm config set scripts-prepend-node-path true
      - run: yarn install --frozen-lockfile
      - run: yarn build

      - if: github.ref == 'refs/heads/master'
        name: upload elements artifact
        uses: actions/upload-artifact@v2
        with:
          name: elements
          path:
            packages/elements/dist/
      - if: github.ref == 'refs/heads/master'
        name: upload elements-react artifact
        uses: actions/upload-artifact@v2
        with:
          name: elements-react
          path:
            packages/elements-react/dist/
      - if: github.ref == 'refs/heads/master'
        name: upload elements-angular artifact
        uses: actions/upload-artifact@v2
        with:
          name: elements-angular
          path:
            packages/elements-angular/dist/
      - name: upload storybook artifact
        uses: actions/upload-artifact@v2
        with:
          name: storybook
          path:
            packages/storybook/dist/

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: unicorn
      url: ${{ steps.az_deploy.outputs.deployment_url }}
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Setting deployment path
        run: |
          case "$GITHUB_REF" in
            refs/tags/*)
              DEPLOYMENT_BASE="version";;
            *)
              DEPLOYMENT_BASE="unicorn";;
          esac

          # Ref slug refers to the branch name or version number for tags
          # (https://github.com/rlespinasse/github-slug-action/blob/v3.x/docs/slug-variables.md)
          echo "DEPLOYMENT_PATH=${DEPLOYMENT_BASE}/${{ env.GITHUB_HEAD_REF_SLUG }}" >> $GITHUB_ENV

      - uses: ./.github/workflows/deploy-storybook
        id: az_deploy
        with:
          deployment_path: ${{ env.DEPLOYMENT_PATH }}
          storybook_artifact_name: storybook
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
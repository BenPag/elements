name: Deploy storybook

## Manual workflow to deploy the storybook to github pages. Two options exists:
## a) on non-master branch => deploys to unicorn/<BRANCH_NAME>, triggered manually
## b) on tags (new version) => deploys to version/<TAG_NAME>

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/install

  test:
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/install
      - run: yarn lint
      - run: yarn test

  build:
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/workflows/install
    - run: yarn build

    - name: upload storybook artifact
      uses: actions/upload-artifact@v2
      with:
        name: storybook
        path:
          packages/storybook/dist/

  deploy:
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Set deployment path
        run: |
          case "$GITHUB_REF" in
            refs/tags/*)
              DEPLOYMENT_BASE="version";;
            *)
              DEPLOYMENT_BASE="unicorn";;
          esac

          # Ref slug refers to the branch name or version number for tags
          # (https://github.com/rlespinasse/github-slug-action/blob/v3.x/docs/slug-variables.md)
          echo "DEPLOYMENT_PATH=${DEPLOYMENT_BASE}/${{ env.GITHUB_REF_NAME_SLUG }}" >> $GITHUB_ENV

      - uses: actions/download-artifact@v2
        with:
          name: storybook
          path: artifact/${{ env.DEPLOYMENT_PATH }}

      # If a new version has been create, we add the version to the hosted-versions.json
      # - if: startsWith(github.ref, 'refs/tags/')
      - uses: ./.github/workflows/update-hosted-versions
      - run: |
          find ./version/* -type d -maxdepth 0 | cut -c 11- | jq -R -s -c 'split("\n")[:-1]' > ./artifact/hosted-versions.json
          cat ./artifact/hosted-versions.json
        shell: bash

      - name: Deploy to Github Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          branch: gh-pages
          folder: ./artifact
          commit-message: Deploying to ${{ env.DEPLOYMENT_PATH }}
          clean: false # Important to keep other versions.


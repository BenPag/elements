/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */
declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }

  interface HTMLAttributes {}
}


import {
  stInput as StInput
} from './components/st-input/st-input';

declare global {
  interface HTMLStInputElement extends StInput, HTMLStencilElement {
  }
  var HTMLStInputElement: {
    prototype: HTMLStInputElement;
    new (): HTMLStInputElement;
  };
  interface HTMLElementTagNameMap {
    "st-input": HTMLStInputElement;
  }
  interface ElementTagNameMap {
    "st-input": HTMLStInputElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "st-input": JSXElements.StInputAttributes;
    }
  }
  namespace JSXElements {
    export interface StInputAttributes extends HTMLAttributes {
      stAccesskey?: string;
      stAutocomplete?: string;
      stAutofocus?: boolean;
      stDisabled?: boolean;
      stForm?: string;
      stHasError?: boolean;
      stHelperText?: string;
      stIcon?: string;
      stMaxLength?: number;
      stMaxRows?: number;
      stMultiline?: boolean;
      stName?: string;
      stPlaceholder?: string;
      stRows?: number;
      stShowCounter?: boolean;
      stSpellcheck?: boolean;
      stTabindex?: number;
      stType?: string;
      stValue?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
